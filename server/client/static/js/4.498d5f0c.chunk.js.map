{"version":3,"sources":["components/home-page/tasks-page/helpers/changeColor.js","components/home-page/tasks-page/helpers/Tasks.styled.js","components/home-page/tasks-page/helpers/statusTasksColor.js","components/home-page/tasks-page/helpers/components/CustomCheckbox.styled.js","components/home-page/tasks-page/helpers/components/CustomCheckbox.jsx","components/home-page/tasks-page/helpers/components/TaskComponent.jsx","components/home-page/tasks-page/helpers/components/ColumnTab.jsx","components/home-page/tasks-page/helpers/components/Filter.jsx","components/home-page/tasks-page/helpers/components/CreateTask.jsx","components/home-page/tasks-page/requests/getTasks.js","components/home-page/tasks-page/helpers/components/Progress.jsx","components/home-page/tasks-page/helpers/components/TabsBlock.jsx","components/home-page/tasks-page/helpers/components/TableTab.jsx","components/home-page/tasks-page/Tasks.jsx","components/home-page/tasks-page/helpers/createTagQueryString.js"],"names":["changeColor","type","TahomaWrapper","styled","div","TasksSortedStyled","HeaderBlock","props","ContentBlock","ProgressComponentStyled","status","UpperPanelFirstLayer","UpperPanelSecondLayer","TaskComponentStyled","BoldContainer","OpacityParagraph","p","BreakWordParagraph","CustomCheckboxStyled","span","active","CustomCheckbox","onClick","TaskComponent","task","setCompletedTasks","setTasks","setReservTasks","useState","setActive","onClickChangeActive","a","prev","editDoneTask","Url","_id","done","filter","complTask","uncompleTask","name","portable","contains","tags","length","map","tag","color","moment","deadline","format","text","ColumnTab","tasks","children","Filter","filterObj","Option","Select","setFilter","optionTags","setOptionTags","useEffect","getTags","getTagsFromServer","mode","onChange","event","value","CreateTask","url","setAllTasks","filterTasks","opened","setOpened","onOkOrCancel","Fragment","width","className","visible","onOk","onCancel","footer","setOpenedModal","setRelTasks","getTasks","tagsQuery","axios","get","headers","authorization","localStorage","getItem","then","res","result","data","Progress","reservTasks","completedTasks","statusTasks","TabPane","Tabs","TabsBlock","viewbagFunnel","viewbagTable","defaultActiveKey","tab","TableTab","setTodayTasks","setExpiredTasks","setTomorrowTasks","isBefore","endOf","isAfter","dataSource","complete","key","columns","title","dataIndex","render","DeleteOutlined","style","fontSize","Tasks","allTasks","expiredTasks","todayTasks","tomorrowTasks","setStatusTasks","tagQuery","el","join","createTagQueryString","filteredExpiredTasks","filteredTodayTasks","filteredTomorrowTasks","getTasksFromServer","Math","ceil"],"mappings":"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","file":"static/js/4.498d5f0c.chunk.js","sourcesContent":["export const changeColor = (type) => {\n  if (type === \"Expired\") return \"crimson\"\n  if (type === \"Today\") return \"#6290FF\"\n  if (type === \"Tomorrow\") return \"#7C9C51\"\n}","import styled from \"@emotion/styled\"\nimport {changeColor} from \"./changeColor\";\nimport {statusTasksColor} from \"./statusTasksColor\";\n\nexport const TahomaWrapper = styled.div`\n  font-family: Tahoma, sans-serief;\n`\nexport const TasksSortedStyled = styled.div`\n  display: flex;\n  color: black;\n  > div {\n    width: calc(100% / 3);\n  }\n`\nexport const HeaderBlock = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  text-align: center;\n  padding: 5px 0;\n  font-size: 20px;\n  font-weight: 600;\n  border-bottom: 4px solid ${props => changeColor(props.type)};\n  &::before {\n    position: absolute;\n    content: \"\";\n    display: inline-block;\n    bottom: -19px;\n    right: calc(50% - 8px);\n    border-right: 8px solid transparent;\n    border-left: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n    border-top: 8px solid ${props => changeColor(props.type)};\n  }\n`\nexport const ContentBlock = styled.div`\n  padding: 0 5px 0 5px;\n`\nexport const ProgressComponentStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 8px;\n  padding: 5px;\n  background: ${props => statusTasksColor(props.status)};\n  margin: 0 0 10px 0;\n  font-size: 20px;\n  p {margin: 0;}\n`\nexport const UpperPanelFirstLayer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  > div:first-of-type {\n    flex: 0 0 90%;\n  }\n`\nexport const UpperPanelSecondLayer = styled.div`\n  display: flex;\n  > .ant-select {\n    flex: 0 1 300px;\n  }\n  > button {\n    margin: 0 10px;\n  }\n`\nexport const TaskComponentStyled = styled.div`\n  background: white;\n  margin: 10px 0;\n  padding: 5px;\n  border-radius: 2px;\n  border: 1px solid ${props => changeColor(props.type)};\n  border-top: 4px solid ${props => changeColor(props.type)};\n  > p {\n    margin: 0;\n    word-break: break-word;\n  }\n`\nexport const BoldContainer = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: 600;\n`\nexport const OpacityParagraph = styled.p`\n  opacity: 0.8;\n`\nexport const BreakWordParagraph = styled.p`\n  word-break: break-word;\n`","export const statusTasksColor = (status) => {\n  if (status < 60) return \"#DC143C\"\n  if (status < 90 && status >= 60) return \"#F6CD52\"\n  if (status >= 90) return \"#7C9C51\"\n}","import styled from \"@emotion/styled\"\nimport {changeColor} from \"../changeColor\";\n\nexport const CustomCheckboxStyled = styled.span`\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 22px;\n  min-height: 22px;\n  max-width: 22px;\n  max-height: 22px;\n  background: transparent;\n  border: 1px solid ${props => changeColor(props.type)};\n  border-radius: 50%;\n  margin: 0 5px 0 0;\n  > span {\n    display: inline-block;\n    min-width: 16px;\n    min-height: 16px;\n    transition: all .2s ease;\n    background: ${props => props.active ? changeColor(props.type) : \"transparent\"};\n    border-radius: 50%;\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n`","import React from \"react\"\nimport {CustomCheckboxStyled} from \"./CustomCheckbox.styled\";\n\nexport const CustomCheckbox = ({active, onClick, type}) => {\n\n  return (\n    <CustomCheckboxStyled onClick={onClick} active={active} type={type}>\n      <span></span>\n    </CustomCheckboxStyled>\n  )\n}","import moment from \"moment\";\nimport {useState} from \"react\";\n\nimport {BoldContainer, OpacityParagraph, TaskComponentStyled} from \"../Tasks.styled\";\nimport {CustomCheckbox} from \"./CustomCheckbox\";\nimport {editDoneTask} from \"../../../student/pageStudent/chat/task-item/requests/editDoneTask\";\nimport Url from \"../../../../../url/url\";\nimport {StatusesBlock} from \"../../../sales-funnel/helpers/sales-funnel-styled\";\nimport {Tag} from \"antd\";\n\nexport const TaskComponent = ({task, type, setCompletedTasks, setTasks, setReservTasks}) => {\n\n  // useState\n  const [active, setActive] = useState(false)\n  // useState\n\n  // methods\n  const onClickChangeActive = async () => {\n    setActive(prev => prev = !prev)\n    await editDoneTask(Url, task._id, {done: true})\n    task.done = true\n    setCompletedTasks(prev => prev = [...prev, task].filter(complTask => complTask.done))\n    if (type !== \"Today\") setReservTasks(prev => prev = [...prev, task])\n    setTasks(prev => prev = prev.filter(uncompleTask => !uncompleTask.done))\n  }\n  // methods\n\n  return (\n    <TaskComponentStyled type={active ? \"Tomorrow\" : type}>\n      <BoldContainer>\n        <CustomCheckbox active={active} onClick={onClickChangeActive} type={active ? \"Tomorrow\" : type}/>\n        {task?.name}\n        <StatusesBlock portable={false} contains={task.tags.length}>\n          {task.tags.map(tag => (\n            <Tag key={tag._id} color={tag.color}>{tag.name}</Tag>\n          ))}\n        </StatusesBlock>\n      </BoldContainer>\n      <OpacityParagraph>До: {moment(task?.deadline).format(\"DD/MM/YYYY | HH:mm\")}</OpacityParagraph>\n      <p>{task?.text}</p>\n    </TaskComponentStyled>\n  )\n}","import {ContentBlock, HeaderBlock} from \"../Tasks.styled\";\nimport {TaskComponent} from \"./TaskComponent\";\n\nexport const ColumnTab = ({tasks, type, children, setReservTasks, setCompletedTasks, setTasks = () => {}}) => {\n  return (\n    <div>\n      <HeaderBlock type={type}>{children}</HeaderBlock>\n      <ContentBlock>\n        {tasks.map(task => (\n          <TaskComponent key={task._id} task={task} type={type} setCompletedTasks={setCompletedTasks} setTasks={setTasks} setReservTasks={setReservTasks}/>\n        ))}\n      </ContentBlock>\n    </div>\n  )\n}","import {useEffect, useState} from \"react\"\nimport {Select} from \"antd\"\nimport {getTags} from \"../../../student/pageStudent/chat/task-item/requests/getTags\";\nimport Url from \"../../../../../url/url\";\n\nexport const Filter = ({filterObj}) => {\n\n  // data\n  const {Option} = Select\n  const {setFilter} = filterObj\n  // data\n\n  // useState\n  const [optionTags, setOptionTags] = useState([])\n  // useState\n\n  // useEffect\n  useEffect(() => {\n    const getTagsFromServer = async () => {\n      const tags = await getTags(Url)\n      setOptionTags(prev => prev = tags)\n    }\n    getTagsFromServer()\n  }, [])\n  // useEffect\n\n  // methods\n  const onChangeFilter = (event) => {\n    setFilter(prev => prev = event)\n  }\n  // methods\n\n  return (\n    <Select mode=\"multiple\" onChange={onChangeFilter}>\n      {optionTags.map(tag => (\n        <Option key={tag._id} value={tag._id}>{tag.name}</Option>\n      ))}\n    </Select>\n  )\n}","import React, {useState} from \"react\"\nimport {Button, Modal} from \"antd\"\nimport {CreateTaskComponent} from \"../../../student/pageStudent/chat/task-item/CreateTask\";\n\nexport const CreateTask = ({ url, setAllTasks, filterTasks}) => {\n\n  // useState\n  const [opened, setOpened] = useState(false)\n  // useState\n\n  // methods\n  const onClickOpenModal = () => {\n    setOpened(prev => prev = !prev)\n  }\n  const onOkOrCancel = () => {\n    setOpened(prev => prev = false)\n  }\n  // methods\n\n  return (\n    <React.Fragment>\n      <Button type=\"primary\" onClick={onClickOpenModal}>Создать задачу</Button>\n      <Modal width={800} className=\"nonePaddingModal\" visible={opened} onOk={onOkOrCancel} onCancel={onOkOrCancel} footer={\"\"}>\n        <CreateTaskComponent setOpenedModal={setOpened} setRelTasks={setAllTasks} portable={false} filterTasks={filterTasks} />\n      </Modal>\n    </React.Fragment>\n  )\n}","import axios from \"axios\"\n\nexport const getTasks = async (url, tagsQuery = \"\") => {\n  let result\n\n  await axios.get(`${url}/CRM/Tasks/CurrentUserTasks${tagsQuery}`, {\n    headers: {\n      authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`\n    }\n  }).then(res => result = res.data)\n\n  return result\n}","import React from \"react\"\nimport {ProgressComponentStyled} from \"../Tasks.styled\"\n\nexport const Progress = ({reservTasks, completedTasks, statusTasks}) => {\n  return (\n    <ProgressComponentStyled status={statusTasks}>\n      <div></div>\n      <p>\n        {completedTasks.length}/{reservTasks.length}\n      </p>\n    </ProgressComponentStyled>\n  )\n}","import React from \"react\"\nimport {Tabs} from \"antd\";\n\nconst {TabPane} = Tabs\n\nexport const TabsBlock = ({viewbagFunnel, viewbagTable}) => {\n  return (\n    <Tabs defaultActiveKey=\"1\">\n      <TabPane tab=\"Воронка\" key=\"1\">\n        {viewbagFunnel}\n      </TabPane>\n      <TabPane tab=\"Таблица\" key=\"2\">\n        {viewbagTable}\n      </TabPane>\n    </Tabs>\n  )\n}","import {Table, Tag} from \"antd\"\nimport moment from \"moment\";\n\nimport {DeleteOutlined} from \"@ant-design/icons\"\nimport {editDoneTask} from \"../../../student/pageStudent/chat/task-item/requests/editDoneTask\";\nimport Url from \"../../../../../url/url\";\nimport {StatusesBlock} from \"../../../sales-funnel/helpers/sales-funnel-styled\";\nimport {BreakWordParagraph} from \"../Tasks.styled\";\n\nexport const TableTab = ({tasks, children, setReservTasks, setCompletedTasks, setTodayTasks, setExpiredTasks, setTomorrowTasks}) => {\n\n  // methods\n  const onClickChangeActive = async (task) => {\n    await editDoneTask(Url, task._id, {done: true})\n    task.done = true\n    setCompletedTasks(prev => {\n      prev = [...prev, task].filter(complTask => complTask.done)\n      return prev\n    })\n    const condition = moment(task.deadline).isBefore(moment().endOf(\"day\")) && moment(task.deadline).isAfter(moment().get())\n    if (!condition) setReservTasks(prev => prev = [...prev, task])\n    setExpiredTasks(prev => prev = prev.filter(uncompleTask => !uncompleTask.done))\n    setTodayTasks(prev => prev = prev.filter(uncompleTask => !uncompleTask.done))\n    setTomorrowTasks(prev => prev = prev.filter(uncompleTask => !uncompleTask.done))\n  }\n  // methods\n\n  // data\n  const dataSource = tasks.filter(task => task.done !== true).map(task => task = {\n    ...task,\n    complete: task,\n    key: task._id,\n    deadline: moment(task.deadline).format(\"DD/MM/YYYY | HH:mm\")\n  })\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"complete\",\n      key: \"complete\",\n      render: task => <DeleteOutlined style={{fontSize: \"20px\", color: \"crimson\"}}\n                                      onClick={() => onClickChangeActive(task)}/>\n    },\n    {\n      title: \"Конечный срок\",\n      dataIndex: \"deadline\",\n      key: \"deadline\",\n    },\n    {\n      title: \"Название\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Текст\",\n      dataIndex: \"text\",\n      key: \"text\",\n      render: text => (\n        <BreakWordParagraph>{text}</BreakWordParagraph>\n      )\n    },\n    {\n      title: \"Тэги\",\n      dataIndex: \"tags\",\n      key: \"tags\",\n      render: tags => (\n        <StatusesBlock portable={true} contains={tags.length}>\n          {tags.map(tag => (\n            <Tag key={tag._id} color={tag.color}>{tag.name}</Tag>\n          ))}\n        </StatusesBlock>\n      )\n    }\n  ]\n  // data\n\n  return (\n    <div>\n      <Table columns={columns} dataSource={dataSource}/>\n    </div>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport moment from \"moment\";\n\nimport {ColumnTab} from \"./helpers/components/ColumnTab\";\nimport {TahomaWrapper, TasksSortedStyled, UpperPanelFirstLayer, UpperPanelSecondLayer} from \"./helpers/Tasks.styled\";\nimport {Filter} from \"./helpers/components/Filter\";\nimport {CreateTask} from \"./helpers/components/CreateTask\";\nimport Url from \"../../../url/url\";\nimport {getTasks} from \"./requests/getTasks\";\nimport {Progress} from \"./helpers/components/Progress\";\nimport {createTagQueryString} from \"./helpers/createTagQueryString\";\nimport {TabsBlock} from \"./helpers/components/TabsBlock\";\nimport {TableTab} from \"./helpers/components/TableTab\";\n\nconst Tasks = () => {\n\n  // useState\n  const [filter, setFilter] = useState([])\n  const [allTasks, setAllTasks] = useState([])\n  const [expiredTasks, setExpiredTasks] = useState([])\n  const [todayTasks, setTodayTasks] = useState([])\n  const [completedTasks, setCompletedTasks] = useState([])\n  const [reservTasks, setReservTasks] = useState([])\n  const [tomorrowTasks, setTomorrowTasks] = useState([])\n  const [statusTasks, setStatusTasks] = useState(0)\n  // useState\n\n  // useEffect\n  useEffect(() => {\n    const tagQuery = createTagQueryString(filter)\n    const getTasksFromServer = async () => {\n      const tasks = await getTasks(Url, tagQuery)\n      const filteredExpiredTasks = tasks.filter(task => moment(task.deadline).isBefore(moment().get()))\n      const filteredTodayTasks = tasks.filter(task => (moment(task.deadline).isBefore(moment().endOf(\"day\")) && moment(task.deadline).isAfter(moment().get())))\n      const filteredTomorrowTasks = tasks.filter(task => moment(task.deadline).isAfter(moment().endOf(\"day\")))\n      setCompletedTasks(prev => prev = [...filteredTodayTasks.filter(task => task.done), ...filteredExpiredTasks.filter(task => task.done), ...filteredTomorrowTasks.filter(task => task.done)])\n      setReservTasks(prev => prev = [...filteredTodayTasks, ...filteredExpiredTasks.filter(task => task.done), ...filteredTomorrowTasks.filter(task => task.done)])\n      setExpiredTasks(prev => prev = filteredExpiredTasks.filter(task => task.done !== true))\n      setTodayTasks(prev => prev = filteredTodayTasks.filter(task => task.done !== true))\n      setTomorrowTasks(prev => prev = filteredTomorrowTasks.filter(task => task.done !== true))\n      setAllTasks(prev => prev = tasks)\n    }\n    getTasksFromServer()\n    return () => {\n      setExpiredTasks(prev => prev = [])\n      setTodayTasks(prev => prev = [])\n      setTomorrowTasks(prev => prev = [])\n      setAllTasks(prev => prev = [])\n      setCompletedTasks(prev => prev = [])\n    }\n  }, [filter])\n  useEffect(() => {\n    setStatusTasks(prev => prev = Math.ceil(completedTasks.length / reservTasks.length) * 100)\n  }, [completedTasks, reservTasks])\n  // useEffect\n\n  // methods\n  const filterTasks = (tasks) => {\n    const filteredExpiredTasks = tasks.filter(task => moment(task.deadline).isBefore(moment().get()))\n    const filteredTodayTasks = tasks.filter(task => (moment(task.deadline).isBefore(moment().endOf(\"day\")) && moment(task.deadline).isAfter(moment().get())))\n    const filteredTomorrowTasks = tasks.filter(task => moment(task.deadline).isAfter(moment().endOf(\"day\")))\n    setReservTasks(prev => prev = [...filteredTodayTasks, ...filteredExpiredTasks.filter(task => task.done), ...filteredTomorrowTasks.filter(task => task.done)])\n    setExpiredTasks(prev => prev = filteredExpiredTasks.filter(task => !task.done))\n    setTodayTasks(prev => prev = filteredTodayTasks.filter(task => !task.done))\n    setTomorrowTasks(prev => prev = filteredTomorrowTasks.filter(task => !task.done))\n    return tasks\n  }\n  // methods\n\n  // data\n  const viewbagFunnel = (\n    <TasksSortedStyled>\n      <ColumnTab tasks={expiredTasks} type=\"Expired\" setCompletedTasks={setCompletedTasks}\n                 setTasks={setExpiredTasks} setReservTasks={setReservTasks}>Просроченные задачи</ColumnTab>\n      <ColumnTab tasks={todayTasks} type=\"Today\" setCompletedTasks={setCompletedTasks} setTasks={setTodayTasks}>\n        Задачи на сегодня</ColumnTab>\n      <ColumnTab tasks={tomorrowTasks} type=\"Tomorrow\" setCompletedTasks={setCompletedTasks}\n                 setTasks={setTomorrowTasks} setReservTasks={setReservTasks}>Задачи на завтра</ColumnTab>\n    </TasksSortedStyled>\n  )\n  const viewbagTable = (\n    <React.Fragment>\n      <TableTab tasks={allTasks} setReservTasks={setReservTasks} setCompletedTasks={setCompletedTasks}\n                setTodayTasks={setTodayTasks} setExpiredTasks={setExpiredTasks} setTomorrowTasks={setTomorrowTasks}>\n        Задачи на сегодня</TableTab>\n    </React.Fragment>\n  )\n  // data\n\n  return (\n    <TahomaWrapper>\n      <UpperPanelFirstLayer>\n        <Progress reservTasks={reservTasks} completedTasks={completedTasks} statusTasks={statusTasks} />\n      </UpperPanelFirstLayer>\n      <UpperPanelSecondLayer>\n        <Filter filterObj={{filter, setFilter}}/>\n        <CreateTask url={Url} filterTasks={filterTasks} setAllTasks={setAllTasks}/>\n      </UpperPanelSecondLayer>\n      <TabsBlock viewbagFunnel={viewbagFunnel} viewbagTable={viewbagTable}/>\n    </TahomaWrapper>\n  )\n}\n\nexport default Tasks","export const createTagQueryString = (filter) => {\n  if (!filter.length) return \"\"\n  if (filter.length === 1) return `?tag=${filter[0]}`\n  return `?tag=${filter[0]}${filter.filter(el => el !== filter[0]).map(el => el = `&tag=${el}`).join(\"\")}`\n}"],"sourceRoot":""}