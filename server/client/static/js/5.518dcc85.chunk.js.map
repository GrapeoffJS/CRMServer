{"version":3,"sources":["components/home-page/tasks-page/helpers/changeColor.js","components/home-page/tasks-page/helpers/Tasks.styled.js","components/home-page/tasks-page/helpers/statusTasksColor.js","components/home-page/tasks-page/helpers/components/CustomCheckbox.styled.js","components/home-page/tasks-page/helpers/components/CustomCheckbox.jsx","components/home-page/tasks-page/helpers/components/TaskComponent.jsx","components/home-page/tasks-page/helpers/components/ColumnTab.jsx","components/home-page/tasks-page/helpers/components/Filter.jsx","components/home-page/tasks-page/helpers/components/CreateTask.jsx","components/home-page/tasks-page/requests/getTasks.js","components/home-page/tasks-page/helpers/components/Progress.jsx","components/home-page/tasks-page/helpers/components/TabsBlock.jsx","components/home-page/tasks-page/helpers/components/TableTab.jsx","components/home-page/tasks-page/Tasks.jsx","components/home-page/tasks-page/helpers/createTagQueryString.js"],"names":["changeColor","type","TahomaWrapper","styled","div","TasksSortedStyled","HeaderBlock","props","ContentBlock","ProgressComponentStyled","status","UpperPanelFirstLayer","UpperPanelSecondLayer","TaskComponentStyled","BoldContainer","OpacityParagraph","p","BreakWordParagraph","CustomCheckboxStyled","span","active","CustomCheckbox","onClick","TaskComponent","task","setCompletedTasks","setTasks","setReservTasks","useState","setActive","onClickChangeActive","a","prev","editDoneTask","Url","_id","done","filter","complTask","uncompleTask","for","to","name","portable","contains","tags","length","map","tag","color","moment","deadline","format","text","ColumnTab","tasks","children","Filter","filterObj","Option","Select","setFilter","optionTags","setOptionTags","useEffect","getTags","getTagsFromServer","mode","onChange","event","value","CreateTask","url","setAllTasks","filterTasks","opened","setOpened","onOkOrCancel","Fragment","width","className","visible","onOk","onCancel","footer","setOpenedModal","setRelTasks","getTasks","tagsQuery","axios","get","headers","authorization","localStorage","getItem","then","res","result","data","Progress","reservTasks","completedTasks","statusTasks","TabPane","Tabs","TabsBlock","viewbagFunnel","viewbagTable","defaultActiveKey","tab","TableTab","setTodayTasks","setExpiredTasks","setTomorrowTasks","isBefore","endOf","isAfter","dataSource","complete","forLink","key","columns","title","dataIndex","render","DeleteOutlined","style","fontSize","Tasks","allTasks","expiredTasks","todayTasks","tomorrowTasks","setStatusTasks","tagQuery","el","join","createTagQueryString","filteredExpiredTasks","filteredTodayTasks","filteredTomorrowTasks","getTasksFromServer","Math","round"],"mappings":"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","file":"static/js/5.518dcc85.chunk.js","sourcesContent":["export const changeColor = (type) => {\n  if (type === \"Expired\") return \"crimson\"\n  if (type === \"Today\") return \"#6290FF\"\n  if (type === \"Tomorrow\") return \"#7C9C51\"\n}","import styled from \"@emotion/styled\"\nimport {changeColor} from \"./changeColor\";\nimport {statusTasksColor} from \"./statusTasksColor\";\n\nexport const TahomaWrapper = styled.div`\n  font-family: Tahoma, sans-serief;\n`\nexport const TasksSortedStyled = styled.div`\n  display: flex;\n  color: black;\n  > div {\n    width: calc(100% / 3);\n  }\n`\nexport const HeaderBlock = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  text-align: center;\n  padding: 5px 0;\n  font-size: 20px;\n  font-weight: 600;\n  border-bottom: 4px solid ${props => changeColor(props.type)};\n  &::before {\n    position: absolute;\n    content: \"\";\n    display: inline-block;\n    bottom: -19px;\n    right: calc(50% - 8px);\n    border-right: 8px solid transparent;\n    border-left: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n    border-top: 8px solid ${props => changeColor(props.type)};\n  }\n`\nexport const ContentBlock = styled.div`\n  padding: 0 5px 0 5px;\n`\nexport const ProgressComponentStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 8px;\n  padding: 5px;\n  background: ${props => statusTasksColor(props.status)};\n  margin: 0 0 10px 0;\n  font-size: 20px;\n  p {margin: 0;}\n`\nexport const UpperPanelFirstLayer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  > div:first-of-type {\n    flex: 0 0 90%;\n  }\n`\nexport const UpperPanelSecondLayer = styled.div`\n  display: flex;\n  > .ant-select {\n    flex: 0 1 300px;\n  }\n  > button {\n    margin: 0 10px;\n  }\n`\nexport const TaskComponentStyled = styled.div`\n  background: white;\n  margin: 10px 0;\n  padding: 5px;\n  border-radius: 2px;\n  border: 1px solid ${props => changeColor(props.type)};\n  border-top: 4px solid ${props => changeColor(props.type)};\n  > p {\n    margin: 0;\n    word-break: break-word;\n  }\n`\nexport const BoldContainer = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: 600;\n`\nexport const OpacityParagraph = styled.p`\n  opacity: 0.8;\n`\nexport const BreakWordParagraph = styled.p`\n  word-break: break-word;\n`","export const statusTasksColor = (status) => {\n  if (status < 60) return \"#DC143C\"\n  if (status < 90 && status >= 60) return \"#F6CD52\"\n  if (status >= 90) return \"#7C9C51\"\n}","import styled from \"@emotion/styled\"\nimport {changeColor} from \"../changeColor\";\n\nexport const CustomCheckboxStyled = styled.span`\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 22px;\n  min-height: 22px;\n  max-width: 22px;\n  max-height: 22px;\n  background: transparent;\n  border: 1px solid ${props => changeColor(props.type)};\n  border-radius: 50%;\n  margin: 0 5px 0 0;\n  > span {\n    display: inline-block;\n    min-width: 16px;\n    min-height: 16px;\n    transition: all .2s ease;\n    background: ${props => props.active ? changeColor(props.type) : \"transparent\"};\n    border-radius: 50%;\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n`","import React from \"react\"\nimport {CustomCheckboxStyled} from \"./CustomCheckbox.styled\";\n\nexport const CustomCheckbox = ({active, onClick, type}) => {\n\n  return (\n    <CustomCheckboxStyled onClick={onClick} active={active} type={type}>\n      <span></span>\n    </CustomCheckboxStyled>\n  )\n}","import moment from \"moment\";\nimport {useState} from \"react\";\n\nimport {BoldContainer, OpacityParagraph, TaskComponentStyled} from \"../Tasks.styled\";\nimport {CustomCheckbox} from \"./CustomCheckbox\";\nimport {editDoneTask} from \"../../../student/pageStudent/chat/task-item/requests/editDoneTask\";\nimport Url from \"../../../../../url/url\";\nimport {StatusesBlock} from \"../../../sales-funnel/helpers/sales-funnel-styled\";\nimport {Tag} from \"antd\";\nimport {NavLink} from \"react-router-dom\";\n\nexport const TaskComponent = ({task, type, setCompletedTasks, setTasks, setReservTasks}) => {\n\n  // useState\n  const [active, setActive] = useState(false)\n  // useState\n\n  // methods\n  const onClickChangeActive = async () => {\n    setActive(prev => prev = !prev)\n    await editDoneTask(Url, task._id, {done: true})\n    task.done = true\n    setCompletedTasks(prev => prev = [...prev, task].filter(complTask => complTask.done))\n    if (type !== \"Today\") setReservTasks(prev => prev = [...prev, task])\n    setTasks(prev => prev = prev.filter(uncompleTask => !uncompleTask.done))\n  }\n  // methods\n\n  return (\n    <TaskComponentStyled type={active ? \"Tomorrow\" : type}>\n      <BoldContainer>\n        <CustomCheckbox active={active} onClick={onClickChangeActive} type={active ? \"Tomorrow\" : type}/>\n        {task.for ? <NavLink to={`/student/${task?.for || \"\"}`}>{task.name}</NavLink> : task.name}\n        <StatusesBlock portable={false} contains={task.tags.length}>\n          {task.tags.map(tag => (\n            <Tag key={tag._id} color={tag.color}>{tag.name}</Tag>\n          ))}\n        </StatusesBlock>\n      </BoldContainer>\n      <OpacityParagraph>До: {moment(task?.deadline).format(\"DD/MM/YYYY | HH:mm\")}</OpacityParagraph>\n      <p>{task?.text}</p>\n    </TaskComponentStyled>\n  )\n}","import { ContentBlock, HeaderBlock } from '../Tasks.styled'\nimport { TaskComponent } from './TaskComponent'\n\nexport const ColumnTab = ({\n  tasks,\n  type,\n  children,\n  setReservTasks,\n  setCompletedTasks,\n  setTasks = () => {},\n}) => {\n  return (\n    <div>\n      <HeaderBlock type={type}>{children}</HeaderBlock>\n      <ContentBlock>\n        {tasks.map((task) => (\n          <TaskComponent\n            key={task._id}\n            task={task}\n            type={type}\n            setCompletedTasks={setCompletedTasks}\n            setTasks={setTasks}\n            setReservTasks={setReservTasks}\n          />\n        ))}\n      </ContentBlock>\n    </div>\n  )\n}\n","import {useEffect, useState} from \"react\"\nimport {Select} from \"antd\"\nimport {getTags} from \"../../../student/pageStudent/chat/task-item/requests/getTags\";\nimport Url from \"../../../../../url/url\";\n\nexport const Filter = ({filterObj}) => {\n\n  // data\n  const {Option} = Select\n  const {setFilter} = filterObj\n  // data\n\n  // useState\n  const [optionTags, setOptionTags] = useState([])\n  // useState\n\n  // useEffect\n  useEffect(() => {\n    const getTagsFromServer = async () => {\n      const tags = await getTags(Url)\n      setOptionTags(prev => prev = tags)\n    }\n    getTagsFromServer()\n  }, [])\n  // useEffect\n\n  // methods\n  const onChangeFilter = (event) => {\n    setFilter(prev => prev = event)\n  }\n  // methods\n\n  return (\n    <Select mode=\"multiple\" onChange={onChangeFilter}>\n      {optionTags.map(tag => (\n        <Option key={tag._id} value={tag._id}>{tag.name}</Option>\n      ))}\n    </Select>\n  )\n}","import React, {useState} from \"react\"\nimport {Button, Modal} from \"antd\"\nimport {CreateTaskComponent} from \"../../../student/pageStudent/chat/task-item/CreateTask\";\n\nexport const CreateTask = ({url, setAllTasks, filterTasks}) => {\n\n  // useState\n  const [opened, setOpened] = useState(false)\n  // useState\n\n  // methods\n  const onClickOpenModal = () => {\n    setOpened(prev => prev = !prev)\n  }\n  const onOkOrCancel = () => {\n    setOpened(prev => prev = false)\n  }\n  // methods\n\n  return (\n    <React.Fragment>\n      <Button type=\"primary\" onClick={onClickOpenModal}>Создать задачу</Button>\n      <Modal width={800} className=\"nonePaddingModal\" visible={opened} onOk={onOkOrCancel} onCancel={onOkOrCancel}\n             footer={\"\"}>\n        <CreateTaskComponent setOpenedModal={setOpened} setRelTasks={setAllTasks} portable={false}\n                             filterTasks={filterTasks}/>\n      </Modal>\n    </React.Fragment>\n  )\n}","import axios from \"axios\"\n\nexport const getTasks = async (url, tagsQuery = \"\") => {\n  let result\n\n  await axios.get(`${url}/CRM/Tasks/CurrentUserTasks${tagsQuery}`, {\n    headers: {\n      authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`\n    }\n  }).then(res => result = res.data)\n\n  return result\n}","import React from \"react\"\nimport {ProgressComponentStyled} from \"../Tasks.styled\"\n\nexport const Progress = ({reservTasks, completedTasks, statusTasks}) => {\n  return (\n    <ProgressComponentStyled status={statusTasks}>\n      <div></div>\n      <p>\n        {completedTasks.length}/{reservTasks.length}\n      </p>\n    </ProgressComponentStyled>\n  )\n}","import React from \"react\"\nimport {Tabs} from \"antd\";\n\nconst {TabPane} = Tabs\n\nexport const TabsBlock = ({viewbagFunnel, viewbagTable}) => {\n  return (\n    <Tabs defaultActiveKey=\"1\">\n      <TabPane tab=\"Воронка\" key=\"1\">\n        {viewbagFunnel}\n      </TabPane>\n      <TabPane tab=\"Таблица\" key=\"2\">\n        {viewbagTable}\n      </TabPane>\n    </Tabs>\n  )\n}","import { Table, Tag } from 'antd'\nimport moment from 'moment'\n\nimport { DeleteOutlined } from '@ant-design/icons'\nimport { editDoneTask } from '../../../student/pageStudent/chat/task-item/requests/editDoneTask'\nimport Url from '../../../../../url/url'\nimport { StatusesBlock } from '../../../sales-funnel/helpers/sales-funnel-styled'\nimport { BreakWordParagraph } from '../Tasks.styled'\nimport { NavLink } from 'react-router-dom'\n\nexport const TableTab = ({\n  tasks,\n  children,\n  setReservTasks,\n  setCompletedTasks,\n  setTodayTasks,\n  setExpiredTasks,\n  setTomorrowTasks,\n}) => {\n  // methods\n  const onClickChangeActive = async (task) => {\n    await editDoneTask(Url, task._id, { done: true })\n    task.done = true\n    setCompletedTasks((prev) => {\n      prev = [...prev, task].filter((complTask) => complTask.done)\n      return prev\n    })\n    const condition =\n      moment(task.deadline).isBefore(moment().endOf('day')) &&\n      moment(task.deadline).isAfter(moment().get())\n    if (!condition) setReservTasks((prev) => (prev = [...prev, task]))\n    setExpiredTasks(\n      (prev) => (prev = prev.filter((uncompleTask) => !uncompleTask.done))\n    )\n    setTodayTasks(\n      (prev) => (prev = prev.filter((uncompleTask) => !uncompleTask.done))\n    )\n    setTomorrowTasks(\n      (prev) => (prev = prev.filter((uncompleTask) => !uncompleTask.done))\n    )\n  }\n  // methods\n\n  // data\n  const dataSource = tasks\n    .filter((task) => task.done !== true)\n    .map(\n      (task) =>\n        (task = {\n          ...task,\n          complete: task,\n          forLink: { for: task.for, name: task.name },\n          key: task._id,\n          deadline: moment(task.deadline).format('DD/MM/YYYY | HH:mm'),\n        })\n    )\n  const columns = [\n    {\n      title: '',\n      dataIndex: 'complete',\n      key: 'complete',\n      render: (task) => (\n        <DeleteOutlined\n          style={{ fontSize: '20px', color: 'crimson' }}\n          onClick={() => onClickChangeActive(task)}\n        />\n      ),\n    },\n    {\n      title: 'Конечный срок',\n      dataIndex: 'deadline',\n      key: 'deadline',\n    },\n    {\n      title: 'Название',\n      dataIndex: 'forLink',\n      key: 'forLink',\n      render: (task) => {\n        return task.for ? (\n          <NavLink to={`/student/${task?.for || ''}`}>{task.name}</NavLink>\n        ) : (\n          <span>{task.name}</span>\n        )\n      },\n    },\n    {\n      title: 'Текст',\n      dataIndex: 'text',\n      key: 'text',\n      render: (text) => <BreakWordParagraph>{text}</BreakWordParagraph>,\n    },\n    {\n      title: 'Тэги',\n      dataIndex: 'tags',\n      key: 'tags',\n      render: (tags) => (\n        <StatusesBlock portable={true} contains={tags.length}>\n          {tags.map((tag) => (\n            <Tag key={tag._id} color={tag.color}>\n              {tag.name}\n            </Tag>\n          ))}\n        </StatusesBlock>\n      ),\n    },\n  ]\n  // data\n\n  return (\n    <div>\n      <Table columns={columns} dataSource={dataSource} />\n    </div>\n  )\n}\n","import React, {useEffect, useState} from \"react\";\nimport moment from \"moment\";\n\nimport {ColumnTab} from \"./helpers/components/ColumnTab\";\nimport {TahomaWrapper, TasksSortedStyled, UpperPanelFirstLayer, UpperPanelSecondLayer} from \"./helpers/Tasks.styled\";\nimport {Filter} from \"./helpers/components/Filter\";\nimport {CreateTask} from \"./helpers/components/CreateTask\";\nimport Url from \"../../../url/url\";\nimport {getTasks} from \"./requests/getTasks\";\nimport {Progress} from \"./helpers/components/Progress\";\nimport {createTagQueryString} from \"./helpers/createTagQueryString\";\nimport {TabsBlock} from \"./helpers/components/TabsBlock\";\nimport {TableTab} from \"./helpers/components/TableTab\";\nimport {useToggle} from \"../../../hooks/useToggle\";\n\nconst Tasks = () => {\n\n  // useState\n  const [filter, setFilter] = useState([])\n  const [allTasks, setAllTasks] = useState([])\n  const [expiredTasks, setExpiredTasks] = useState([])\n  const [todayTasks, setTodayTasks] = useState([])\n  const [completedTasks, setCompletedTasks] = useState([])\n  const [reservTasks, setReservTasks] = useState([])\n  const [tomorrowTasks, setTomorrowTasks] = useState([])\n  const [statusTasks, setStatusTasks] = useState(0)\n  // useState\n\n  // useEffect\n  useEffect(() => {\n    const tagQuery = createTagQueryString(filter)\n    const getTasksFromServer = async () => {\n      const tasks = await getTasks(Url, tagQuery)\n      const filteredExpiredTasks = tasks.filter(task => moment(task.deadline).isBefore(moment().get()))\n      const filteredTodayTasks = tasks.filter(task => (moment(task.deadline).isBefore(moment().endOf(\"day\")) && moment(task.deadline).isAfter(moment().get())))\n      const filteredTomorrowTasks = tasks.filter(task => moment(task.deadline).isAfter(moment().endOf(\"day\")))\n      setCompletedTasks(prev => prev = [...filteredTodayTasks.filter(task => task.done), ...filteredTomorrowTasks.filter(task => task.done)])\n      setReservTasks(prev => prev = [...filteredTodayTasks, ...filteredTomorrowTasks.filter(task => task.done)])\n      setExpiredTasks(prev => prev = filteredExpiredTasks.filter(task => !task.done))\n      setTodayTasks(prev => prev = filteredTodayTasks.filter(task => !task.done))\n      setTomorrowTasks(prev => prev = filteredTomorrowTasks.filter(task => !task.done))\n      setAllTasks(prev => prev = tasks)\n    }\n    getTasksFromServer()\n    return () => {\n      setExpiredTasks(prev => prev = [])\n      setTodayTasks(prev => prev = [])\n      setTomorrowTasks(prev => prev = [])\n      setAllTasks(prev => prev = [])\n      setCompletedTasks(prev => prev = [])\n    }\n  }, [filter])\n  useEffect(() => {\n    setStatusTasks(prev => prev = reservTasks.length ? Math.round(completedTasks.length / reservTasks.length * 100) : 100)\n  }, [completedTasks, reservTasks])\n  // useEffect\n\n  // methods\n  const filterTasks = (tasks) => {\n    const filteredExpiredTasks = tasks.filter(task => moment(task.deadline).isBefore(moment().get()))\n    const filteredTodayTasks = tasks.filter(task => (moment(task.deadline).isBefore(moment().endOf(\"day\")) && moment(task.deadline).isAfter(moment().get())))\n    const filteredTomorrowTasks = tasks.filter(task => moment(task.deadline).isAfter(moment().endOf(\"day\")))\n    setReservTasks(prev => prev = [...filteredTodayTasks, ...filteredExpiredTasks.filter(task => task.done), ...filteredTomorrowTasks.filter(task => task.done)])\n    setExpiredTasks(prev => prev = filteredExpiredTasks.filter(task => !task.done))\n    setTodayTasks(prev => prev = filteredTodayTasks.filter(task => !task.done))\n    setTomorrowTasks(prev => prev = filteredTomorrowTasks.filter(task => !task.done))\n    return tasks\n  }\n  // methods\n\n  // data\n  const viewbagFunnel = (\n    <TasksSortedStyled>\n      <ColumnTab tasks={expiredTasks} type=\"Expired\" setCompletedTasks={setCompletedTasks}\n                 setTasks={setExpiredTasks} setReservTasks={setReservTasks}>Просроченные задачи</ColumnTab>\n      <ColumnTab tasks={todayTasks} type=\"Today\" setCompletedTasks={setCompletedTasks} setTasks={setTodayTasks}>\n        Задачи на сегодня</ColumnTab>\n      <ColumnTab tasks={tomorrowTasks} type=\"Tomorrow\" setCompletedTasks={setCompletedTasks}\n                 setTasks={setTomorrowTasks} setReservTasks={setReservTasks}>Задачи на завтра</ColumnTab>\n    </TasksSortedStyled>\n  )\n  const viewbagTable = (\n    <React.Fragment>\n      <TableTab tasks={allTasks} setReservTasks={setReservTasks} setCompletedTasks={setCompletedTasks}\n                setTodayTasks={setTodayTasks} setExpiredTasks={setExpiredTasks} setTomorrowTasks={setTomorrowTasks}>\n        Задачи на сегодня</TableTab>\n    </React.Fragment>\n  )\n  // data\n\n  return (\n    <TahomaWrapper>\n      <UpperPanelFirstLayer>\n        <Progress reservTasks={reservTasks} completedTasks={completedTasks} statusTasks={statusTasks}/>\n      </UpperPanelFirstLayer>\n      <UpperPanelSecondLayer>\n        <Filter filterObj={{filter, setFilter}}/>\n        <CreateTask url={Url} filterTasks={filterTasks} setAllTasks={setAllTasks}/>\n      </UpperPanelSecondLayer>\n      <TabsBlock viewbagFunnel={viewbagFunnel} viewbagTable={viewbagTable}/>\n    </TahomaWrapper>\n  )\n}\n\nexport default Tasks","export const createTagQueryString = (filter) => {\n  if (!filter.length) return \"\"\n  if (filter.length === 1) return `?tag=${filter[0]}`\n  return `?tag=${filter[0]}${filter.filter(el => el !== filter[0]).map(el => el = `&tag=${el}`).join(\"\")}`\n}"],"sourceRoot":""}