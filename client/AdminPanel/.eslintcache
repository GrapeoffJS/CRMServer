[{"D:\\Access-crm\\src\\index.js":"1","D:\\Access-crm\\src\\components\\#home\\home-page.js":"2","D:\\Access-crm\\src\\components\\app\\navigation\\navigation.js":"3","D:\\Access-crm\\src\\components\\saubscriptions\\subscriptions.js":"4","D:\\Access-crm\\src\\components\\app\\app.js":"5","D:\\Access-crm\\src\\components\\teacher\\teacher.js":"6","D:\\Access-crm\\src\\components\\role-creation\\role-creation.js":"7","D:\\Access-crm\\src\\components\\all-employees\\all-employees.js":"8","D:\\Access-crm\\src\\components\\app\\navigation\\sidebar\\sidebar.js":"9","D:\\Access-crm\\src\\components\\app\\navigation\\header\\header.js":"10","D:\\Access-crm\\src\\alert\\alert.js":"11","D:\\Access-crm\\src\\components\\saubscriptions\\addSubscriptions\\addSubscriptions.js":"12","D:\\Access-crm\\src\\url\\url.js":"13","D:\\Access-crm\\src\\components\\#function\\pagination\\pagination.js":"14","D:\\Access-crm\\src\\components\\teacher\\formTeacher\\formTeacher.js":"15","D:\\Access-crm\\src\\components\\all-employees\\get-possibilities\\get-possibilities.js":"16","D:\\Access-crm\\src\\components\\role-creation\\get-permissions-list\\get-permissions-list.js":"17","D:\\Access-crm\\src\\components\\role-creation\\modal-role-creation\\modal-role-creation.js":"18","D:\\Access-crm\\src\\components\\sales-funnel\\sales-funnel.js":"19","D:\\Access-crm\\src\\components\\sales-funnel\\change-funnel\\change-funnel.js":"20","D:\\Access-crm\\src\\components\\error-handler\\error-handler.js":"21","D:\\Access-crm\\src\\#localStorage_change.js":"22"},{"size":208,"mtime":1629998259334,"results":"23","hashOfConfig":"24"},{"size":1259,"mtime":1630000190527,"results":"25","hashOfConfig":"24"},{"size":523,"mtime":1629961056000,"results":"26","hashOfConfig":"24"},{"size":2041,"mtime":1633106480128,"results":"27","hashOfConfig":"24"},{"size":15785,"mtime":1633969321368,"results":"28","hashOfConfig":"24"},{"size":3658,"mtime":1629961056000,"results":"29","hashOfConfig":"24"},{"size":3710,"mtime":1629961056000,"results":"30","hashOfConfig":"24"},{"size":3067,"mtime":1629961056000,"results":"31","hashOfConfig":"24"},{"size":5237,"mtime":1629999650967,"results":"32","hashOfConfig":"24"},{"size":770,"mtime":1629961056000,"results":"33","hashOfConfig":"24"},{"size":1510,"mtime":1631379853987,"results":"34","hashOfConfig":"24"},{"size":2097,"mtime":1631728565243,"results":"35","hashOfConfig":"24"},{"size":129,"mtime":1634237340596,"results":"36","hashOfConfig":"24"},{"size":1335,"mtime":1629961056000,"results":"37","hashOfConfig":"24"},{"size":6358,"mtime":1631376305275,"results":"38","hashOfConfig":"24"},{"size":3480,"mtime":1630063711752,"results":"39","hashOfConfig":"24"},{"size":4406,"mtime":1633973878237,"results":"40","hashOfConfig":"24"},{"size":8617,"mtime":1633973878310,"results":"41","hashOfConfig":"24"},{"size":6250,"mtime":1631724205148,"results":"42","hashOfConfig":"24"},{"size":1713,"mtime":1631471689503,"results":"43","hashOfConfig":"24"},{"size":1232,"mtime":1633976447165,"results":"44","hashOfConfig":"24"},{"size":163,"mtime":1622534340313,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"gpxlkv",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\Access-crm\\src\\index.js",[],["103","104"],"D:\\Access-crm\\src\\components\\#home\\home-page.js",["105","106","107"],"import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Account from './../app/app.js';\nimport Navigation from './../app/navigation/navigation.js';\nimport Subscriptions from './../saubscriptions/subscriptions.js';\nimport Teacher from './../teacher/teacher.js';\nimport AllEmployees from './../all-employees/all-employees.js'\nimport RoleCreation from './../role-creation/role-creation.js'\nimport SalesFunnel from './../sales-funnel/sales-funnel.js'\n\nimport styled from '@emotion/styled';\n\t\nconst HomePage = () => {\n\n\tconst breakpoints = [700],\n\tmq = breakpoints.map(\n\t\tbp => `@media (max-width: ${bp}px)`\n\t);\n\n\tconst GlavPage = styled.div({\n\t\tmarginLeft: '100px',\n\t\t[mq[0]]: {\n\t\t\tmarginLeft: '0'\n\t\t}\n\t})\n\n\treturn (\n\t\t<Router>\n\t\t\t<Navigation/>\n\t\t\t<GlavPage>\n\t\t\t\t<Route exact path='/subscriptions' component={Subscriptions}/>\n\t\t\t\t<Route exact path='/account' component={Account}/>\n\t\t\t\t<Route exact path='/teacher' component={Teacher}/>\n\t\t\t\t<Route exact path='/allemployees' component={AllEmployees}/>\n\t\t\t\t<Route exact path='/roleCreation' component={RoleCreation}/>\n\t\t\t\t<Route exact path='/sales-funnel' component={SalesFunnel}/>\n\t\t\t</GlavPage>\n\t\t</Router>\n\t);\n}\n\nexport default HomePage;","D:\\Access-crm\\src\\components\\app\\navigation\\navigation.js",[],"D:\\Access-crm\\src\\components\\saubscriptions\\subscriptions.js",[],"D:\\Access-crm\\src\\components\\app\\app.js",["108","109","110"],"import React, {useState, useEffect} from 'react';\nimport url from './../../url/url.js';\n\nimport Pagination from './../#function/pagination/pagination.js'\n\n\nimport styled from '@emotion/styled';\n\nimport './app.css';\nimport errorHandler from \"../error-handler/error-handler\";\n\nconst App = () => {\n\n    const axios = require('axios'); // AJAX\n\n    const [Role, setRole] = useState([])\n\n    const [offsetG, setOffsetG] = useState(0)\n    const [Count, setCount] = useState(1)\n\n    const [users, setUsers] = useState([\n        {name: 'Список пуст', surname: '', midname: '', login: '', role: ''}\n    ]);\n\n    const [modalForm2, setModalForm2] = useState(''); // modal-form2\n    const [overflowScroll, setOverflowScroll] = useState('overflow-auto'); // overflow-auto\n\n    // Данные из input\n    const [dataInp, setDataInp] = useState({});\n\n    let alertWarning = (\n        <div className=\"alert alert-warning\" role=\"alert\">\n            Загрузка...\n        </div>\n    );\n    let alertSuccess = (\n        <div className=\"alert alert-success\" role=\"alert\">\n            Готово!\n        </div>\n    );\n    const [alert, setAlert] = useState(\"\");\n    const [alertModal, setAlertModal] = useState(\"\");\n\n    // Style\n    const [InputBorder, set_I_Border] = useState('');\n\n    const update = (offset = 0) => {\n\n        setAlert(alertWarning);\n        fetch(`${url}/AdminPanel/CRMAccounts?limit=10&offset=${offset}&accountType=admin&accountType=manager&accountType=support&accountType=partner&accountType=senior-teacher`, {\n            method: 'GET',\n            header: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n            .then((response) => {\n                return response.json()\n                setCount(response.headers.count)\n            })\n            .then((data) => {\n                setAlert('');\n                setUsers(data);\n            });\n    };\n\n    const getRole = () => {\n\n        axios({\n            method: 'get',\n            url: `${url}/AdminPanel/Roles`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n        })\n            .then((res) => {\n                setRole(res.data)\n            })\n            .catch(error => {\n                if (error.response) {\n                }\n            })\n    }\n\n    useEffect(() => {\n        update()\n        getRole()\n    }, []);\n\n    console.log(users)\n\n    let tableUser = users.map((item) => {\n\n        const trashUser = () => {\n\n            setAlert(alertWarning);\n\n            fetch(`${url}/AdminPanel/CRMAccounts/${item.login}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                }\n            })\n                .then((dataJson) => {\n                    console.log(dataJson);\n                })\n                .then(() => {\n                    setAlert('');\n                    update();\n                });\n        };\n\n        return (\n            <tr key={item.login}>\n                <td className=\"td-trash\" scope=\"row\">\n                    <i onClick={trashUser} className=\"bi bi-trash\" style={{fontSize: '30px', color: '#F56767'}}></i>\n                </td>\n                <td className=\"align-middle td-use\">{item.name}</td>\n                <td className=\"align-middle td-use\">{item.surname}</td>\n                <td className=\"align-middle td-use\">{item.midname}</td>\n                <td className=\"align-middle td-use\">{item.login}</td>\n                <td className=\"align-middle td-use\">{item.accountType}</td>\n            </tr>\n        );\n    });\n\n    let dataInput = {\n        name: dataInp.name,\n        surname: dataInp.surname,\n        midname: dataInp.midname,\n        login: dataInp.login,\n        password: dataInp.password,\n        role: dataInp.role,\n        accountType: dataInp.accountType\n    };\n\n    const formSubmit = (e) => {\n\n        setDataInp(dataInput);\n\n        setAlertModal(alertWarning);\n        setModalForm2('modal-form2');\n\n        let {name, surname, midname, login, password, role, accountType} = dataInput;\n\n\n        fetch(`${url}/AdminPanel/CRMAccounts`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({\n                name: name,\n                surname: surname,\n                midname: midname,\n                login: login,\n                password: password,\n                accountType: accountType,\n                role: role\n            })\n        })\n            .then((data) => {\n                if (data.message === 'THIS_USER_EXISTS') {\n                    set_I_Border(' border-red');\n                    setAlertModal('');\n                } else {\n                    setAlertModal(alertSuccess);\n                    e.target.reset();\n                    update();\n                }\n\n                document.querySelector('.btn-close').click() // Закрыть модальное окно\n            })\n            .catch(error => {\n                errorHandler(formSubmit, error)\n            })\n\n        e.preventDefault();\n    };\n\n    const optionRole = Role.map(role => (\n        <option key={role._id} value={role._id}>{role.name}</option>\n    ))\n\n    const AddAcaunt = styled.div({\n        '.h3Ac, .boxAdd': {\n            display: 'inline-block'\n        },\n        '.boxAdd': {\n            marginLeft: '10px'\n        }\n    })\n\n    return (\n        <>\n            <AddAcaunt className={`container`}>\n                <div className=\"row\">\n                    <div className={`table_user ${overflowScroll}`}>\n                        <h3 className=\"h3Ac\">Аккаунты</h3>\n                        <div className=\"boxAdd\">\n                            <div className=\"d-flex plus-box\">\n                                <i className=\"bi bi-person-circle\" style={{fontSize: '30px', color: '#0498FA'}}></i>\n                                <div\n                                    onClick={() => {\n                                        setOverflowScroll('overflowH');\n                                    }}\n                                    className=\"nav-item plus\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n                                    <i className=\"bi bi-plus\" style={{fontSize: '30px', color: '#F56767'}}></i>\n                                </div>\n                            </div>\n                        </div>\n                        {alert}\n                        <table className=\"table table-striped\">\n                            <thead>\n                            <tr>\n                                <th className=\"th-h\" scope=\"col\"></th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Имя</th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Фамилия</th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Отчество</th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Логин</th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Тип аккаунта</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {tableUser}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Pagination getItem={update} count={Count} offset={offsetG} setOffset={setOffsetG}/>\n                </div>\n            </AddAcaunt>\n\n            <div className=\"modal fade\" tabIndex=\"-1\" id=\"exampleModal\">\n                <div className=\"modal-dialog modal-lg\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Создать новый аккаунт</h5>\n                            <button\n                                onClick={() => {\n                                    setDataInp(dataInput);\n                                    setAlertModal('');\n                                    setModalForm2('');\n                                    setOverflowScroll('overflow-auto');\n                                }}\n                                type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                            </button>\n                        </div>\n                        <div className=\"alert-modal\">\n                            {alertModal}\n                        </div>\n                        <form className={modalForm2} action=\"#\" method=\"post\"\n                              onSubmit={formSubmit}>\n                            <div className=\"modal-body\">\n                                <div className=\"row mb-3\">\n                                    <label htmlFor=\"inputSirname\"\n                                           className=\"fs-5 col-sm-2 col-form-label\">Фамилия</label>\n                                    <div className=\"col-sm-10\">\n                                        <input\n                                            onChange={(e) => {\n                                                dataInput.surname = e.target.value\n                                            }}\n                                            autoComplete='off'\n                                            required\n                                            type=\"name\" name=\"surname\" className={`form-control${InputBorder}`}\n                                            id=\"inputSirname\"/>\n                                    </div>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <label htmlFor=\"inputName\" className=\"fs-5 col-sm-2 col-form-label\">Имя</label>\n                                    <div className=\"col-sm-10\">\n                                        <input\n                                            onChange={(e) => {\n                                                dataInput.name = e.target.value\n                                            }}\n                                            autoComplete='off'\n                                            required\n                                            type=\"name\" name=\"name\" className={`form-control${InputBorder}`}\n                                            id=\"inputname\"/>\n                                    </div>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <label htmlFor=\"inputMidname\"\n                                           className=\"fs-5 col-sm-2 col-form-label\">Отчество</label>\n                                    <div className=\"col-sm-10\">\n                                        <input\n                                            onChange={(e) => {\n                                                dataInput.midname = e.target.value\n                                            }}\n                                            autoComplete='off'\n                                            required\n                                            type=\"name\" name=\"midname\" className={`form-control${InputBorder}`}\n                                            id=\"inputMidname\"/>\n                                    </div>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <label htmlFor=\"inputLogin\" className=\"fs-5 col-sm-2 col-form-label\">Логин</label>\n                                    <div className=\"col-sm-10\">\n                                        <input\n                                            onChange={(e) => {\n                                                dataInput.login = e.target.value\n                                            }}\n                                            autoComplete='off'\n                                            required\n                                            type=\"name\" name=\"login\" className={`form-control${InputBorder}`}\n                                            id=\"inputLogin\"/>\n                                    </div>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <label htmlFor=\"inputPassword3\"\n                                           className=\"fs-5 col-sm-2 col-form-label\">Пароль</label>\n                                    <div className=\"col-sm-10\">\n                                        <input\n                                            onChange={(e) => {\n                                                dataInput.password = e.target.value\n                                            }}\n                                            autoComplete='off'\n                                            required\n                                            type=\"password\" name=\"password\" className={`form-control${InputBorder}`}\n                                            id=\"inputPassword3\"/>\n                                    </div>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <label className=\"fs-5 col-sm-4 col-form-label\">Тип аккаунта</label>\n                                    <div className=\"col-sm-8 input-group\">\n                                        <select defaultValue=' ' onChange={(e) => {\n                                            dataInput.accountType = e.target.value\n                                        }} required className=\"form-control\" id=\"inputGroupSelect01\">\n                                            <option defaultValue></option>\n                                            <option value=\"manager\">Менеджер</option>\n                                            <option value=\"admin\">Администратор</option>\n                                            <option value=\"senior-teacher\">Главный учитель</option>\n                                            <option value=\"partner\">Партнер</option>\n                                            <option value=\"support\">Поддержка</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"row mb-3\">\n                                    <label className=\"fs-5 col-sm-4 col-form-label\">Роль</label>\n                                    <div className=\"col-sm-8 input-group\">\n                                        <select defaultValue=' ' onChange={(e) => {\n                                            dataInput.role = e.target.value\n                                        }} required className=\"form-control\">\n                                            <option defaultValue></option>\n                                            {optionRole}\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Отмена\n                                </button>\n                                <button type=\"submit\" className=\"btn btn-primary\">Добавить пользователя</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default App;","D:\\Access-crm\\src\\components\\teacher\\teacher.js",["111","112","113","114"],"import React, {useState, useEffect} from 'react'\r\nimport FormTeacher from './formTeacher/formTeacher.js'\r\n\r\nimport Pagination from './../#function/pagination/pagination.js'\r\n\r\nimport {swallGood, swallErr, Swalclose} from './../../alert/alert.js'\r\nimport url from './../../url/url.js'\r\n\r\nimport styled from '@emotion/styled'\r\n\r\nconst Teacher = () => {\r\n\r\n\tconst [offsetG, setOffsetG] = useState(0)\r\n\tconst [Count, setCount] = useState(1)\r\n\r\n\tconst axios = require('axios'); // AJAX\r\n\r\n\tconst [TeacherObj, setTeacherObj] = useState([\r\n\t\t{\r\n\t\t\tname: 'Марина',\r\n\t\t\tsurname: 'Струпина',\r\n\t\t\tmidname: 'Александровна',\r\n\t\t\tlogin: 'marins',\r\n\t\t\tsubject: 'javaScript + ReactJs',\r\n\t\t\trole: 'teacher'\r\n\t\t}\r\n\t]);\r\n\r\n\tconst getTeacherUrl = (offset = 0) => {\r\n\t\taxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: `${url}/AdminPanel/CRMAccounts?limit=10&offset=${offset}&accountType=teacher`,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((res) => {\r\n\t\t\tlet data = res.data\r\n\t\t\tsetCount(res.headers.count)\r\n\r\n\t\t\tsetTeacherObj(data)\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tif (error.response) {\r\n\t\t\t\tswallErr('Ошибка', '');\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTeacherUrl()\r\n\t}, [])\r\n\r\n\tlet tableUser = TeacherObj.map((item) => {\r\n\t\t\r\n\t\tconst trashUser = () => {\r\n\r\n\t\t\t// setAlert(alertWarning);\r\n\r\n\t\t\tfetch(`${url}/AdminPanel/CRMAccounts/${item.login}`, {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((dataJson) => {\r\n\t\t\t\tconsole.log(dataJson);\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tgetTeacherUrl()\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<tr key={item.login}>\r\n\t\t\t\t<td className=\"td-trash\" scope=\"row\">\r\n\t\t\t\t<i onClick={trashUser} className=\"bi bi-trash\" style={{fontSize: '30px', color: '#F56767'}}></i>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td className=\"align-middle td-use\">{item.name}</td>\r\n\t\t\t\t<td className=\"align-middle td-use\">{item.surname}</td>\r\n\t\t\t\t<td className=\"align-middle td-use\">{item.midname}</td>\r\n\t\t\t\t<td className=\"align-middle td-use\">{item.login}</td>\r\n\t\t\t\t<td className=\"align-middle td-use\">{item.subject}</td>\r\n\t\t\t</tr>\r\n\t\t);\r\n\t})\r\n\r\n\tconst Teacher = styled.div({\r\n\t\t\t'.h3Ac, .boxAdd': {\r\n\t\t\t\tdisplay: 'inline-block'\r\n\t\t\t},\r\n\t\t\t'.boxAdd': {\r\n\t\t\t\tmarginLeft: '10px' \r\n\t\t\t}\r\n\t})\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Teacher className={`container`}>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className={`table_user`}>\r\n\t\t\t\t\t\t<h3 className=\"h3Ac\">Учителя</h3>\r\n\t\t\t\t\t\t<div className=\"boxAdd\">\r\n\t\t\t\t\t\t\t<div className=\"d-flex plus-box\">\r\n\t\t\t\t\t\t        <i className=\"bi bi-people\" style={{fontSize: '30px', color: '#0498FA'}}></i>\r\n\t\t\t\t\t\t    \t<div\r\n\t\t\t\t\t\t      \t\tonClick={() => {}}\r\n\t\t\t\t\t\t      \t \tclassName=\"nav-item plus\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n\t\t\t\t\t\t      \t\t<i className=\"bi bi-plus\" style={{fontSize: '30px', color: '#F56767'}}></i>\r\n\t\t\t\t\t\t      \t</div>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<table className=\"table table-striped\">\r\n\t\t\t\t\t\t  <thead>\r\n\t\t\t\t\t\t    <tr>\r\n\t\t\t\t\t\t      <th className=\"th-h\" scope=\"col\"></th>\r\n\t\t\t\t\t\t      <th className=\"th-h align-middle\" scope=\"col\">Имя</th>\r\n\t\t\t\t\t\t      <th className=\"th-h align-middle\" scope=\"col\">Фамилия</th>\r\n\t\t\t\t\t\t      <th className=\"th-h align-middle\" scope=\"col\">Отчество</th>\r\n\t\t\t\t\t\t      <th className=\"th-h align-middle\" scope=\"col\">Логин</th>\r\n\t\t\t\t\t\t      <th className=\"th-h align-middle\" scope=\"col\">Предмет</th>\r\n\t\t\t\t\t\t    </tr>\r\n\t\t\t\t\t\t  </thead>\r\n\t\t\t\t\t\t  <tbody>\r\n\t\t\t\t\t\t   \t{tableUser}\r\n\t\t\t\t\t\t  </tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Pagination getItem={getTeacherUrl} count={Count} offset={offsetG} setOffset={setOffsetG}/>\r\n\t\t\t\t</div>\r\n\t\t\t</Teacher>\r\n\r\n\t\t\t<FormTeacher setTeacherObj={setTeacherObj} TeacherObj={TeacherObj}/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Teacher;","D:\\Access-crm\\src\\components\\role-creation\\role-creation.js",["115"],"import React, {useState, useEffect} from \"react\"\r\nimport {Layout, Breadcrumb, Card, List, Skeleton, Col, Row} from \"antd\"\r\nimport styled from '@emotion/styled'\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport Url from './../../url/url.js'\r\nimport ModalRoleCreation from './modal-role-creation/modal-role-creation.js'\r\nimport {getActionPermissions, getDataPermissions} from './get-permissions-list/get-permissions-list.js'\r\n\r\nconst RoleCreation = () => {\r\n    const {Content} = Layout;\r\n    const axios = require('axios'); // AJAX\r\n\r\n    const [Role, setRole] = useState([])\r\n    const [SkeletonShow, setSkeletonShow] = useState(false)\r\n\r\n    const getRole = () => {\r\n\r\n        setSkeletonShow(true)\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: `${Url}/AdminPanel/Roles`,\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n        })\r\n        .then((res) => {\r\n            setSkeletonShow(false)\r\n            setRole(res.data)\r\n        })\r\n        .catch(error => {\r\n            if (error.response) {\r\n                setSkeletonShow(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const deleteRole = (_id) => {\r\n        setSkeletonShow(true)\r\n\r\n        axios({\r\n            method: 'Delete',\r\n            url: `${Url}/AdminPanel/Roles/${_id}`,\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            }\r\n        })\r\n        .then(res => {\r\n            getRole()\r\n            // setSkeletonShow(false)\r\n        })\r\n        .catch(error => {\r\n            if (error.response) {\r\n                setSkeletonShow(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRole()\r\n    }, [])\r\n\r\n    let ColRole = Role.map((role, i) => {\r\n        if (!SkeletonShow) {\r\n            let {name, actionPermissions, dataPermissions, _id} = role\r\n\r\n            let actionPermissionsItem = getActionPermissions(actionPermissions),\r\n                dataPermissionsItem = getDataPermissions(dataPermissions)\r\n\r\n            return (\r\n                <Col key={_id} span={8} style={{position: 'relative'}}>\r\n                    <Card title={name} bordered={true}>\r\n                        <DeleteOutlined style={{\r\n                            color: 'red',\r\n                            fontSize: '20px',\r\n                            position: 'absolute',\r\n                            top: '19px',\r\n                            right: '22px'\r\n                        }}\r\n                                        onClick={() => {\r\n                                            deleteRole(_id)\r\n                                        }}\r\n                        />\r\n                        <List\r\n                            size=\"small\"\r\n                            bordered\r\n                        >\r\n                            <List.Item style={{fontSize: \"16px\", fontWeight: \"500\"}}>\r\n                                Разрешённые действия:\r\n                            </List.Item>\r\n                            {actionPermissionsItem}\r\n                            <List.Item style={{fontSize: \"16px\", fontWeight: \"500\"}}>\r\n                                Можно видеть:\r\n                            </List.Item>\r\n                            {dataPermissionsItem}\r\n                        </List>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        } else {\r\n            return <Skeleton active/>\r\n        }\r\n    })\r\n\r\n    const Box = styled.div({\r\n        '.ant-col': {\r\n            padding: '10px'\r\n        },\r\n        '.Possibilities': {\r\n            fontWeight: '600',\r\n            fontSize: '15px'\r\n        },\r\n        '.ant-list-bordered': {\r\n            border: 'none'\r\n        },\r\n        '.ant-card-head': {\r\n            backgroundColor: '#e6696952'\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Content style={{padding: \"0 50px\"}}>\r\n            <Breadcrumb style={{margin: \"16px 0\"}}>\r\n                <Breadcrumb.Item>Админ панель</Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    Создание ролей\r\n                    <ModalRoleCreation dataRole={Role} setDataRole={setRole} setSkeletonShow={setSkeletonShow}/>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Box className=\"site-layout-content\">\r\n                <div className=\"site-card-wrapper\">\r\n                    <Row gutter={16}>\r\n                        {ColRole}\r\n                    </Row>\r\n                </div>\r\n            </Box>\r\n        </Content>\r\n    );\r\n};\r\n\r\nexport default RoleCreation;","D:\\Access-crm\\src\\components\\all-employees\\all-employees.js",["116"],"import React, {useState, useEffect} from 'react'\nimport { Table, Tooltip, Button, Input, Modal } from 'antd'\n\nimport {actionPermissionsGet, dataPermissionsGet} from './get-possibilities/get-possibilities.js'\nimport Url from './../../url/url.js'\n\nimport styled from '@emotion/styled' // Style\n\nconst AllEmployees = () => {\n\n\tconst axios = require('axios'); // AJAX \n\n\tuseEffect(() => {\n\t\tdocument.querySelectorAll('.ant-table-cell')[4].style.width = '300px'\n\t})\n\n\tconst [data, setData] = useState([\n\t\t{\n\t\t\tkey: '1',\n\t\t\tsurname: 'Иванов',\n\t\t\tname: 'Иван',\n\t\t\tmidname: 'Иванович',\n\t\t\tlogin: 'Ivan',\n\t\t\taccountType: 'admin',\n\t\t\trole: {\n\t\t\t\tname: '',\n\t\t\t\tactionPermissions: [],\n\t\t\t\tdataPermissions: []\n\t\t\t}\n\t\t}\n\t])\n\n\tconst update = (offset = 0) => {\n\t\taxios({\n\t\t\tmethod: 'get',\n\t\t\turl: `${Url}/AdminPanel/CRMAccounts?limit=10&offset=${offset}&accountType=admin&accountType=manager&accountType=teacher`,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t\t}\n\t\t})\n\t\t.then(res => {\n\t\t\tlet {data} = res\n\n\t\t\tlet box = [...data].map(item => (\n\t\t\t\t{\n\t\t\t\t\t...item,\n\t\t\t\t\tkey: item._id\n\t\t\t\t}\n\t\t\t))\n\t\t\tsetData(box)\n\t\t\tconsole.log(box)\n\t\t}) \n\t}\n\n\tuseEffect(() => {\n\t\tupdate()\n\t}, [])\n\n\tconst Box = styled.div({\n\t\tdisplay: 'flex',\n\t\tspan: {\n\t\t\tfontSize: '16px',\n\t\t\tborderRadius: '10px 0 0 10px'\n\t\t},\n\t\tinput: {\n\t\t\twidth: '200px',\n\t\t\tfontSize: '13px',\n\t\t\tborderRadius: '0 10px 10px 0',\n\t\t\twhiteSpace: 'nowrap', /* Запрещаем перенос строк */\n    \t\toverflow: 'hidden'\n\t\t}\n\t})\n\n\t// let dataSource = [\n\t\t// {\n\t\t// \tkey: '1',\n\t\t// \tsurname: 'Иванов',\n\t\t// \tname: 'Иван',\n\t\t// \tmidname: 'Иванович',\n\t\t// \tlogin: 'Ivan',\n\t\t// \taccountType: 'admin',\n\t\t// \trole: {\n\t\t// \t\tname: '',\n\t\t// \t\tactionPermissions: [],\n\t\t// \t\tdataPermissions: []\n\t\t// \t}\n\t\t// }\n\t// ]\n\n\n\n\tlet columns = [\n\t\t{\n\t\t\tkey: 'surname',\n\t\t\tdataIndex: 'surname',\n\t\t\ttitle: 'Фамилия'\n\t\t},\n\t\t{\n\t\t\tkey: 'name',\n\t\t\tdataIndex: 'name',\n\t\t\ttitle: 'Имя'\n\t\t},\n\t\t{\n\t\t\tkey: 'midname',\n\t\t\tdataIndex: 'midname',\n\t\t\ttitle: 'Отчество'\n\t\t},\n\t\t{\n\t\t\tkey: 'login',\n\t\t\tdataIndex: 'login',\n\t\t\ttitle: 'Логин'\n\t\t},\n\t\t{\n\t\t\tkey: 'accountType',\n\t\t\tdataIndex: 'accountType',\n\t\t\ttitle: 'Тип аккаунта'\n\t\t},\n\t\t{\t\n\t\t\tkey: 'role',\n\t\t\tdataIndex: 'role',\n\t\t\ttitle: 'Роль',\n\t\t\trender: (role) => {\n\n\t\t\t\tif (role) {\n\t\t\t\t\tlet {name, actionPermissions, dataPermissions} = role\n\n\t\t\t\t\tlet title = [...actionPermissionsGet(actionPermissions), ...dataPermissionsGet(dataPermissions)]\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<span className=\"badge bg-info text-dark\">{name}: </span>\n\t\t\t\t\t\t\t<Tooltip placement=\"leftTop\" title={title.join(\", \")}>\n\t\t\t\t\t\t    \t<Input\n\t\t\t\t\t\t    \t\tplaceholder={title.join(\", \")}\n\t\t\t\t\t\t    \t\treadOnly='readonly'\n\t\t\t\t\t\t\t\t\tonClick={() => {}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t    </Tooltip>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n\n\tconst Box2 = styled.div({\n\t\tpadding: '0 15px'\n\t})\n\n\treturn (\n\t\t<Box2>\n\t\t\t<Table\n\t\t\t\tpagination={false}\n\t\t\t    dataSource={data}\n\t\t\t    columns={columns}\n\t\t\t    scroll={{ x: 0 }}\n\t\t\t/>\n\n\t\t</Box2>\n\t)\n}\n\nexport default AllEmployees","D:\\Access-crm\\src\\components\\app\\navigation\\sidebar\\sidebar.js",[],"D:\\Access-crm\\src\\components\\app\\navigation\\header\\header.js",["117"],"import React from 'react';\r\nimport './header.css';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Header = ({setWidthMenu, children, iconR, setInon}) => {\r\n\r\n\tconst Header = styled.div({\r\n\t\tbackgroundColor: '#fff',\r\n\t\tborderBottom: '4px solid #EFF5F7'\r\n\t}); \r\n\r\n\treturn (\r\n\t\t<Header className='d-flex bd-highlight'>\r\n\t\t\t<div className=\"burger w-100 bd-highlight\">\r\n\t\t\t\t<div className=\"box-i\">\r\n\t\t\t\t\t<i \r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (iconR == 'iconR') {\r\n\t\t\t\t\t\t\t\tsetInon('iconR-revers');\r\n\t\t\t\t\t\t\t\tsetWidthMenu('width100');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsetInon('iconR');\r\n\t\t\t\t\t\t\t\tsetWidthMenu('width50');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={`bi bi-arrow-left ${iconR}`} style={{fontSize: '34px', color: '#91A8B0'}}></i>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t    </Header>\r\n\t);\r\n};\r\n\r\nexport default Header;","D:\\Access-crm\\src\\alert\\alert.js",["118","119","120","121"],"import React, {useState, useEffect} from 'react';\n\nimport Swal from 'sweetalert2';\n\nexport const swallErr = (title, text) => {\n    Swal.fire({\n        icon: \"error\",\n        title: title,\n        text: text,\n    });\n};\n\nexport const swallGood = (title, text) => {\n    Swal.fire({\n        icon: \"success\",\n        title: title,\n        text: text,\n    });\n};\n\nexport const Toast = Swal.mixin({\n    toast: true,\n    position: 'top',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n        toast.addEventListener('mouseenter', Swal.stopTimer)\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n});\n\nexport const loading = (title, text = '') => {\n    let timerInterval\n    Swal.fire({\n      title: title,\n      html: text,\n      timerProgressBar: true,\n      didOpen: () => {\n        Swal.showLoading()\n        timerInterval = setInterval(() => {\n          const content = Swal.getHtmlContainer()\n          if (content) {\n            const b = content.querySelector('b')\n            if (b) {\n              b.textContent = Swal.getTimerLeft()\n          }\n      }\n  }, 100)\n    },\n    willClose: () => {\n        clearInterval(timerInterval)\n    }\n})\n}\n\nexport const Swalclose = () => {\n    Swal.close();\n}\n\nexport const RestrictionMessage = status => {\n    if (status == 403) {\n        Toast.fire({\n            icon: 'error',\n            title: 'У вас недостаточно прав для этого действия'\n        });\n    }\n}","D:\\Access-crm\\src\\components\\saubscriptions\\addSubscriptions\\addSubscriptions.js",["122","123"],"import React from 'react';\nimport url from './../../../url/url.js';\n\nimport {loading} from './../../../alert/alert.js';\nconst axios = require('axios'); // AJAX\n\nconst AddSubscriptions = ({getSubsc_on}) => {\n\n\tlet price = '',\n\t\thoursCount = '';\n\n\tconst addSubscriptions = () => {\n\n\t\tloading('Абонемент добавляется');\n\n\t\tlet text = 'часа';\n\t\tif ((+hoursCount % 10) > 4 || (+hoursCount % 10) == 0) {\n\t\t\ttext = 'часов';\n\t\t} else if ((+hoursCount % 10) == 1) {\n\t\t\ttext = 'час';\n\t\t}\n\n\t\taxios({\n\t\t\tmethod: 'post',\n\t\t\turl: `${url}/AdminPanel/Subscriptions`,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\tname: `${price}₽ за ${hoursCount} ${text}`,\n\t\t\t\tprice: +price,\n\t\t\t\thoursCount: +hoursCount\n\t\t\t}\n\t\t})\n\t\t.then((res) => {\n\t\t\tconsole.log(res.data, res);\n\t\t\tconsole.log(price, hoursCount);\n\t\t\tgetSubsc_on();\n\t\t\tdocument.querySelectorAll(\"input\").forEach((item) => {item.value = ''});\n\t\t});\n\t}\n\n\treturn (\n\t\t<div className=\"addSubscriptions col-2 row\">\n\t\t\t<div className=\"btn-group\">\n\t\t\t    <i  id=\"dropdownMenuReference\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" data-bs-reference=\"parent\"\n\t\t\t    \tclassName=\"bi bi-calendar2-plus\" style={{fontSize: \"26px\", color: '#28a745', cursor: 'pointer', marginBottom: '.5rem'}}></i>\n\t\t\t    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuReference\">\n\t\t\t\t    <li className=\"li\">\n\t\t\t\t      \t<input\n\t\t\t\t      \t\tplaceholder=\"Стоимость\"\n\t\t\t\t\t\t   \tonChange={(e) => {price = e.target.value}} \n\t\t\t\t\t\t   \ttype=\"number\" className=\"text-success form-control col-12\"/>\n\t\t\t\t    </li>\n\t\t\t\t    <li className=\"li\">\n\t\t\t\t      \t<input\n\t\t\t\t      \t\tplaceholder=\"Кол. часов\"\n\t\t\t\t\t\t   \tonChange={(e) => {hoursCount = e.target.value}} \n\t\t\t\t\t\t   \ttype=\"number\" className=\"text-dark form-control col-12\"/>\n\t\t\t\t    </li>\n\t\t\t\t    <li className=\"li\">\n\t\t\t\t    \t<span\n\t\t\t\t    \t\tonClick={addSubscriptions} \n\t\t\t\t    \t\tclassName=\"badge bg-warning text-dark\">\n\t\t\t\t    \t\tДобавить\n\t\t\t\t    \t</span>\n\t\t\t\t    </li>\n\t\t\t    </ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default AddSubscriptions;","D:\\Access-crm\\src\\url\\url.js",[],"D:\\Access-crm\\src\\components\\#function\\pagination\\pagination.js",["124","125","126"],"import React, {useState, useEffect} from 'react';\r\n\r\n// Style \r\nimport styled from '@emotion/styled';\r\n\r\nconst Pagination = ({offset, setOffset, getItem, count}) => {\r\n\r\n \tconsole.log(offset)\r\n\r\n\tconst li = []\r\n\r\n\tfor (let i = 0; i < count / 10; i++) {\r\n\r\n\t\tlet active = ''\r\n\t\tif (offset / 10 == i) {\r\n\t\t\tactive = ' active'\r\n\t\t} \r\n\r\n\t\tli.push(<li \r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconsole.log(i)\r\n\t\t\t\t\t\tsetOffset(i * 10)\r\n\t\t\t\t\t\tgetItem(i * 10)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={`page-item${active}`}><span className=\"page-link\">{i + 1}</span></li>)\r\n\t}\r\n\r\n\tconst Pagination = styled.nav({\r\n\t\tmargin: '3px 3px 20px 3px',\r\n\t\toverflow: 'auto',\r\n\t\t'&::-webkit-scrollbar': {\r\n\t\t\theight: '4px',\r\n\t\t\tbackgroundColor:'rgba(0, 0, 0, 0.5)',\r\n\t\t\tborderRadius: '10px'\r\n\t\t},\r\n\t\t'&::-webkit-scrollbar-thumb': {\r\n\t\t\tbackgroundColor: '#17a2b8',\r\n\t\t\tborderRadius: '10px'\r\n\t\t},\r\n\t\tul: {\r\n\t\t\tmarginBottom: '3px'\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Pagination aria-label=\"Page navigation example\">\r\n\t\t\t<ul className=\"pagination\">\r\n\t\t\t\t{/*<li className=\"page-item\">\r\n\t\t\t\t\t<a className=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n\t\t\t\t\t\t<span aria-hidden=\"true\">&laquo;</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>*/}\r\n\t\t\t\t{li}\r\n\t\t\t\t{/*<li className=\"page-item\">\r\n\t\t\t\t\t<a className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n\t\t\t\t\t\t<span aria-hidden=\"true\">&raquo;</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>*/}\r\n\t\t\t</ul>\r\n\t\t</Pagination>\r\n\t)\r\n}\r\n\r\nexport default Pagination","D:\\Access-crm\\src\\components\\teacher\\formTeacher\\formTeacher.js",["127","128","129","130"],"import React, {useState, useEffect} from 'react'\r\nimport url from './../../../url/url.js'\r\n\r\nimport {loading, Swalclose, swallErr} from './../../../alert/alert.js'\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst FormTeacher = ({setTeacherObj, TeacherObj}) => {\r\n\r\n\tconst axios = require('axios'); // AJAX\r\n\r\n\tconst [Role, setRole] = useState([])\r\n\r\n\tlet inputTeacher = {\r\n\t\tname: '',\r\n\t\tsurname: '',\r\n\t\tmidname: '',\r\n\t\tlogin: '',\r\n\t\tsubject: '',\r\n\t\taccountType: 'teacher',\r\n\t\trole: ''\r\n\t}\r\n\r\n\t    const getRole = () => {\r\n\r\n\t    \taxios({\r\n\t\t\t\tmethod: 'get',\r\n\t\t\t\turl: `${url}/AdminPanel/Roles`,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\r\n\t\t\t\t},\r\n\t    \t})\r\n\t    \t.then((res) => {\r\n\t    \t\tsetRole(res.data)\r\n\t    \t})\r\n\t    \t.catch(error => {\r\n\t    \t\tif (error.response) {\r\n\t    \t\t}\r\n\t    \t})\r\n\t    }\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRole()\r\n\t}, [])\r\n\r\n\t\tconst optionRole = Role.map(role => (\r\n\t\t\t<option key={role._id} value={role._id}>{role.name}</option>\r\n\t\t))\r\n\r\n\tconst formSubmit = (e) => {\r\n\r\n\t\tloading('Сохранение...');\r\n\r\n\t\taxios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: `${url}/AdminPanel/CRMAccounts`,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\r\n\t\t\t},\r\n\t\t\tdata: inputTeacher\r\n\t\t})\r\n\t\t.then((res) => {\r\n\t\t\tlet {data} = res.data;\r\n\r\n\t\t\tsetTeacherObj([...TeacherObj, inputTeacher])\r\n\t\t\tSwalclose()\r\n\r\n\t\t\tdocument.querySelector('.btn-close').click() // Закрыть модальное окно\r\n\t\t\tdocument.querySelectorAll(\"input\").forEach((item) => {item.value = ''})\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tif (error.response) {\r\n\t\t\t\tdocument.querySelectorAll('input').forEach((item) => {item.value = ''})\r\n\t\t\t\tdocument.querySelectorAll('select').forEach((item) => {item.value = ''})\r\n\t\t\t\tif (error.response.status == 400) {\r\n\t\t\t\t\tswallErr(`Произошла ошибка`, 'Не подходящие данные')\r\n\t\t\t\t} else {\r\n\t\t\t\t\tSwalclose()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\treturn (\r\n\t\t\t<div className=\"modal fade\" tabIndex=\"-1\" id=\"exampleModal\">\r\n\t\t\t  <div className=\"modal-dialog modal-lg\">\r\n\t\t\t    <div className=\"modal-content\">\r\n\t\t\t      <div className=\"modal-header\">\r\n\t\t\t        <h5 className=\"modal-title\">Добавить учителя</h5>\r\n\t\t\t\t    <button\r\n\t\t\t\t\t    onClick={() => {}}\r\n\t\t\t\t    \ttype=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t    </button>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"alert-modal\">\r\n\t\t\t      </div>\r\n\t\t\t\t    <form method=\"post\" onSubmit={formSubmit}>\r\n\t\t\t\t    \t<div className=\"modal-body\">\r\n\t\t\t\t          <div className=\"row mb-3\">\r\n\t\t\t\t\t\t    <label htmlFor=\"inputName\" className=\"fs-5 col-sm-2 col-form-label\">Имя</label>\r\n\t\t\t\t\t\t    <div className=\"col-sm-10\">\r\n\t\t\t\t\t\t      <input \r\n\t\t\t\t\t\t      \tonChange={(e) => {inputTeacher.name = e.target.value}} \r\n\t\t\t\t\t\t      \tautoComplete='off' \r\n\t\t\t\t\t\t      \trequired \r\n\t\t\t\t\t\t      \ttype=\"text\" name=\"name\" className={`form-control`} id=\"inputname\"/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"row mb-3\">\r\n\t\t\t\t\t\t    <label htmlFor=\"inputSirname\" className=\"fs-5 col-sm-2 col-form-label\">Фамилия</label>\r\n\t\t\t\t\t\t    <div className=\"col-sm-10\">\r\n\t\t\t\t\t\t      <input \r\n\t\t\t\t\t\t      \tonChange={(e) => {inputTeacher.surname = e.target.value}} \r\n\t\t\t\t\t\t      \tautoComplete='off'\r\n\t\t\t\t\t\t      \trequired \r\n\t\t\t\t\t\t      \ttype=\"text\" name=\"surname\" className={`form-control`} id=\"inputSirname\"/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"row mb-3\">\r\n\t\t\t\t\t\t    <label htmlFor=\"inputMidname\" className=\"fs-5 col-sm-2 col-form-label\">Отчество</label>\r\n\t\t\t\t\t\t    <div className=\"col-sm-10\">\r\n\t\t\t\t\t\t      <input \r\n\t\t\t\t\t\t      \tonChange={(e) => {inputTeacher.midname = e.target.value}} \r\n\t\t\t\t\t\t      \tautoComplete='off'\r\n\t\t\t\t\t\t      \trequired \r\n\t\t\t\t\t\t      \ttype=\"text\" name=\"midname\" className={`form-control`} id=\"inputMidname\"/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"row mb-3\">\r\n\t\t\t\t\t\t    <label htmlFor=\"inputLogin\" className=\"fs-5 col-sm-2 col-form-label\">Логин</label>\r\n\t\t\t\t\t\t    <div className=\"col-sm-10\">\r\n\t\t\t\t\t\t      <input \r\n\t\t\t\t\t\t      \tonChange={(e) => {inputTeacher.login = e.target.value}} \r\n\t\t\t\t\t\t      \tautoComplete='off' \r\n\t\t\t\t\t\t      \trequired \r\n\t\t\t\t\t\t      \ttype=\"text\" name=\"login\" className={`form-control`} id=\"inputLogin\"/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"row mb-3\">\r\n\t\t\t\t\t\t    <label htmlFor=\"inputPassword3\" className=\"fs-5 col-sm-2 col-form-label\">Пароль</label>\r\n\t\t\t\t\t\t    <div className=\"col-sm-10\">\r\n\t\t\t\t\t\t      <input \r\n\t\t\t\t\t\t      \tonChange={(e) => {inputTeacher.password = e.target.value}} \r\n\t\t\t\t\t\t      \tautoComplete='off' \r\n\t\t\t\t\t\t      \trequired \r\n\t\t\t\t\t\t      \ttype=\"password\" name=\"password\" className={`form-control`} id=\"inputPassword3\"/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"row mb-3\">\r\n\t\t\t\t\t\t    <label className=\"fs-5 col-sm-4 col-form-label\">Предмет</label>\r\n\t\t\t\t\t\t    <div className=\"col-sm-8 input-group\">\r\n\t\t\t\t\t\t\t\t<select defaultValue=' ' onChange={(e) => {inputTeacher.subject = e.target.value}} className=\"form-control\" id=\"inputGroupSelect01\">\r\n\t\t\t\t\t\t\t\t    <option defaultValue>Выбрать предмет...</option>\r\n\t\t\t\t\t\t\t\t    <option value=\"Python\">Python</option>\r\n\t\t\t\t\t\t\t\t    <option value=\"Html\">Html</option>\r\n\t\t\t\t\t\t\t\t    <option value=\"Css\">Css</option>\r\n\t\t\t\t\t\t\t\t    <option value=\"Sass/Scss\">Sass/Scss</option>\r\n\t\t\t\t\t\t\t\t    <option value=\"Node.js\">Node.js</option>\r\n\t\t\t\t\t\t\t\t    <option value=\"Vue.js\">Vue.js</option>\r\n\t\t\t\t\t\t\t\t    <option value=\"React.js\">React.js</option>\r\n\t\t\t\t\t\t\t\t    <option value=\"React Native\">React Native</option>\r\n\t\t\t\t\t\t\t\t    <option value=\"Ruby\">Ruby</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t  <div className=\"row mb-3\">\r\n\t\t\t\t\t\t    <label className=\"fs-5 col-sm-4 col-form-label\">Роль</label>\r\n\t\t\t\t\t\t    <div className=\"col-sm-8 input-group\">\r\n\t\t\t\t\t\t\t\t<select defaultValue=' ' onChange={(e) => {inputTeacher.role = e.target.value}} className=\"form-control\" id=\"inputGroupSelect01\">\r\n\t\t\t\t\t\t\t\t    <option defaultValue></option>\r\n\t\t\t\t\t\t\t\t    {optionRole}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t      \t</div>\r\n\t\t\t\t    \t<div className=\"modal-footer\">\r\n\t\t\t\t        \t<button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Отмена</button>\r\n\t\t\t\t        \t<button type=\"submit\" className=\"btn btn-primary\">Добавить пользователя</button>\r\n\t\t\t\t      \t</div>\r\n\t\t\t\t    </form>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FormTeacher;","D:\\Access-crm\\src\\components\\all-employees\\get-possibilities\\get-possibilities.js",["131","132"],"export const actionPermissionsGet = (arrText) => {\n\n\treturn arrText.map((item, i) => {\n\t\tswitch (item) {\n\t\t    case 0:\n\t\t        return \"Создать группу\";\n\t\t    case 1:\n\t\t        return \"Изменить группу\";\n\t\t    case 2:\n\t\t        return \"Удалить группу\";\n\t\t    case 3:\n\t\t        return \"Получить список групп\";\n\t\t    case 4:\n\t\t        return \"Просмотреть страницу группы\";\n\t\t    case 5:\n\t\t        return \"Установить расписание группы\";\n\t\t    case 6:\n\t\t        return \"Обновить расписание учеников\";\n\t\t    case 7:\n\t\t        return \"Добавить учеников в группу\";\n\t\t    case 8:\n\t\t        return \"Удалить ученика из группы\";\n\t\t    case 9:\n\t\t        return \"Добавить учителя\";\n\t\t    case 10:\n\t\t        return \"Создать ученика\";\n\t\t    case 11:\n\t\t        return \"Изменить ученика\";\n\t\t    case 12:\n\t\t        return \"Удалить ученика\";\n\t\t    case 13:\n\t\t        return \"Получить список учеников\";\n\t\t    case 14:\n\t\t        return \"Зайти на страницу ученика\";\n\t\t    case 15:\n\t\t        return \"Импортировать файл\";\n\t\t    case 16:\n\t\t        return \"Создать платеж\";\n\t\t    case 17:\n\t\t        return \"Создать заметку\";\n\t\t    case 18:\n\t\t        return \"Удалить заметку\";\n\t\t    case 19:\n\t\t        return \"Использовать поиск\";\n\t\t    default:\n\t\t        return;\n\t\t}\n\t})\n}\n\nexport const dataPermissionsGet = (arr) => {\n\n\t// console.log(arrText)\n    let arrDataPermissions = Object.keys({...arr.forPupil, ...arr.forGroup})\n\n\treturn arrDataPermissions.map((item) => {\n        switch (item) {\n            case 'phone':\n                return 'Телефон'\n            case 'parentPhone':\n                return 'Родительский телефон'\n            case 'parentNSM':\n                return 'Родительские инициалы'\n            case 'balance':\n                return 'Баланс'\n            case 'discord':\n                return 'Discord'\n            case 'paymentHistory':\n                return 'Исторя платежей'\n            case 'notes':\n                return 'Заметки'\n            case 'groupsHistory':\n                return 'Историю групп'\n            case 'groups':\n                return 'Список групп'\n            case 'tutors':\n                return 'Учителя'\n            case 'localSchedule':\n                return 'Расписание'\n            case 'GROUP_NAME':\n                return 'Имя группы'\n            case 'LEVEL':\n                return 'Уровень группы'\n            case 'TUTOR':\n                return 'Учителя группы'\n            case 'PUPILS':\n                return 'Ученики группы'\n            case 'PLACES':\n                return 'Количество мест в группе'\n            case 'GLOBAL_SCHEDULE':\n                return 'Расписание группы'\n            case 'name':\n                return 'Имя ученика'\n            case 'midname':\n                return 'Фамилию ученика'\n            case 'surname':\n                return 'Отчество ученика'\n            default:\n                return;\n        }\n\t})\n}","D:\\Access-crm\\src\\components\\role-creation\\get-permissions-list\\get-permissions-list.js",[],"D:\\Access-crm\\src\\components\\role-creation\\modal-role-creation\\modal-role-creation.js",[],"D:\\Access-crm\\src\\components\\sales-funnel\\sales-funnel.js",[],"D:\\Access-crm\\src\\components\\sales-funnel\\change-funnel\\change-funnel.js",[],"D:\\Access-crm\\src\\components\\error-handler\\error-handler.js",["133","134","135","136","137"],"import {RestrictionMessage} from './../../alert/alert'\r\nimport localStorage_change from './../../#localStorage_change';\r\nimport {swallErr} from \"../../alert/alert\";\r\n\r\nconst errorHandler = (onFunction, error, ...additionalActions) => {\r\n    if (error.response) {\r\n        additionalActions.forEach(fnc => {fnc()})\r\n        RestrictionMessage(error.response.status)\r\n        let {status, data} = error.response;\r\n\r\n        if (data.message === 'Bad Request') {\r\n            swallErr('Не возможно удалить воронку в которой есть ученик');\r\n        } else if (status == 404) {\r\n            swallErr('Сервер не найден');\r\n        } else if (status == 401) {\r\n\r\n            if (data.message == 'TOKEN_EXPIRED') {\r\n\r\n                localStorage_change(data.token);\r\n                onFunction();\r\n            } else {\r\n                localStorage.removeItem('tokenID');\r\n                window.location.replace(\"/\");\r\n            }\r\n        } else if (status == 500) {\r\n            swallErr('Ошибка сервера');\r\n        } else if (status == 400) {\r\n            swallErr('Не верно введены данные');\r\n        }\r\n    }\r\n}\r\n\r\nexport default errorHandler","D:\\Access-crm\\src\\#localStorage_change.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"146","line":1,"column":26,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"142","severity":1,"message":"147","line":2,"column":41,"nodeType":"144","messageId":"145","endLine":2,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":58,"column":17,"nodeType":"150","messageId":"151","endLine":58,"endColumn":49},{"ruleId":"152","severity":1,"message":"153","line":87,"column":8,"nodeType":"154","endLine":87,"endColumn":10,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":114,"column":42,"nodeType":"158","endLine":114,"endColumn":53},{"ruleId":"142","severity":1,"message":"159","line":6,"column":9,"nodeType":"144","messageId":"145","endLine":6,"endColumn":18},{"ruleId":"142","severity":1,"message":"160","line":6,"column":30,"nodeType":"144","messageId":"145","endLine":6,"endColumn":39},{"ruleId":"152","severity":1,"message":"161","line":52,"column":5,"nodeType":"154","endLine":52,"endColumn":7,"suggestions":"162"},{"ruleId":"156","severity":1,"message":"157","line":76,"column":30,"nodeType":"158","endLine":76,"endColumn":41},{"ruleId":"152","severity":1,"message":"163","line":64,"column":8,"nodeType":"154","endLine":64,"endColumn":10,"suggestions":"164"},{"ruleId":"152","severity":1,"message":"165","line":56,"column":8,"nodeType":"154","endLine":56,"endColumn":10,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":19,"column":18,"nodeType":"169","messageId":"170","endLine":19,"endColumn":20},{"ruleId":"142","severity":1,"message":"171","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"146","line":1,"column":26,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":62,"column":16,"nodeType":"169","messageId":"170","endLine":62,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":17,"column":52,"nodeType":"169","messageId":"170","endLine":17,"endColumn":54},{"ruleId":"167","severity":1,"message":"168","line":19,"column":33,"nodeType":"169","messageId":"170","endLine":19,"endColumn":35},{"ruleId":"142","severity":1,"message":"143","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"146","line":1,"column":26,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":15,"column":19,"nodeType":"169","messageId":"170","endLine":15,"endColumn":21},{"ruleId":"142","severity":1,"message":"172","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":14},{"ruleId":"152","severity":1,"message":"163","line":44,"column":5,"nodeType":"154","endLine":44,"endColumn":7,"suggestions":"173"},{"ruleId":"142","severity":1,"message":"174","line":63,"column":9,"nodeType":"144","messageId":"145","endLine":63,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":75,"column":31,"nodeType":"169","messageId":"170","endLine":75,"endColumn":33},{"ruleId":"175","severity":1,"message":"176","line":46,"column":11,"nodeType":"177","messageId":"178","endLine":46,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":99,"column":17,"nodeType":"177","messageId":"178","endLine":99,"endColumn":24},{"ruleId":"167","severity":1,"message":"168","line":13,"column":27,"nodeType":"169","messageId":"170","endLine":13,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":15,"column":27,"nodeType":"169","messageId":"170","endLine":15,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":17,"column":30,"nodeType":"169","messageId":"170","endLine":17,"endColumn":32},{"ruleId":"167","severity":1,"message":"168","line":25,"column":27,"nodeType":"169","messageId":"170","endLine":25,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":27,"column":27,"nodeType":"169","messageId":"170","endLine":27,"endColumn":29},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Switch' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRole' and 'update'. Either include them or remove the dependency array.","ArrayExpression",["181"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'swallGood' is defined but never used.","'Swalclose' is defined but never used.","React Hook useEffect has a missing dependency: 'getTeacherUrl'. Either include it or remove the dependency array.",["182"],"React Hook useEffect has a missing dependency: 'getRole'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array.",["184"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","'styled' is defined but never used.",["185"],"'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"190","fix":"194"},"Update the dependencies array to be: [getRole, update]",{"range":"195","text":"196"},"Update the dependencies array to be: [getTeacherUrl]",{"range":"197","text":"198"},"Update the dependencies array to be: [getRole]",{"range":"199","text":"200"},"Update the dependencies array to be: [update]",{"range":"201","text":"202"},{"range":"203","text":"200"},[2364,2366],"[getRole, update]",[1192,1194],"[getTeacherUrl]",[1742,1744],"[getRole]",[1518,1520],"[update]",[869,871]]