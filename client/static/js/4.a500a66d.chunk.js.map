{"version":3,"sources":["components/home-page/sales-funnel/sales-funnel-modal.jsx","components/home-page/sales-funnel/helpers/loader.jsx","components/home-page/sales-funnel/helpers/tooltip-functions.js","components/home-page/sales-funnel/ClosestTask.jsx","components/home-page/sales-funnel/sales-funnel-students.jsx","components/home-page/sales-funnel/sales-funnel.jsx"],"names":["SalesFunnelModal","React","memo","funnel","Url","setPupilsList","status","setLoaded","bigIcon","update","defaultValueOptionFunnel","validateDiscordNickname","RegExp","dateFormat","useState","confirmLoading","setConfirmLoading","visible","setVisible","moment","dateValue","setDateValue","inputName","setInputName","inputSurname","setInputSurname","inputMidname","setInputMidname","selectGender","setSelectGender","inputParentPhones","setInputParentPhones","inputParentFullname","setInputParentFullname","inputChildPhones","setInputChildPhones","inputDiscordNickname","setInputDiscordNickname","_id","selectSalesFunnelStep","setSelectSalesFunnelStep","mask","setMask","mask2","setMask2","onFocusHandleInput","ev","target","value","onKeyDownInputHandler","event","key","prev","deletingDataFromForm","handleCancel","showModal","handleOk","a","swallErr","Error","split","filter","item","length","search","newStudent","name","surname","midname","gender","dateOfBirth","toISOString","phones","undefined","discord","String","match","shift","parentPhones","parentFullname","salesFunnelStep","axiosCreateNewStudent","student","swallGood","closestTask","response","RestrictionMessage","data","message","localStorage_change","token","localStorage","removeItem","window","location","replace","style","position","right","className","id","onClick","fontSize","color","UserAddOutlined","StylesForUserAddOutlined","width","title","onCancel","footer","loading","type","action","method","onChange","hooksHandler","required","placeholder","defaultValue","format","autoComplete","onKeyDown","onFocus","StylesForInputMaskPhoneParentOrChild","join","map","step","LoaderTag","styled","div","props","precentage","Loader","tooltipNeedsCheckerOfSingleString","string","dop","maxLength","dopTooltipText","placement","tooltipCheckerOfTrioString","stud","ClosestTask","deadline","responsible","text","SalesFunnelStudents","card","pupils","pupilsList","pageSize","loaded","index","draggableId","provided","background","draggableProps","dragHandleProps","ref","innerRef","to","minPaidSubscription","portable","contains","statuses","stat","overlay","SalesFunnel","UrlProd","salesFunnelList","setSalesFunnelList","useEffect","axiosGetFunnelSteps","salesFunnelSteps","flat","salesFunnelFromServer","onDragEndHandler","result","destination","array1","source","droppableId","array2","splice","deletingElement","Array","from","Set","oldStatuses","el","axiosUpdateStudent","jstctn","onDragEnd","display","order","minPaidSubscriptionsAmount","provide","droppableProps"],"mappings":"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","file":"static/js/4.a500a66d.chunk.js","sourcesContent":["// imports from plugins\nimport React, { useState } from 'react'\nimport { Button, DatePicker, Input, Modal } from 'antd'\nimport moment from 'moment'\nimport InputMask from 'react-input-mask'\nimport { UserAddOutlined } from '@ant-design/icons'\n\n// imports from files of project\nimport {\n  FlexFunnelElement,\n  StylesForInputMaskPhoneParentOrChild,\n  StylesForUserAddOutlined,\n} from './helpers/sales-funnel-styled'\nimport { axiosCreateNewStudent } from './helpers/axios-requests'\nimport { swallErr, swallGood } from '../../../alert/alert'\nimport RestrictionMessage from '../../restriction-message/restriction-message'\nimport localStorage_change from '../../../#localStorage_change'\nimport hooksHandler from '../../../helpers/hooksHandler'\n\nexport const SalesFunnelModal = React.memo(\n  ({\n    funnel,\n    Url,\n    setPupilsList,\n    status,\n    setLoaded,\n    bigIcon = false,\n    update = () => {},\n    defaultValueOptionFunnel = '',\n  }) => {\n    // data\n    const validateDiscordNickname = new RegExp(/\\w+#[0-9]{4}/)\n    const dateFormat = 'DD-MM-YYYY'\n    // data\n\n    // useState\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const [visible, setVisible] = useState(false)\n\n    const [dateValue, setDateValue] = useState(moment('01-01-2021', dateFormat))\n    const [inputName, setInputName] = useState('')\n    const [inputSurname, setInputSurname] = useState('')\n    const [inputMidname, setInputMidname] = useState('')\n    const [selectGender, setSelectGender] = useState('')\n    const [inputParentPhones, setInputParentPhones] = useState('')\n    const [inputParentFullname, setInputParentFullname] = useState('')\n    const [inputChildPhones, setInputChildPhones] = useState('')\n    const [inputDiscordNickname, setInputDiscordNickname] = useState('')\n    const [selectSalesFunnelStep, setSelectSalesFunnelStep] = useState(\n      funnel[0]._id\n    )\n\n    const [mask, setMask] = useState(['+9 (999) 999-99-99'])\n    const [mask2, setMask2] = useState(['+9 (999) 999-99-99'])\n    // useState\n\n    // Methods\n    const onFocusHandleInput = (ev) => (ev.target.value = '')\n    const onKeyDownInputHandler = (setMask) => {\n      return (event) => {\n        if (!(event.key === 'Enter')) return\n\n        setMask((prev) => (prev = [...prev, ', ', prev[0]]))\n      }\n    }\n    const deletingDataFromForm = () => {\n      setInputName((prev) => (prev = ''))\n      setInputSurname((prev) => (prev = ''))\n      setInputMidname((prev) => (prev = ''))\n      setDateValue((prev) => (prev = moment('01-01-2021', dateFormat)))\n      setSelectGender((prev) => (prev = ''))\n      setInputParentFullname((prev) => (prev = ''))\n      setInputDiscordNickname((prev) => (prev = ''))\n      setMask((prev) => (prev = ['+9 (999) 999-99-99']))\n      setMask2((prev) => (prev = ['+9 (999) 999-99-99']))\n    }\n    const handleCancel = () => {\n      setVisible(false)\n      deletingDataFromForm()\n    }\n    const showModal = () => {\n      setVisible(true)\n    }\n    const handleOk = async () => {\n      try {\n        setConfirmLoading(true)\n        if (selectGender === '') {\n          swallErr('Ошибка!', 'Не указан пол')\n          throw new Error('Не указан пол')\n        }\n        if (\n          !(\n            inputParentFullname.split(' ').filter((item) => item !== '')\n              .length === 3\n          )\n        ) {\n          swallErr('Ошибка!', 'ФИО Родителя введены неверно')\n          throw new Error('ФИО Родителя введены неверно')\n        }\n        if (\n          inputDiscordNickname !== '' &&\n          inputDiscordNickname.search(validateDiscordNickname) === -1\n        ) {\n          swallErr(\n            'Ошибка!',\n            \"Ник в дискорде был введён не верно, проверьте наличие '#' и цифр после неё, а так же русских букв\"\n          )\n          throw new Error(\n            \"Ник в дискорде был введён не верно, проверьте наличие '#' и цифр после неё, а так же русских букв\"\n          )\n        }\n        if (!selectSalesFunnelStep) {\n          swallErr('Ошибка!', 'Этап в воронке не выбран')\n          throw new Error('Этап в воронке не выбран')\n        }\n        const newStudent = {\n          name: inputName,\n          surname: inputSurname,\n          midname: inputMidname,\n          gender: selectGender,\n          dateOfBirth: dateValue.toISOString(),\n          phones: inputChildPhones.split(',') || undefined,\n          discord:\n            inputDiscordNickname !== ''\n              ? String(\n                  inputDiscordNickname.match(validateDiscordNickname).shift()\n                )\n              : undefined,\n          parentPhones: inputParentPhones.split(','),\n          parentFullname: inputParentFullname,\n          salesFunnelStep: selectSalesFunnelStep,\n        }\n        const student = await axiosCreateNewStudent(Url, newStudent)\n        swallGood('Успешно!', 'Пользователь создан!')\n        update()\n        await setPupilsList((prev) => [\n          ...prev,\n          { ...student, closestTask: [] },\n        ])\n        setLoaded((prev) => (prev = true))\n        setLoaded((prev) => (prev = false))\n        setVisible(false)\n        setConfirmLoading(false)\n        deletingDataFromForm()\n      } catch (err) {\n        if (!status) setVisible(true)\n        setConfirmLoading(false)\n        if (err.response) {\n          RestrictionMessage(err.response.status)\n          let { status, data } = err.response\n          if (status === 400) {\n            swallErr('Не верно введены данные')\n          }\n          if (data.message === 'TOKEN_EXPIRED') {\n            localStorage_change(data.token)\n          }\n          if (status === 401) {\n            localStorage.removeItem('tokenID')\n            window.location.replace('/')\n          }\n          if (status === 500) {\n            swallErr('Ошибка сервера')\n          }\n        }\n      }\n    }\n    // Methods\n\n    return (\n      <>\n        {bigIcon ? (\n          <div\n            style={{\n              position: 'absolute',\n              right: 0,\n            }}\n            className=\"collapse d-flex flex-row-reverse\"\n            id=\"navbarScroll\"\n          >\n            <div className=\"d-flex plus-box\">\n              <div className=\"nav-item plus\" onClick={showModal}>\n                <i\n                  className=\"bi bi-person-plus\"\n                  style={{\n                    fontSize: '38px',\n                    color: '#F56767',\n                  }}\n                ></i>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <UserAddOutlined\n            style={StylesForUserAddOutlined}\n            onClick={showModal}\n          />\n        )}\n        <Modal\n          width={900}\n          title=\"Создание ученика\"\n          visible={visible}\n          onCancel={handleCancel}\n          footer={[\n            <Button key=\"back\" onClick={handleCancel}>\n              Отмена\n            </Button>,\n            <Button\n              key=\"submit\"\n              onClick={handleOk}\n              loading={confirmLoading}\n              type=\"primary\"\n            >\n              Добавить\n            </Button>,\n          ]}\n        >\n          <form action=\"#\" method=\"POST\">\n            <FlexFunnelElement>\n              <p>Имя:</p>\n              <Input\n                onChange={hooksHandler(setInputName, 'event.target.value')}\n                value={inputName}\n                required\n              />\n            </FlexFunnelElement>\n            <FlexFunnelElement>\n              <p>Фамилия:</p>\n              <Input\n                onChange={hooksHandler(setInputSurname, 'event.target.value')}\n                value={inputSurname}\n                required\n              />\n            </FlexFunnelElement>\n            <FlexFunnelElement>\n              <p>Отчество:</p>\n              <Input\n                onChange={hooksHandler(setInputMidname, 'event.target.value')}\n                value={inputMidname}\n                required\n              />\n            </FlexFunnelElement>\n            <FlexFunnelElement>\n              <p>Возраст:</p>\n              <DatePicker\n                className=\"form-control\"\n                placeholder=\"ГГГГ.ММ.ДД\"\n                defaultValue={moment('01-01-2021', dateFormat)}\n                format={dateFormat}\n                onChange={hooksHandler(setDateValue, 'event')}\n              />\n            </FlexFunnelElement>\n            <FlexFunnelElement>\n              <p>ФИО Родителя:</p>\n              <Input\n                onChange={hooksHandler(\n                  setInputParentFullname,\n                  'event.target.value'\n                )}\n                value={inputParentFullname}\n                required\n                placeholder=\"Фамилия Имя Отчество\"\n              />\n            </FlexFunnelElement>\n            <FlexFunnelElement>\n              <p>Ник в дискорде:</p>\n              <Input\n                onChange={hooksHandler(\n                  setInputDiscordNickname,\n                  'event.target.value'\n                )}\n                value={inputDiscordNickname}\n                placeholder=\"Необязательно\"\n              />\n            </FlexFunnelElement>\n            <FlexFunnelElement>\n              <p>Номер телефона ребёнка:</p>\n              <InputMask\n                autoComplete=\"off\"\n                onChange={hooksHandler(\n                  setInputChildPhones,\n                  'event.target.value'\n                )}\n                onKeyDown={onKeyDownInputHandler(setMask)}\n                onFocus={onFocusHandleInput}\n                style={StylesForInputMaskPhoneParentOrChild}\n                type=\"tel\"\n                name=\"tel\"\n                className=\"form-control\"\n                mask={mask.join('')}\n                placeholder=\"Необязательное поле\"\n              />\n            </FlexFunnelElement>\n            <FlexFunnelElement>\n              <p>Номер телефона родителя:</p>\n              <InputMask\n                autoComplete=\"off\"\n                onChange={hooksHandler(\n                  setInputParentPhones,\n                  'event.target.value'\n                )}\n                onKeyDown={onKeyDownInputHandler(setMask2)}\n                onFocus={onFocusHandleInput}\n                style={StylesForInputMaskPhoneParentOrChild}\n                type=\"tel\"\n                name=\"tel\"\n                className=\"form-control\"\n                mask={mask2.join('')}\n              />\n            </FlexFunnelElement>\n            <FlexFunnelElement>\n              <p>Пол:</p>\n              <select\n                onChange={hooksHandler(setSelectGender, 'event.target.value')}\n                name=\"gender\"\n                value={selectGender}\n                className=\"form-control\"\n                required\n              >\n                <option defaultValue></option>\n                <option value=\"Мужской\">Мужской</option>\n                <option value=\"Женский\">Женский</option>\n              </select>\n            </FlexFunnelElement>\n            <FlexFunnelElement>\n              <p>Воронка:</p>\n              <select\n                className=\"form-control\"\n                name=\"salesFunnelId\"\n                value={selectSalesFunnelStep}\n                onChange={hooksHandler(\n                  setSelectSalesFunnelStep,\n                  'event.target.value'\n                )}\n              >\n                {defaultValueOptionFunnel}\n                {funnel.map((step) => {\n                  if (funnel[0]._id === step._id) {\n                    return (\n                      <option key={step._id} value={step._id} defaultValue>\n                        {step.name}\n                      </option>\n                    )\n                  }\n                  return (\n                    <option key={step._id} value={step._id}>\n                      {step.name}\n                    </option>\n                  )\n                })}\n              </select>\n            </FlexFunnelElement>\n          </form>\n        </Modal>\n      </>\n    )\n  }\n)\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\n\nconst LoaderTag = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: ${props => props.precentage ? \"100%\" : \"100vh\"};\n  .lds-ring {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-ring div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border: 8px solid #001529;\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #001529 transparent transparent transparent;\n  }\n  .lds-ring div:nth-of-type(1) {\n    animation-delay: -0.45s;\n  }\n  .lds-ring div:nth-of-type(2) {\n    animation-delay: -0.3s;\n  }\n  .lds-ring div:nth-of-type(3) {\n    animation-delay: -0.15s;\n  }\n  @keyframes lds-ring {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n`\n\nexport const Loader = ({ precentage }) => {\n  return (\n    <LoaderTag precentage={precentage}>\n      <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </LoaderTag>\n  );\n};","// imports from plugins\nimport {Tooltip} from \"antd\"\nimport React from \"react\"\n\n// imports from files of project\nimport {FunnelStepText} from \"./sales-funnel-styled\"\n\nexport const tooltipNeedsCheckerOfSingleString = (length, string, dop = '', maxLength = 24, width = \"\", dopTooltipText = \"\") => {\n  if (length + dop.length > maxLength) {\n    return (\n      <Tooltip placement=\"leftTop\" title={`${dopTooltipText}${dopTooltipText !== \"\" ? \" \" : \"\"}${string}`}>\n        <FunnelStepText width={width}>{dop} {string}</FunnelStepText>\n      </Tooltip>\n    )\n  }\n  return <FunnelStepText>{dop} {string}</FunnelStepText>\n}\n\nexport const tooltipCheckerOfTrioString = (length, stud, dop = '', maxLength = 24, width = \"\", dopTooltipText = \"\") => {\n  if (length + dop.length > maxLength) {\n    return (\n      <Tooltip placement=\"leftTop\" title={`${dopTooltipText}${dopTooltipText !== \"\" ? \" \" : \"\"}${stud.surname} ${stud.name} ${stud.midname}`}>\n        <FunnelStepText width={width}>{stud.surname} {stud.name} {stud.midname}</FunnelStepText>\n      </Tooltip>\n    )\n  }\n  return <FunnelStepText>{stud.surname} {stud.name} {stud.midname}</FunnelStepText>\n}","import moment from \"moment\"\nimport React from \"react\"\n\nimport {DropdownClosestTask} from \"./helpers/sales-funnel-styled\"\n\nexport const ClosestTask = ({closestTask}) => {\n  return (\n    <DropdownClosestTask>\n      <p className=\"name\">{closestTask?.name}</p>\n      <p>До: {moment(closestTask?.deadline).format(\"DD/MM/YYYY | HH:mm\")}</p>\n      <p>Ответственнен: {closestTask?.responsible[0]?.surname} {closestTask?.responsible[0]?.name} {closestTask?.responsible[0]?.midname}</p>\n      <div>\n        {closestTask?.text}\n      </div>\n    </DropdownClosestTask>\n  )\n}","// imports from plugins\nimport React, {useState} from \"react\"\nimport {Draggable} from \"react-beautiful-dnd\"\nimport {NavLink} from \"react-router-dom\"\nimport {Tag, Dropdown} from \"antd\"\n\n// imports from files of project\nimport {\n  FunnelStepStudent,\n  HoverTask,\n  StatusesBlock,\n  VisibilitySpan\n} from \"./helpers/sales-funnel-styled\"\nimport {Loader} from \"./helpers/loader\"\nimport {tooltipCheckerOfTrioString} from \"./helpers/tooltip-functions\"\nimport {ClosestTask} from \"./ClosestTask\"\n\nexport const SalesFunnelStudents = ({Url, card, pupils, pageSize}) => {\n\n  // data\n  const {pupilsList} = pupils\n  // data\n\n  // useState\n  const [loaded] = useState(false)\n  // useState\n\n  return (\n    <>\n      {loaded ? <Loader\n        precentage={true}/> : pupilsList.filter(stud => stud.salesFunnelStep === card._id).map((stud, index) => (\n        <Draggable key={stud._id} draggableId={`${stud._id}`} index={index}>\n          {provided => (\n            <FunnelStepStudent background={card.background} {...provided.draggableProps}\n                               {...provided.dragHandleProps} ref={provided.innerRef}>\n              <div className=\"funnelStepStudent__first--info\">\n                <div>\n                  <NavLink to={`/student/${stud._id}`}>\n                    {tooltipCheckerOfTrioString(`${stud.surname} ${stud.name} ${stud.midname}`.length, stud, \"\", 25, \"230px\", \"ФИО:\")}\n                  </NavLink>\n                </div>\n                <div>\n                  <VisibilitySpan>Тел.Родителя:</VisibilitySpan> {/*stud?.phones?.length > 1 ? `${stud?.phones[0]}...` : stud?.phones[0]*/}78\n                </div>\n                <div>\n                  <VisibilitySpan>Мин.Абонемент:</VisibilitySpan> {stud.minPaidSubscription || 0}₽\n                </div>\n                <StatusesBlock portable={true} contains={stud.statuses.length}>\n                  {stud.statuses.map(stat => (\n                    <Tag key={stat._id} color={stat.color}>{stat.name}</Tag>\n                  ))}\n                </StatusesBlock>\n                {stud.closestTask.length ? <Dropdown overlay={<ClosestTask closestTask={stud.closestTask[0]}/>}>\n                  <HoverTask>\n                    Ближайшая задача\n                  </HoverTask>\n                </Dropdown> : \"\"}\n              </div>\n            </FunnelStepStudent>\n          )}\n        </Draggable>\n      ))}\n    </>\n\n  )\n}","// imports from plugins\nimport React, { useEffect, useState } from 'react'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\n\n// imports from files of project\nimport {\n  FunnelSection,\n  FunnelStep,\n  FunnelStepAbonementSum,\n  FunnelStepHeader,\n  Wrapper,\n} from './helpers/sales-funnel-styled'\nimport { SalesFunnelModal } from './sales-funnel-modal'\nimport { Loader } from './helpers/loader'\nimport { tooltipNeedsCheckerOfSingleString } from './helpers/tooltip-functions'\nimport UrlProd from '../../../url/url'\nimport { SalesFunnelStudents } from './sales-funnel-students'\nimport {\n  axiosGetFunnelSteps,\n  axiosUpdateStudent,\n} from './helpers/axios-requests'\n\nconst SalesFunnel = () => {\n  //TODO: Переименовать поля phone и phoneParent на мн.ч\n  //TODO: Поля phones и phoneParents теперь массив.\n\n  // data\n  const status = 1\n  const Url = status ? UrlProd : 'https://dvmncrm.herokuapp.com'\n  // data\n\n  // useState\n  const [loaded, setLoaded] = useState(true)\n  const [salesFunnelList, setSalesFunnelList] = useState([])\n  const [pupilsList, setPupilsList] = useState([])\n  // useState\n\n  // useEffect\n  useEffect(() => {\n    const salesFunnelFromServer = async () => {\n      const salesFunnelSteps = await axiosGetFunnelSteps(Url)\n      setSalesFunnelList((prev) => (prev = salesFunnelSteps))\n      setPupilsList(\n        (prev) => (prev = salesFunnelSteps.map((step) => step.pupils).flat(2))\n      )\n      setLoaded((prev) => (prev = false))\n    }\n    salesFunnelFromServer()\n    return () => {\n      setSalesFunnelList((prev) => (prev = []))\n      setPupilsList((prev) => (prev = []))\n    }\n  }, [Url])\n  // useEffect\n\n  // Methods\n  const onDragEndHandler = async (result) => {\n    if (!result.destination) {\n      return setPupilsList((prev) => prev)\n    }\n\n    const array1 = pupilsList.filter(\n      (stud) => stud.salesFunnelStep === result.source.droppableId\n    )\n    const array2 = pupilsList.filter(\n      (stud) => stud.salesFunnelStep === result.destination.droppableId\n    )\n    const [deletingElement] = array1.splice(result.source.index, 1)\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      array1.splice(result.destination.index, 0, deletingElement)\n\n      return setPupilsList((prev) =>\n        Array.from(new Set([...prev, ...array1, ...array2]))\n      )\n    }\n\n    const oldStatuses = deletingElement.statuses\n    deletingElement.statuses = deletingElement.statuses.map(\n      (el) => (el = el._id)\n    )\n    deletingElement.salesFunnelStep = result.destination.droppableId\n\n    await axiosUpdateStudent(Url, deletingElement._id, deletingElement)\n    deletingElement.statuses = oldStatuses\n\n    array2.splice(result.destination.index, 0, deletingElement)\n\n    return setPupilsList((prev) =>\n      Array.from(new Set([...prev, ...array1, ...array2]))\n    )\n  }\n  // Methods\n\n  return (\n    <Wrapper>\n      {loaded ? (\n        <Loader />\n      ) : (\n        <FunnelSection jstctn={salesFunnelList.length < 6 ? true : false}>\n          <DragDropContext onDragEnd={onDragEndHandler}>\n            {salesFunnelList.map((card) => (\n              <FunnelStep\n                key={card._id}\n                style={\n                  card.name === 'Занимаются' || card.name === 'Занимается'\n                    ? { display: 'none' }\n                    : { display: 'block' }\n                }\n                className={'card'}\n              >\n                <FunnelStepHeader background={card.background}>\n                  {tooltipNeedsCheckerOfSingleString(\n                    card.name.length,\n                    card.name,\n                    '',\n                    30,\n                    '220px'\n                  )}\n                  {card.order === 1 ? (\n                    <SalesFunnelModal\n                      setLoaded={setLoaded}\n                      status={status}\n                      funnel={salesFunnelList}\n                      Url={Url}\n                      setPupilsList={setPupilsList}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </FunnelStepHeader>\n                <FunnelStepAbonementSum background={card.background}>\n                  {card.minPaidSubscriptionsAmount || 0}руб.\n                </FunnelStepAbonementSum>\n                <Droppable droppableId={`${card._id}`}>\n                  {(provide) => (\n                    <div\n                      className=\"droppable-container\"\n                      {...provide.droppableProps}\n                      ref={provide.innerRef}\n                    >\n                      <SalesFunnelStudents\n                        card={card}\n                        pupils={{ pupilsList, setPupilsList }}\n                        Url={Url}\n                      />\n                      {provide.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              </FunnelStep>\n            ))}\n          </DragDropContext>\n        </FunnelSection>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default SalesFunnel\n"],"sourceRoot":""}