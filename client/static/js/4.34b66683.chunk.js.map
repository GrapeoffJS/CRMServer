{"version":3,"sources":["components/home-page/sales-funnel/sales-funnel-modal.jsx","components/home-page/sales-funnel/helpers/loader.jsx","components/home-page/sales-funnel/helpers/tooltip-functions.js","components/home-page/sales-funnel/ClosestTask.jsx","components/home-page/sales-funnel/sales-funnel-students.jsx","components/home-page/sales-funnel/sales-funnel.jsx"],"names":["onFocusHandleInput","event","target","value","onKeyDownInputHandler","setMaskArgument","key","previous","SalesFunnelModal","funnel","Url","setPupilsList","setLoaded","bigIcon","update","defaultValueOptionFunnel","validateDiscordNickname","dateFormat","useState","confirmLoading","setConfirmLoading","visible","setVisible","moment","dateValue","setDateValue","inputName","setInputName","inputSurname","setInputSurname","inputMidname","setInputMidname","selectGender","setSelectGender","inputParentPhones","setInputParentPhones","inputParentFullname","setInputParentFullname","inputChildPhones","setInputChildPhones","inputDiscordNickname","setInputDiscordNickname","_id","selectSalesFunnelStep","setSelectSalesFunnelStep","mask","setMask","mask2","setMask2","deletingDataFromForm","handleCancel","showModal","handleOk","a","swallErr","Error","split","filter","item","length","swallError","search","newStudent","name","surname","midname","gender","dateOfBirth","toISOString","phones","undefined","discord","String","match","shift","parentPhones","parentFullname","salesFunnelStep","axiosCreateNewStudent","student","swallGood","closestTask","style","position","right","className","id","role","tabIndex","onClick","fontSize","color","UserAddOutlined","StylesForUserAddOutlined","width","title","onCancel","footer","loading","type","action","method","onChange","hooksHandler","required","placeholder","defaultValue","format","autoComplete","onKeyDown","onFocus","StylesForInputMaskPhoneParentOrChild","join","map","step","SalesFunnelModalMemo","React","memo","LoaderTag","styled","div","props","precentage","Loader","tooltipNeedsCheckerOfSingleString","string","dop","maxLength","dopTooltipText","placement","tooltipCheckerOfTrioString","stud","ClosestTask","deadline","responsible","text","SalesFunnelStudents","card","pupils","pupilsList","pageSize","loaded","index","draggableId","provided","background","draggableProps","dragHandleProps","ref","innerRef","to","minPaidSubscription","portable","contains","statuses","stat","overlay","SalesFunnel","UrlProduction","salesFunnelList","setSalesFunnelList","useEffect","axiosGetFunnelSteps","salesFunnelSteps","flat","salesFunnelFromServer","onDragEndHandler","result","destination","array1","source","droppableId","array2","splice","deletingElement","returnValue","Set","oldStatuses","element","axiosUpdateStudent","jstctn","onDragEnd","display","order","status","minPaidSubscriptionsAmount","provide","droppableProps"],"mappings":"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","file":"static/js/4.34b66683.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Button, DatePicker, Input, Modal} from 'antd';\nimport moment from 'moment';\nimport InputMask from 'react-input-mask';\nimport {UserAddOutlined} from '@ant-design/icons';\n\nimport {\n    FlexFunnelElement,\n    StylesForInputMaskPhoneParentOrChild,\n    StylesForUserAddOutlined\n} from './helpers/sales-funnel-styled';\nimport {axiosCreateNewStudent} from './helpers/axios-requests';\nimport {swallErr, swallGood} from '../../../alert/alert';\nimport hooksHandler from '../../../helpers/hooksHandler';\n\nconst onFocusHandleInput = event => {\n    event.target.value = '';\n};\nconst onKeyDownInputHandler = setMaskArgument => event => {\n    if (event.key !== 'Enter') return;\n\n    setMaskArgument(previous => [...previous, ', ', previous[0]]);\n};\n\nfunction SalesFunnelModal({\n                              funnel,\n                              Url,\n                              setPupilsList,\n                              setLoaded,\n                              bigIcon = false,\n                              update = () => {\n                              },\n                              defaultValueOptionFunnel = ''\n                          }) {\n    const validateDiscordNickname = /\\w+#\\d{4}/;\n    const dateFormat = 'DD-MM-YYYY';\n\n    const [confirmLoading, setConfirmLoading] = useState(false);\n    const [visible, setVisible] = useState(false);\n\n    const [dateValue, setDateValue] = useState(\n        moment('01-01-2021', dateFormat)\n    );\n    const [inputName, setInputName] = useState('');\n    const [inputSurname, setInputSurname] = useState('');\n    const [inputMidname, setInputMidname] = useState('');\n    const [selectGender, setSelectGender] = useState('');\n    const [inputParentPhones, setInputParentPhones] = useState('');\n    const [inputParentFullname, setInputParentFullname] = useState('');\n    const [inputChildPhones, setInputChildPhones] = useState('');\n    const [inputDiscordNickname, setInputDiscordNickname] = useState('');\n    const [selectSalesFunnelStep, setSelectSalesFunnelStep] = useState(\n        funnel[0]._id\n    );\n\n    const [mask, setMask] = useState(['+9 (999) 999-99-99']);\n    const [mask2, setMask2] = useState(['+9 (999) 999-99-99']);\n\n    const deletingDataFromForm = () => {\n        setInputName(() => '');\n        setInputSurname(() => '');\n        setInputMidname(() => '');\n        setDateValue(() => moment('01-01-2021', dateFormat));\n        setSelectGender(() => '');\n        setInputParentFullname(() => '');\n        setInputDiscordNickname(() => '');\n        setMask(() => ['+9 (999) 999-99-99']);\n        setMask2(() => ['+9 (999) 999-99-99']);\n    };\n    const handleCancel = () => {\n        setVisible(false);\n        deletingDataFromForm();\n    };\n    const showModal = () => {\n        setVisible(true);\n    };\n    const handleOk = async () => {\n        try {\n            setConfirmLoading(true);\n            if (selectGender === '') {\n                swallErr('Ошибка!', 'Не указан пол');\n                throw new Error('Не указан пол');\n            }\n            if (\n                inputParentFullname.split(' ').filter(item => item !== '')\n                    .length !== 3\n            ) {\n                swallError('Ошибка!', 'ФИО Родителя введены неверно');\n                throw new Error('ФИО Родителя введены неверно');\n            }\n            if (\n                inputDiscordNickname !== '' &&\n                inputDiscordNickname.search(validateDiscordNickname) === -1\n            ) {\n                swallErr(\n                    'Ошибка!',\n                    \"Ник в дискорде был введён не верно, проверьте наличие '#' и цифр после неё, а так же русских букв\"\n                );\n                throw new Error(\n                    \"Ник в дискорде был введён не верно, проверьте наличие '#' и цифр после неё, а так же русских букв\"\n                );\n            }\n            if (!selectSalesFunnelStep) {\n                swallErr('Ошибка!', 'Этап в воронке не выбран');\n                throw new Error('Этап в воронке не выбран');\n            }\n            const newStudent = {\n                name: inputName,\n                surname: inputSurname,\n                midname: inputMidname,\n                gender: selectGender,\n                dateOfBirth: dateValue.toISOString(),\n                phones: inputChildPhones.split(',') || undefined,\n                discord:\n                    inputDiscordNickname !== ''\n                        ? String(\n                            inputDiscordNickname\n                                .match(validateDiscordNickname)\n                                .shift()\n                        )\n                        : undefined,\n                parentPhones: inputParentPhones.split(','),\n                parentFullname: inputParentFullname,\n                salesFunnelStep: selectSalesFunnelStep\n            };\n            const student = await axiosCreateNewStudent(Url, newStudent);\n            swallGood('Успешно!', 'Пользователь создан!');\n            update();\n            await setPupilsList(previous => [\n                ...previous,\n                {...student, closestTask: []}\n            ]);\n            setLoaded(() => true);\n            setLoaded(() => false);\n            setVisible(false);\n            setConfirmLoading(false);\n            deletingDataFromForm();\n        } catch {\n            swallErr('Ошибка!', 'Произошла неизвестная ошибка');\n        }\n    };\n\n    return (\n        <>\n            {bigIcon ? (\n                <div\n                    style={{\n                        position: 'absolute',\n                        right: 0\n                    }}\n                    className=\"collapse d-flex flex-row-reverse\"\n                    id=\"navbarScroll\"\n                >\n                    <div className=\"d-flex plus-box\">\n                        <div\n                            role=\"button\"\n                            tabIndex=\"0\"\n                            className=\"nav-item plus\"\n                            onClick={showModal}\n                        >\n                            <i\n                                className=\"bi bi-person-plus\"\n                                style={{\n                                    fontSize: '38px',\n                                    color: '#F56767'\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <UserAddOutlined\n                    style={StylesForUserAddOutlined}\n                    onClick={showModal}\n                />\n            )}\n            <Modal\n                width={900}\n                title=\"Создание ученика\"\n                visible={visible}\n                onCancel={handleCancel}\n                footer={[\n                    <Button key=\"back\" onClick={handleCancel}>\n                        Отмена\n                    </Button>,\n                    <Button\n                        key=\"submit\"\n                        onClick={handleOk}\n                        loading={confirmLoading}\n                        type=\"primary\"\n                    >\n                        Добавить\n                    </Button>\n                ]}\n            >\n                <form action=\"#\" method=\"POST\">\n                    <FlexFunnelElement>\n                        <p>Имя:</p>\n                        <Input\n                            onChange={hooksHandler(\n                                setInputName,\n                                'event.target.value'\n                            )}\n                            value={inputName}\n                            required\n                        />\n                    </FlexFunnelElement>\n                    <FlexFunnelElement>\n                        <p>Фамилия:</p>\n                        <Input\n                            onChange={hooksHandler(\n                                setInputSurname,\n                                'event.target.value'\n                            )}\n                            value={inputSurname}\n                            required\n                        />\n                    </FlexFunnelElement>\n                    <FlexFunnelElement>\n                        <p>Отчество:</p>\n                        <Input\n                            onChange={hooksHandler(\n                                setInputMidname,\n                                'event.target.value'\n                            )}\n                            value={inputMidname}\n                            required\n                        />\n                    </FlexFunnelElement>\n                    <FlexFunnelElement>\n                        <p>Возраст:</p>\n                        <DatePicker\n                            className=\"form-control\"\n                            placeholder=\"ГГГГ.ММ.ДД\"\n                            defaultValue={moment('01-01-2021', dateFormat)}\n                            format={dateFormat}\n                            onChange={hooksHandler(setDateValue, 'event')}\n                        />\n                    </FlexFunnelElement>\n                    <FlexFunnelElement>\n                        <p>ФИО Родителя:</p>\n                        <Input\n                            onChange={hooksHandler(\n                                setInputParentFullname,\n                                'event.target.value'\n                            )}\n                            value={inputParentFullname}\n                            required\n                            placeholder=\"Фамилия Имя Отчество\"\n                        />\n                    </FlexFunnelElement>\n                    <FlexFunnelElement>\n                        <p>Ник в дискорде:</p>\n                        <Input\n                            onChange={hooksHandler(\n                                setInputDiscordNickname,\n                                'event.target.value'\n                            )}\n                            value={inputDiscordNickname}\n                            placeholder=\"Необязательно\"\n                        />\n                    </FlexFunnelElement>\n                    <FlexFunnelElement>\n                        <p>Номер телефона ребёнка:</p>\n                        <InputMask\n                            autoComplete=\"off\"\n                            onChange={hooksHandler(\n                                setInputChildPhones,\n                                'event.target.value'\n                            )}\n                            onKeyDown={onKeyDownInputHandler(setMask)}\n                            onFocus={onFocusHandleInput}\n                            style={StylesForInputMaskPhoneParentOrChild}\n                            type=\"tel\"\n                            name=\"tel\"\n                            className=\"form-control\"\n                            mask={mask.join('')}\n                            placeholder=\"Необязательное поле\"\n                        />\n                    </FlexFunnelElement>\n                    <FlexFunnelElement>\n                        <p>Номер телефона родителя:</p>\n                        <InputMask\n                            autoComplete=\"off\"\n                            onChange={hooksHandler(\n                                setInputParentPhones,\n                                'event.target.value'\n                            )}\n                            onKeyDown={onKeyDownInputHandler(setMask2)}\n                            onFocus={onFocusHandleInput}\n                            style={StylesForInputMaskPhoneParentOrChild}\n                            type=\"tel\"\n                            name=\"tel\"\n                            className=\"form-control\"\n                            mask={mask2.join('')}\n                        />\n                    </FlexFunnelElement>\n                    <FlexFunnelElement>\n                        <p>Пол:</p>\n                        <select\n                            onChange={hooksHandler(\n                                setSelectGender,\n                                'event.target.value'\n                            )}\n                            name=\"gender\"\n                            value={selectGender}\n                            className=\"form-control\"\n                            required\n                        >\n                            <option value=\"Не выбрано\" defaultValue>\n                                Не выбрано\n                            </option>\n                            <option value=\"Мужской\">Мужской</option>\n                            <option value=\"Женский\">Женский</option>\n                        </select>\n                    </FlexFunnelElement>\n                    <FlexFunnelElement>\n                        <p>Воронка:</p>\n                        <select\n                            className=\"form-control\"\n                            name=\"salesFunnelId\"\n                            value={selectSalesFunnelStep}\n                            onChange={hooksHandler(\n                                setSelectSalesFunnelStep,\n                                'event.target.value'\n                            )}\n                        >\n                            {defaultValueOptionFunnel}\n                            {funnel.map(step => {\n                                if (funnel[0]._id === step._id) {\n                                    return (\n                                        <option\n                                            key={step._id}\n                                            value={step._id}\n                                            defaultValue\n                                        >\n                                            {step.name}\n                                        </option>\n                                    );\n                                }\n                                return (\n                                    <option key={step._id} value={step._id}>\n                                        {step.name}\n                                    </option>\n                                );\n                            })}\n                        </select>\n                    </FlexFunnelElement>\n                </form>\n            </Modal>\n        </>\n    );\n}\n\nexport const SalesFunnelModalMemo = React.memo(SalesFunnelModal);\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\n\nconst LoaderTag = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: ${props => props.precentage ? \"100%\" : \"100vh\"};\n  .lds-ring {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-ring div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 64px;\n    height: 64px;\n    margin: 8px;\n    border: 8px solid #001529;\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #001529 transparent transparent transparent;\n  }\n  .lds-ring div:nth-of-type(1) {\n    animation-delay: -0.45s;\n  }\n  .lds-ring div:nth-of-type(2) {\n    animation-delay: -0.3s;\n  }\n  .lds-ring div:nth-of-type(3) {\n    animation-delay: -0.15s;\n  }\n  @keyframes lds-ring {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n`\n\nexport const Loader = ({precentage}) => {\n    return (\n        <LoaderTag precentage={precentage}>\n            <div className=\"lds-ring\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </LoaderTag>\n    );\n};","// imports from plugins\nimport {Tooltip} from \"antd\"\nimport React from \"react\"\n\n// imports from files of project\nimport {FunnelStepText} from \"./sales-funnel-styled\"\n\nexport const tooltipNeedsCheckerOfSingleString = (length, string, dop = '', maxLength = 24, width = \"\", dopTooltipText = \"\") => {\n    if (length + dop.length > maxLength) {\n        return (\n            <Tooltip placement=\"leftTop\" title={`${dopTooltipText}${dopTooltipText !== \"\" ? \" \" : \"\"}${string}`}>\n                <FunnelStepText width={width}>{dop} {string}</FunnelStepText>\n            </Tooltip>\n        )\n    }\n    return <FunnelStepText>{dop} {string}</FunnelStepText>\n}\n\nexport const tooltipCheckerOfTrioString = (length, stud, dop = '', maxLength = 24, width = \"\", dopTooltipText = \"\") => {\n    if (length + dop.length > maxLength) {\n        return (\n            <Tooltip placement=\"leftTop\"\n                     title={`${dopTooltipText}${dopTooltipText !== \"\" ? \" \" : \"\"}${stud.surname} ${stud.name} ${stud.midname}`}>\n                <FunnelStepText width={width}>{stud.surname} {stud.name} {stud.midname}</FunnelStepText>\n            </Tooltip>\n        )\n    }\n    return <FunnelStepText>{stud.surname} {stud.name} {stud.midname}</FunnelStepText>\n}","import moment from \"moment\"\nimport React from \"react\"\n\nimport {DropdownClosestTask} from \"./helpers/sales-funnel-styled\"\n\nexport const ClosestTask = ({closestTask}) => {\n    return (\n        <DropdownClosestTask>\n            <p className=\"name\">{closestTask?.name}</p>\n            <p>До: {moment(closestTask?.deadline).format(\"DD/MM/YYYY | HH:mm\")}</p>\n            <p>Ответственнен: {closestTask?.responsible[0]?.surname} {closestTask?.responsible[0]?.name} {closestTask?.responsible[0]?.midname}</p>\n            <div>\n                {closestTask?.text}\n            </div>\n        </DropdownClosestTask>\n    )\n}","// imports from plugins\nimport React, {useState} from \"react\"\nimport {Draggable} from \"react-beautiful-dnd\"\nimport {NavLink} from \"react-router-dom\"\nimport {Dropdown, Tag} from \"antd\"\n\n// imports from files of project\nimport {FunnelStepStudent, HoverTask, StatusesBlock, VisibilitySpan} from \"./helpers/sales-funnel-styled\"\nimport {Loader} from \"./helpers/loader\"\nimport {tooltipCheckerOfTrioString} from \"./helpers/tooltip-functions\"\nimport {ClosestTask} from \"./ClosestTask\"\n\nexport const SalesFunnelStudents = ({Url, card, pupils, pageSize}) => {\n\n    // data\n    const {pupilsList} = pupils\n    // data\n\n    // useState\n    const [loaded] = useState(false)\n    // useState\n\n    return (\n        <>\n            {loaded ? <Loader\n                precentage={true}/> : pupilsList.filter(stud => stud.salesFunnelStep === card._id).map((stud, index) => (\n                <Draggable key={stud._id} draggableId={`${stud._id}`} index={index}>\n                    {provided => (\n                        <FunnelStepStudent background={card.background} {...provided.draggableProps}\n                                           {...provided.dragHandleProps} ref={provided.innerRef}>\n                            <div className=\"funnelStepStudent__first--info\">\n                                <div>\n                                    <NavLink to={`/student/${stud._id}`}>\n                                        {tooltipCheckerOfTrioString(`${stud.surname} ${stud.name} ${stud.midname}`.length, stud, \"\", 25, \"230px\", \"ФИО:\")}\n                                    </NavLink>\n                                </div>\n                                <div>\n                                    <VisibilitySpan>Тел.Родителя:</VisibilitySpan> {/*stud?.phones?.length > 1 ? `${stud?.phones[0]}...` : stud?.phones[0]*/}78\n                                </div>\n                                <div>\n                                    <VisibilitySpan>Мин.Абонемент:</VisibilitySpan> {stud.minPaidSubscription || 0}₽\n                                </div>\n                                <StatusesBlock portable={true} contains={stud.statuses.length}>\n                                    {stud.statuses.map(stat => (\n                                        <Tag key={stat._id} color={stat.color}>{stat.name}</Tag>\n                                    ))}\n                                </StatusesBlock>\n                                {stud.closestTask.length ?\n                                    <Dropdown overlay={<ClosestTask closestTask={stud.closestTask[0]}/>}>\n                                        <HoverTask>\n                                            Ближайшая задача\n                                        </HoverTask>\n                                    </Dropdown> : \"\"}\n                            </div>\n                        </FunnelStepStudent>\n                    )}\n                </Draggable>\n            ))}\n        </>\n\n    )\n}","// imports from plugins\nimport React, {useEffect, useState} from 'react';\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd';\n\n// imports from files of project\nimport {\n    FunnelSection,\n    FunnelStep,\n    FunnelStepAbonementSum,\n    FunnelStepHeader,\n    Wrapper\n} from './helpers/sales-funnel-styled';\nimport {SalesFunnelModalMemo} from './sales-funnel-modal';\nimport {Loader} from './helpers/loader';\nimport {tooltipNeedsCheckerOfSingleString} from './helpers/tooltip-functions';\nimport UrlProduction from '../../../url/url';\nimport {SalesFunnelStudents} from './sales-funnel-students';\nimport {axiosGetFunnelSteps, axiosUpdateStudent} from './helpers/axios-requests';\nimport {swallErr} from '../../../alert/alert';\n\nfunction SalesFunnel() {\n    const status = 1;\n    const Url = status ? UrlProduction : 'https://dvmncrm.herokuapp.com';\n\n    const [loaded, setLoaded] = useState(true);\n    const [salesFunnelList, setSalesFunnelList] = useState([]);\n    const [pupilsList, setPupilsList] = useState([]);\n\n    useEffect(() => {\n        try {\n            const salesFunnelFromServer = async () => {\n                const salesFunnelSteps = await axiosGetFunnelSteps(Url);\n                setSalesFunnelList(() => salesFunnelSteps);\n                setPupilsList(() => salesFunnelSteps.map(step => step.pupils).flat(2));\n                setLoaded(() => false);\n            };\n            salesFunnelFromServer();\n        } catch {\n            swallErr('Ошибка!', 'Произошла какая-то ошибка');\n        }\n        return () => {\n            setSalesFunnelList(() => []);\n            setPupilsList(() => []);\n        };\n    }, [Url]);\n\n    const onDragEndHandler = async result => {\n        if (!result.destination) {\n            return setPupilsList(previous => previous);\n        }\n\n        const array1 = pupilsList.filter(\n            stud => stud.salesFunnelStep === result.source.droppableId\n        );\n        const array2 = pupilsList.filter(\n            stud => stud.salesFunnelStep === result.destination.droppableId\n        );\n        const [deletingElement] = array1.splice(result.source.index, 1);\n        const returnValue = setPupilsList(previous => [\n            ...new Set([...previous, ...array1, ...array2])\n        ]);\n\n        if (result.source.droppableId === result.destination.droppableId) {\n            array1.splice(result.destination.index, 0, deletingElement);\n\n            return returnValue;\n        }\n\n        const oldStatuses = deletingElement.statuses;\n        deletingElement.statuses = deletingElement.statuses.map(\n            element => element._id\n        );\n        deletingElement.salesFunnelStep = result.destination.droppableId;\n\n        await axiosUpdateStudent(Url, deletingElement._id, deletingElement);\n        deletingElement.statuses = oldStatuses;\n\n        array2.splice(result.destination.index, 0, deletingElement);\n\n        return returnValue;\n    };\n\n    return (\n        <Wrapper>\n            {loaded ? (\n                <Loader/>\n            ) : (\n                <FunnelSection jstctn={salesFunnelList.length < 6}>\n                    <DragDropContext onDragEnd={onDragEndHandler}>\n                        {salesFunnelList.map(card => (\n                            <FunnelStep\n                                key={card._id}\n                                style={\n                                    card.name === 'Занимаются' ||\n                                    card.name === 'Занимается'\n                                        ? {display: 'none'}\n                                        : {display: 'block'}\n                                }\n                                className=\"card\"\n                            >\n                                <FunnelStepHeader background={card.background}>\n                                    {tooltipNeedsCheckerOfSingleString(\n                                        card.name.length,\n                                        card.name,\n                                        '',\n                                        30,\n                                        '220px'\n                                    )}\n                                    {card.order === 1 ? (\n                                        <SalesFunnelModalMemo\n                                            setLoaded={setLoaded}\n                                            status={status}\n                                            funnel={salesFunnelList}\n                                            Url={Url}\n                                            setPupilsList={setPupilsList}\n                                        />\n                                    ) : (\n                                        ''\n                                    )}\n                                </FunnelStepHeader>\n                                <FunnelStepAbonementSum\n                                    background={card.background}\n                                >\n                                    {card.minPaidSubscriptionsAmount || 0}\n                                    руб.\n                                </FunnelStepAbonementSum>\n                                <Droppable droppableId={`${card._id}`}>\n                                    {provide => (\n                                        <div\n                                            className=\"droppable-container\"\n                                            ref={provide.innerRef}\n                                            {...provide.droppableProps}\n                                        >\n                                            <SalesFunnelStudents\n                                                card={card}\n                                                pupils={{\n                                                    pupilsList,\n                                                    setPupilsList\n                                                }}\n                                                Url={Url}\n                                            />\n                                            {provide.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                            </FunnelStep>\n                        ))}\n                    </DragDropContext>\n                </FunnelSection>\n            )}\n        </Wrapper>\n    );\n}\n\nexport default SalesFunnel;\n"],"sourceRoot":""}