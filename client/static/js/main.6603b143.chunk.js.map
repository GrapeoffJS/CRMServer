{"version":3,"sources":["helpers/hooksHandler.js","url/url.js","components/home-page/sales-funnel/helpers/axios-requests.js","components/home-page/student/pageStudent/chat/task-item/requests/createComment.js","alert/alert.js","components/home-page/student/pageStudent/chat/task-item/requests/editTask.js","components/home-page/sales-funnel/helpers/sales-funnel-styled.js","components/home-page/student/pageStudent/chat/task-item/requests/getTags.js","components/home-page/student/pageStudent/chat/task-item/requests/getResponsibles.js","components/home-page/student/pageStudent/chat/task-item/requests/createTask.js","components/home-page/student/pageStudent/chat/task-item/helpers/selectResponsible.js","components/home-page/student/pageStudent/chat/task-item/requests/createTag.js","components/home-page/student/pageStudent/chat/task-item/components/SelectResponsibleAndDate.jsx","components/home-page/student/pageStudent/chat/task-item/CreateTask.jsx","reducers/index.js","store.js","components/restriction-message/restriction-message.js","components/form-log-In/form-log-in.js","#localStorage_change.js","components/error-handler/error-handler.js","components/search/server-request.js","components/search/search.js","components/home-page/return-age/returnAge.js","components/home-page/#more-functions/getLimit/getLimit.js","components/home-page/#more-functions/pagination/pagination.js","components/home-page/student/service-student/service-student.js","actions/index.js","components/home-page/student/create-student/auxiliary_components.js","components/home-page/student/create-student/create-student.logics.js","components/home-page/student/create-student/create-student.js","components/home-page/student/student.js","components/home-page/change-balance/changeBalance.js","components/home-page/group/group-page/pupils-and-time/pupils-and-time.style.js","components/home-page/group/group-page/pupils-and-time/pupils-and-time.js","components/home-page/group/group-logic.js","components/home-page/student/pageStudent/add-student-group-/request-add-student-group.js","components/home-page/student/pageStudent/add-student-group-/add-student-group-.js","components/home-page/student/pageStudent/add-student-group-/add-student-group-logic.js","components/home-page/student/pageStudent/Info-table/InfoTable.js","components/home-page/student/pageStudent/balance/balance.style.js","components/home-page/student/pageStudent/balance/balance.js","components/home-page/student/pageStudent/payment-history/paymentHistory.js","components/home-page/student/pageStudent/chat/chat-item/chat.js","components/home-page/student/pageStudent/chat/chat-item/CommentList.jsx","components/home-page/student/pageStudent/chat/styled.js","components/home-page/student/pageStudent/chat/task-item/TaskComponent.jsx","components/home-page/student/pageStudent/chat/task-item/Tasks.jsx","components/home-page/student/pageStudent/chat/drawer-chat.js","components/home-page/student/pageStudent/style-pageStudent.js","components/home-page/student/student-statuses/logic-statuses.js","components/home-page/student/student-statuses/creating-statuses.js","components/home-page/student/student-statuses/student-statuses.js","components/home-page/student/student-statuses/list-statuses.js","components/home-page/student/pageStudent.styled.js","components/home-page/student/pageStudent/tabs-pupil/tabs-pupil.js","components/home-page/student/pageStudent/pageStudent.js","components/home-page/group/adding-students-to-group.js","components/home-page/group/group-style.js","components/home-page/group/group.js","components/home-page/#more-functions/add-student_group/add-Student_Group.js","components/home-page/group/group-page/Info-table/InfoTable.js","components/home-page/group/group-page/group-page.style.js","components/home-page/group/group-page/group-page.logics.js","components/home-page/#schedule/schedule.js","components/home-page/student/create-student/time-picker/time-picker-schedule.js","components/home-page/#schedule/create-schedule/create-schedule.style.js","components/home-page/#schedule/create-schedule/create-schedule.js","components/home-page/group/group-page/group-page.js","components/home-page/upload-pupils/upload-pupils.js","components/table-groups/table-groups.js","components/home-page/#more-functions/change-column/change-column.js","components/home-page/#more-functions/сreate-columns-and-rows/сreate-columns-rows-groups.js","components/table-pupils/table.js","components/home-page/#more-functions/сreate-columns-and-rows/style-filter.js","components/home-page/#more-functions/сreate-columns-and-rows/filter-dropdown/logics-pupils.js","components/home-page/#more-functions/сreate-columns-and-rows/filter-dropdown/filter-by-teachers.js","components/home-page/#more-functions/сreate-columns-and-rows/сreate-columns-rows-pupils.js","hocs/SuspenseComponent.jsx","components/trial-lessons/trial-lessons.style.js","components/trial-lessons/trial-lesson-schedule/trial-lesson-schedule.logics.js","components/trial-lessons/trial-lesson-schedule/trial-lesson-schedule-button_delete.js","components/trial-lessons/trial-lesson-schedule/trial-lesson-schedule-comments.js","components/trial-lessons/trial-lesson-schedule/trial-lesson-schedule.js","components/trial-lessons/create-trial-lesson/create-trial-lesson.style.js","components/trial-lessons/create-trial-lesson/create-trial-lesson.logics.js","components/trial-lessons/selection-students/selection-students.style.js","components/trial-lessons/selection-students/find-students-for-trial-lesson/find-students-for-trial-lesson.logics.js","components/trial-lessons/selection-students/find-students-for-trial-lesson/find-students-for-trial-lesson.js","components/trial-lessons/selection-students/list-students-for-trial-lesson/list-students-for-trial-lesson.logics.js","components/trial-lessons/selection-students/list-students-for-trial-lesson/list-students-for-trial-lesson.js","components/trial-lessons/selection-students/selection-students.js","components/trial-lessons/lead_teacher/lead_teacher.js","components/trial-lessons/button_create_trial_lesson/button_create_trial_lesson.js","components/trial-lessons/create-trial-lesson/create-trial-lesson.js","components/trial-lessons/trial-lessons.js","components/home-page/home-page.js","components/home-page-tutor/today/lesson-now/table-pupils/write-сomment/write-comment.js","components/home-page-tutor/today/lesson-now/table-pupils/change-schedule/change-schedule.js","components/home-page-tutor/today/lesson-now/table-pupils/table-pupils.js","components/home-page-tutor/today/lesson-now/lesson-now.js","components/home-page-tutor/today/all-lesson/table-groups/table-groups.js","components/home-page-tutor/today/all-lesson/all-lesson.js","components/home-page-tutor/today/today.js","components/home-page-tutor/calendar/calendar.js","components/home-page-tutor/all-pupils/all-pupils.js","components/home-page-tutor/all-groups/all-groups.js","components/trial-lessons/trial-lessons-tutor/trial-lessons-tutor.js","components/home-page-tutor/home-page-tutor.js","components/App.js","index.js","components/home-page/student/pageStudent/chat/task-item/task.styled.js"],"names":["hooksHandler","func","newData","event","startsWith","splitData","slice","split","newDataEvent","forEach","_","idx","prev","Url","axiosCreateNewStudent","url","params","a","axios","post","name","midname","surname","gender","dateOfBirth","phones","discord","parentPhones","parentFullname","salesFunnelStep","headers","localStorage","getItem","then","res","result","data","axiosUpdateStudent","id","student","patch","axiosGetFunnelSteps","pageSize","get","salesFunnelSteps","createComment","currentId","comment","authorization","commentS","MySwalErr","withReactContent","Swal","swallError","title","text","fire","icon","MySwaGood","swallGood","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","loading","timerInterval","html","showLoading","setInterval","content","getHtmlContainer","b","querySelector","textContent","getTimerLeft","willClose","clearInterval","RestrictionMessage","status","Swalclose","close","editTask","property","StylesForInputMaskPhoneParentOrChild","borderRadius","StylesForUserAddOutlined","fontSize","color","top","right","VisibilitySpan","styled","span","Wrapper","div","FunnelSection","props","jstctn","FlexFunnelElement","FunnelStep","FunnelStepHeader","background","FunnelStepAbonementSum","FunnelStepText","p","width","FunnelStepStudent","StatusesBlock","portable","contains","HoverTask","DropdownClosestTask","getTags","tags","getResponsibles","query","responsibles","createTask","newTask","taskFromServer","selectResponsible","responsible","_source","doc","createTag","newTag","tag","Option","Select","SelectResponsibleAndDate","responsiblesObj","tagsObj","deadlineObj","tagName","colors","setSelectedResponsible","selectedResponsible","setTagName","setTags","setSelectedTags","selectedTags","setDeadline","deadline","dateFormat","onClickCreateTag","ev","key","Math","floor","random","length","replaceAll","createdTag","showSearch","value","accountType","onChange","find","el","_id","map","className","mode","onInputKeyDown","onSearch","showTime","placeholder","format","CreateTaskComponent","setOpenedModal","setRelTasks","setComments","fio","filterTasks","useState","setResponsibles","jwt","decode","opened","setOpened","setTitle","setText","moment","type","setType","useEffect","getResponsiblesCallback","responsiblesFromReq","body","hits","resp","chosen","getTagsFromServer","tagsRes","onCreateTaskClearForm","Number","onClickSubmit","taskName","typeNumber","responsibleId","deadlineISO","toISOString","tagsArr","filter","includes","for","undefined","isBefore","createdTask","author","children","createdAt","onClick","DoubleLeftOutlined","defaultChecked","rows","initialState","all_disciplines","selected_subject","trial_lessons","possible_teachers","students_for_trial_lesson","subject_teachers","local_week","chosen_teacher","tutor","time","index","trial_lesson_day","all_groups","param_filters_groups","group_name","level","occupied","all_pupils","funnel","drop_down_menu_index","reducer","state","action","payload","lesson","pupil","day","new_local_week","JSON","parse","stringify","tutors","push","group","group_id","store","createStore","require","LogIn","height","button","fontWeight","transition","borderColor","backgroundColor","label","input","i","cursor","FormlogIn","setUser","icons","eye","setEye","valuePassword","setValuePassword","valueLogin","setValueLogin","disabled","setDisabled","inputBorder_L","set_I_Border_L","inputBorder_P","set_I_Border_P","valueChangeL","valueChangeP","opacityBtn","InputBorder_L_Style","InputBorder_P_Style","Button","regLogin","RegExp","regPassword","FormSubmit","e","preventDefault","test","method","login","password","setItem","token","catch","error","response","onSubmit","htmlFor","required","target","defaultValue","autoComplete","style","localStorage_change","removeItem","errorHandler","onFunction","notification","additionalActions","fnc","message","window","location","replace","serverRequest","setData","localUrl","tutorid","functionsONsuccess","Box","paddingBottom","renderItem","obj","to","display","justifyContent","SearchAll","Data","Value","setValue","document","getElementById","focus","typingTimer","renderTitle","options","item","_index","onSearchInput","clearTimeout","setTimeout","encodeURI","dropdownClassName","dropdownMatchSelectWidth","defaultOpen","size","ReturnAge","year","diff","getLimit","round","documentElement","clientHeight","PaginationG","offset","setOffset","count","PaginationI","margin","defaultPageSize","defaultCurrent","total","showSizeChanger","getFunnel","set","box","update","param","filtersGroups","setUsers","setCount","filtersLocal","groups","ages","balance","$gte","$lt","$lte","filters","trashUser","offsetG","delete_all_pupils","add_all_pupils","getStudent_Id","pageStudent_id","set_trial_lesson_day","date","install_all_groups","textError","InputBox","Item","rules","allowClear","InputPhone","mask","mapDispatchToProps","onFinish","values","setLoading_button","setVisible","form","Authorization","parentPhone","resetFields","connect","Form","useForm","visible","loading_button","changeVisibility","onCancel","footer","labelCol","wrapperCol","initialValues","phone","marginRight","htmlType","mq","bp","TableL","padding","paddingTop","whiteSpace","setFunnel","users","setOffsetG","Count","querySelectorAll","dataSource","statuses","trash","phoneNumber","parentPhoneNumber","join","discordNickname","getColumn","dataIndex","columns","render","pagination","scroll","x","Change_Balance","sym","pupil_id","updeteStudent","subscription","returnBalance","urlLocal","Span","ul","border","textarea","Div_box","borderBottom","marginBottom","left","zIndex","overflowY","h4","maxHeight","overflow","marginTop","overflowX","PupilsAndTime","itemG","dataGroup","getGroup_Id","pageInfo","set_drop_down_menu_index","fixedSchedule","setFixedSchedule","ScheduleItem","localSchedule","dataS","setDataS","useRef","addNotes","axiosPut","Abic","setAbic","getAbic","mass","ChangeBalic","liAbic","abic","arr","n","hoursCount","paid","price","menu","SchedulePupils","opacity","time_day","changeDayIndex","setStatus","colorTitle","colorSpan","menuItem","current","ref","visibleLocal","overlay","trigger","duration","urlPage","page","LinkItem","oplata","placement","marginLeft","defaultProps","mapDispathToProps","sortingSearchResponses","setArrayEligibleStudents","arrPupils","requestAddStudentGroup","groupId","studentId","callBefore","ids","AddStudentGroup","updatePage","useParams","isModalVisible","setIsModalVisible","ArrayEligibleGroups","setArrayEligibleGroups","SuitableGroups","resData","spanGroup","AppstoreAddOutlined","showModal","onOk","handleOk","handleCancel","Info_Table","Li","li","InfoTable","dataStudent","updetePage","newInfo","onChangeInfoItem","menuSurname","menuName","menuMidname","menuParentPhone","menuPhone","menuDiscord","_d","Div","Balance","balance_item","setBalance","incBalance","PayHistoryDiv","h3","Box2","PayHistory","pay_History","pay_HistoryLocal","liInc","unshift","amount","issuer","liDec","TextArea","Input","Chat","commentsObj","UserName","comments","submitting","setSubmitting","handleSubmit","datetime","CommentList","header","itemLayout","locale","DivDrawerStyles","List","TaskComponent","task","deleteTask","done","setDone","resFIO","Array","isArray","Object","onClickDeleteTask","archived","checked","completedOn","CloseOutlined","onChangeEditDone","Tasks","React","memo","tasksObj","relTasks","CreateTask","DrawerChat","notes","notesLocal","notesGlobal","block","scrollTop","scrollHeight","COMEN","StudentPage","paddingRight","paddingLeft","borderRight","TablePupils","updateStatuses","setLoading","createStatus","setStatuses","Statuses","onDelete","attachStatus","statuses_id","updateStudent","student_id","CreatingStatuses","studentStatuses","globalStatuses","onPressEnter","status_statuses","status_id","DeleteOutlined","StudentStatuses","studentStatusesGlobal","setGlobalStatuses","lineHeight","DownOutlined","active","ListStatuses","items","FlexDiv","first","TabPane","Tabs","callback","TabsPupil","tabs_groups","defaultActiveKey","tab","PageStudent","paymentHistory","tasks","setSalesFunnelSteps","requestsAsync","studentData","salesFunnelStepsServ","arrIdSch","groups_id","PupilsSandTimeGroup","step","AddingStudentsToGroup","addStudent","addedStudents","ArrayEligibleStudents","SuitableStudents","permitted","setStudent","AddedStudentButton","removeStudent","Table","add_all_groups","delete_all_groups","availableTutor","setAvailableTutor","getGroup","getTUTOR","A_Tutor","pupils","setPupils","groupName","setGROUP_NAME","places","setPLACES","setTUTOR","setLEVEL","tableGroup","global_schedule","PUPILS01","tutorText","scope","trashGroup","PUPILS_ID","trial","newArr","AddStydent_Group","pageId","schedule","changeSchedulePupil","idPupil","newSchedule","addPUPILS_Group","PUPILS_search_Li","Data_ALL","PUPILS0","AllTutor","setAllTutor","onChangeInfo","menuGROUP_NAME","menuTutor","menuLEVEL","menuPLACES","changeData","data_name","GroupPageStyle","h5","setFun","onError","SchedulE","Schedule","previous_day","SpanDay","num","TimePickerSchedule","textAlign","formItemLayout","xs","sm","ScheduleForm","RangePicker","DatePicker","CreateSchedule","updateGroup","groupID","dataInputs","startDate","endDate","weekDay","FindNeedle","dayNumber","day_end","day_number","inc","PushDay","academicHours","scheduleItem","FormChance","range_picker","submit","valuesSuccess","returnTime","newKey","GroupPage","DataALL","setDataALL","PUPILS_List","PUPILSandTIME","addPupils_g","onSuccess","UploadPupils","accept","info","file","statusCode","td","TableGroups","setParamFilrers","paramFilrers","con","MenuFoldOutlined","dataObj","loadingButtomFilrer","setLoadingButtomFilrer","filterDropdownVisible","setFilterDropdownVisible","g","setG","l","setL","setP","o","setO","setN","t","setT","Tutors","setTutors","addTUTOR","CheckboxValue","globalFilters","setGlobalFilters","handleSearch","selectedKeys","confirm","FiltersLocal","DataSource","NUMBER_PUPILS","BoxButtom","svg","filtersTutors","Columns","filterDropdown","setSelectedKeys","clearFilters","dataFilters","SearchOutlined","paramLocal","filterIcon","CloseCircleOutlined","onFilterDropdownVisibleChange","Visible","per","defaultFilteredValue","Table_Pupils","dataGroupsChecked","scrollLeft","itemPupils","filterStatuses","dataStatusesCheck","setFilterAxios","keys","FilterFilled","FilterByTeachers","Create_Columns_Rows_Pupils","ValueGroup","setValueGroup","setDataStatusesCheck","objPupils","setObjPupils","setScrollLeft","age","emptyAge","setEmptyAge","emptyAgeLocal","globalFiltersG","setGlobalFiltersG","s","setS","m","setM","setA","pF","setPF","PhoneTitle","setPhoneTitle","CreatedAt","setCreatedAt","setB","d","setD","gr","setGr","st","setSt","setDataGroupsChecked","GroupsCheckedF","setGroupsCheckedF","heapGroups","dataGroupsCheck","emptyAgeGet","getColumnSearchProps","searchGroups","SearchGroups","FILTER","SET_FILTER","SuspenseComponent","fallback","OtherComponent","Suspense","TrialLessonsStyle","commentingOnGroup","change_trial_lessons","setNotes","new_schedule","change_global_schedule","getTrialLessons","install_trial_lessons","deleteGroups","delete_trial_lessons","free_day_for_teacher","setLessonPassed","setFnc","danger","TrialLessonScheduleComments","lessons","start","substr","delete_group","hour","subject","skeleton","table","CreateTrialLessonStyle","when_choosing_subject","specify_loading","set_subject_teachers","set_local_week","new_week","set_chosen_teacher","week_initial","hour8","Mo","free","Tu","We","Th","Fr","Sa","Su","hour9","hour10","hour11","hour12","hour13","hour14","hour15","hour16","hour17","hour18","hour19","hour20","hour21","initial_work_time","planning_week","setWeek","localWeek","groupNumber","numberOfGroups","group_schedule","Start","End","difference","work_time","workHours","getDaysOfWeek","addNumderGroup","DaysOfWeek","reduce","unique","indexOf","tut","end","get_subject_teachers","setVariable","week","next_day","day_name","todayDate","nextDay","currentDay","scheduling","Time","funOptionSubjects","subjects","SelectionStudentsStyle","add_pupil_to_trial_lesson","allPupils","setAllPupils","bordered","textDecoration","ListItem","disablePadding","ListItemButton","addPupil","dense","ListItemText","primary","delete_pupil_to_trial_lesson","SelectionStudents","lang","column","DoubleRightOutlined","add_trial_lessons","new_lesson","clear_pupil_to_trial_lesson","StartTime","EndTime","add","pupils_id","updateTeachers","CreateTrialLesson","info_window","settingsTable","TrialLessons","SalesFunnel","lazy","SuspenseSalesFunnel","TasksPage","SuspenseTasksPage","Sider","Layout","SubMenu","Menu","default_drop_down_menu_index","logOut","collapsed","setCollapsed","ref_window","classList","Vag","bottom","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","UploadOutlined","click","UserOutlined","TeamOutlined","CarryOutOutlined","FunnelPlotOutlined","LikeOutlined","DatabaseOutlined","LogoutOutlined","exact","path","component","Student","Group","writeComment","changeSchedule","getUser","Column","ColumnGroup","ID_Group","GLOBAL_ARR_PUPILS","set_GLOBAL_ARR_DAY","GLOBAL_ROW_KEY","set_GLOBAL_ROW_KEY","ARR_PUPILS","RowKeys","onRowKeys","Notes","finish","onChangeStatys","titlePupil","progres","rowSelection","selectedRowKeys","onSelect","onSelectAll","onBlur","autoSize","minRows","maxRows","LessonNowStyle","Text","Typography","LessonNow","rowKey","setRowKey","GROUP","G","indexD","Groups","newGroup","setGROUP","AllLesson","gro","Today","indexHours","timeN","groupsAll","dataLes_l","itemGL","indexN","groupCon","indexGroup","sort","itemIN","item2","allowAdd","splice","Content","fixed","СalendarStyle","GroupsANDpupils","Сalendar","columns2","itemf","wekDay","wek_day","finalDate","hours","AllPupilsBox","AllPupils","AllGroupsBox","AllGroups","free_places","TrialLessonsTutor","HomePageTutor","role","user","setGroups","Pupils","getGroups","l_user","mass_id","ClockCircleOutlined","CalendarOutlined","App","token_verification","ReactDOM","WrapperTasks","TagBlock","SelectResponsibleAndDateStyled","SubmitButton","OpacityParagraph","OpacityContainer","DeleteButton","WrapperTaskComponent","CheckboxContainer"],"mappings":"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","file":"static/js/main.6603b143.chunk.js","sourcesContent":["const hooksHandler = (func, newData) => {\n    return (event) => {\n        if (newData === \"event\") {\n            newData = event\n        }\n        if (typeof newData === \"string\" && newData.startsWith(\"event\")) {\n            const splitData = newData.slice(6).split(\".\")\n            let newDataEvent = event\n            splitData.forEach((_, idx) => {\n                newDataEvent = newDataEvent[splitData[idx]]\n            })\n            newData = newDataEvent\n        }\n        func(prev => prev = newData)\n    }\n}\n\nexport default hooksHandler","const Url = 'http://crm.3place.ru'; //\nexport default Url;\n\n// lcp --proxyUrl https://dvmncrm.herokuapp.com/\n// https://dvmncrm.herokuapp.com/\n// http://crm.3place.ru\n// http://crmedu.3place.ru\n// list --depth=0\n// http://localhost:8010/proxy\n\n// client\n","import axios from \"axios\"\n\n// Student\nexport const axiosCreateNewStudent = async (url, params) => {\n    let result\n\n    await axios.post(`${url}/CRM/Pupils`, {\n        name: params.name,\n        midname: params.midname,\n        surname: params.surname,\n        gender: params.gender,\n        dateOfBirth: params.dateOfBirth,\n        phones: params.phones,\n        discord: params.discord,\n        parentPhones: params.parentPhones,\n        parentFullname: params.parentFullname,\n        salesFunnelStep: params.salesFunnelStep\n    }, {\n        headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem(\"tokenID\")}`,\n            \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n    }).then(res => result = res.data)\n\n    return result\n}\nexport const axiosUpdateStudent = async (url, id, student) => {\n    await axios.patch(`${url}/CRM/Pupils/${id}`, student, {\n        headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem(\"tokenID\")}`,\n            \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n    })\n}\n// Student\n\n// Funnel\nexport const axiosGetFunnelSteps = async (url, pageSize = 1000) => {\n\n    let salesFunnelSteps\n    await axios.get(`${url}/CRM/SalesFunnel?limit=${pageSize}`, {\n        headers: {\n            'Content-Type': 'application/jsoncharset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem(\"tokenID\")}`\n        }\n    })\n        .then(res => salesFunnelSteps = res.data)\n\n    return salesFunnelSteps\n}\n// Funnel\n","import axios from \"axios\";\n\nexport const createComment = async (url, currentId, comment) => {\n    const commentS = await axios.post(\n        `${url}/CRM/Pupils/${currentId}/Notes`,\n        comment,\n        {\n            headers: {\n                authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n            },\n        }\n    );\n\n    return commentS.data;\n};\n","import React from 'react'\n\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwalErr = withReactContent(Swal)\n\nexport const swallError = (title, text) => {\n    MySwalErr.fire({\n        icon: 'error',\n        title: title,\n        text: text,\n    })\n}\n\nconst MySwaGood = withReactContent(Swal)\n\nexport const swallGood = (title = '', text = '') => {\n    MySwaGood.fire({\n        icon: 'success',\n        title: title,\n        text: text,\n    })\n}\n\nexport const Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n        toast.addEventListener('mouseenter', Swal.stopTimer)\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\n    },\n})\n\nexport const loading = (title = 'Загрузка...', text = '') => {\n    let timerInterval\n    Swal.fire({\n        title: title,\n        html: text,\n        timerProgressBar: true,\n        didOpen: () => {\n            Swal.showLoading()\n            timerInterval = setInterval(() => {\n                const content = Swal.getHtmlContainer()\n                if (content) {\n                    const b = content.querySelector('b')\n                    if (b) {\n                        b.textContent = Swal.getTimerLeft()\n                    }\n                }\n            }, 100)\n        },\n        willClose: () => {\n            clearInterval(timerInterval)\n        },\n    })\n}\n\nexport const RestrictionMessage = (status) => {\n    if (status === 403) {\n        Toast.fire({\n            icon: 'error',\n            title: 'У вас недостаточно прав для этого действия',\n        })\n    }\n}\n\nexport const Swalclose = () => {\n    Swal.close()\n}\n","import axios from \"axios\";\n\nexport const editTask = async (url, id, property) => {\n    await axios.patch(`${url}/CRM/Tasks/${id}`, property, {\n        headers: {\n            authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n        },\n    });\n};","import styled from \"@emotion/styled\"\n\nexport const StylesForInputMaskPhoneParentOrChild = {\n    borderRadius: \"2px\"\n}\n\nexport const StylesForUserAddOutlined = {\n    fontSize: \"18px\",\n    color: '#001529',\n    position: \"absolute\",\n    top: \"4px\",\n    right: \"2px\"\n}\n\nexport const BoldSpan = styled.span`\n  font-weight: bold;\n`\n\nexport const VisibilitySpan = styled.span`\n  opacity: 0.8;\n`\n\nexport const Wrapper = styled.div`\n  position: relative;\n`\nexport const FunnelSection = styled.div`\n  ::-webkit-scrollbar {\n    height: 5px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: darkgrey;\n  }\n  overflow: auto hidden;\n  height: auto;\n  min-width: 100%;\n  display: flex;\n  justify-content: ${props => props.jstctn ? \"space-evenly\" : \"flex-start\"};\n  .droppable-container {\n    min-height: 150px;\n    height: 100%;\n  }\n`\nexport const FlexFunnelElement = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0;\n  > p {\n    flex: 1 0 50%;\n    margin: 0;\n    padding: 0;\n  }\n  > Input {\n    flex: 1 0 50%;\n  }\n`\n\n\nexport const FunnelStep = styled.div`\n  overflow: hidden;\n  max-width: 260px;\n  min-width: 260px;\n  margin: 0px 10px;\n  background: white;\n  border-radius: 4px;\n  .ant-pagination.ant-pagination-simple {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 3px;\n  }\n`\nexport const FunnelStepHeader = styled.div`\n  border-bottom: 1px solid ${props => props.background ? props.background : \"#001529\"};\n  max-height: 26px;\n  padding: 2px 5px;\n  background: white;\n  color: black;\n  font-weight: 500;\n`\n\nexport const FunnelStepAbonementSum = styled.div`\n  position: relative;\n  margin: 0;\n  margin-bottom: 8px;\n  padding: 5px 0;\n  text-align: center;\n  background: white;\n  color: black;\n  font-weight: 500;\n  border-bottom: 4px solid ${props => props.background ? props.background : \"#001529\"};\n  &::before {\n    position: absolute;\n    content: \"\";\n    display: inline-block;\n    bottom: -20px;\n    right: calc((260px - (8px + 8px)) / 2);\n    border-top: 8px solid ${props => props.background ? props.background : \"#001529\"};\n    border-right: 8px solid transparent;\n    border-left: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n  }\n`\n\nexport const FunnelStepText = styled.p`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-break: keep-all;\n  width: ${props => props.width !== '' ? props.width : \"190px\"};\n  height: 25px;\n  margin: 0;\n`\n\nexport const FunnelStepStudent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 8px 3px 8px 8px;\n  margin: 5px 0;\n  border: 1px solid lightgray;\n  border-radius: 1px;\n  background: white;\n  color: black;\n  .funnelStepStudent__first--info {\n    display: flex;\n    flex-direction: column;\n    div:first-of-type {\n      font-weight: bold;\n    }\n    p {\n      margin: 0;\n    }\n    div:last-of-type {\n      margin-bottom: 3px;\n    }\n  }\n  p {\n    margin: 0;\n  }\n`\nexport const StatusesBlock = styled.div`\n  margin: ${props => props.portable ? \"2.5px 0\" : \"2.5px 0 0 5px\"};\n  display: flex;\n  max-width: ${props => props.portable ? 250 : \"100%\"}px;\n  overflow: auto hidden;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  padding: ${props => props.contains ? \"0 0 5px 0\" : \"0\"};\n  &::-webkit-scrollbar {\n    height: 2px;\n    background: white;\n  }\n  &::-webkit-scrollbar-thumb {\n    border: 3px solid lightgray;\n  }\n`\nexport const HoverTask = styled.p`\n  width: fit-content;\n  cursor: pointer;\n  margin: 0 0 2.5px 0;\n  color: #18AEFF;\n  font-weight: 600;\n`\nexport const DropdownClosestTask = styled.div`\n  border: 1px solid lightgray;\n  background: white;\n  padding: 5px;\n  > p {\n    margin: 0;\n    opacity: 0.8;\n  }\n  > .name {\n    font-weight: bold;\n  }\n`","import axios from \"axios\";\n\nexport const getTags = async (url) => {\n    const tags = await axios.get(`${url}/CRM/TaskTags`, {\n        headers: {\n            authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n        },\n    });\n\n    return tags.data;\n};\n","import axios from \"axios\";\n\nexport const getResponsibles = async (url, query = \"\") => {\n    const responsibles = await axios.get(\n        `${url}/CRM/Search/CRMUsers?query=${query}`,\n        {\n            headers: {\n                authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n            },\n        }\n    );\n\n    return responsibles.data;\n};\n","import axios from \"axios\";\n\nexport const createTask = async (url, newTask) => {\n    const taskFromServer = await axios.post(`${url}/CRM/Tasks`, newTask, {\n        headers: {\n            authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n        },\n    });\n\n    return taskFromServer.data;\n};","export const selectResponsible = (responsible) => {\n    if (responsible._source && responsible._source.doc) return responsible._source.doc\n    if (responsible._source) return responsible._source\n    return responsible\n}","import axios from \"axios\";\n\nexport const createTag = async (url, newTag) => {\n    const tag = await axios.post(`${url}/CRM/TaskTags`, newTag, {\n        headers: {\n            authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n        },\n    });\n\n    return tag.data;\n};","import React from \"react\"\nimport {DatePicker, Select} from \"antd\"\n\nimport {selectResponsible} from \"../helpers/selectResponsible\"\nimport {SelectResponsibleAndDateStyled, TagBlock} from \"../task.styled\"\nimport {swallError} from \"../../../../../../../alert/alert\"\nimport {createTag} from \"../requests/createTag\"\nimport hooksHandler from \"../../../../../../../helpers/hooksHandler\"\nimport Url from \"../../../../../../../url/url\"\n\nconst {Option} = Select\n\nexport const SelectResponsibleAndDate = ({portable, responsiblesObj, tagsObj, deadlineObj, tagName}) => {\n    // data\n    const colors = ['magenta', 'red', 'volcano', 'orange', 'gold', 'lime', 'green', 'cyan', 'blue', 'geekblue', 'purple']\n    const {setSelectedResponsible, selectedResponsible, responsibles} = responsiblesObj\n    const {setTagName, setTags, setSelectedTags, tags, selectedTags} = tagsObj\n    const {setDeadline, deadline, dateFormat} = deadlineObj\n    // data\n\n    // methods\n    const onChangeResponsible = (ev) => {\n        const id = ev.split(\" \")[4]\n        setSelectedResponsible(prev => prev = responsibles.find(el => el._id === id))\n    }\n    const onClickCreateTag = async (ev) => {\n        if (!(ev.key === \"Enter\")) return\n        let idx = Math.floor(Math.random() * colors.length)\n        const newTag = {\n            name: tagName,\n            color: colors[idx]\n        }\n        if (!tagName.replaceAll(\" \", \"\").length) {\n            return swallError(\"Ошибка!\", \"Название тэга не может быть пустым\")\n        }\n\n        const createdTag = await createTag(Url, newTag)\n        setTagName(prev => prev = \"\")\n        setTags(prev => prev = [...prev, createdTag])\n        setSelectedTags(prev => prev = [...prev, createdTag.name])\n    }\n    // methods\n\n    return (\n        <SelectResponsibleAndDateStyled portable={portable}>\n            <div>\n                <Select showSearch\n                        value={`${selectResponsible(selectedResponsible).surname} ${selectResponsible(selectedResponsible).name} ${selectResponsible(selectedResponsible).midname} ${selectResponsible(selectedResponsible).accountType} ${selectResponsible(selectedResponsible).id}`}\n                        onChange={onChangeResponsible}>\n                    {responsibles.map(el => (\n                        <Option key={el._id}\n                                value={`${selectResponsible(el).surname} ${selectResponsible(el).name} ${selectResponsible(el).midname} ${selectResponsible(el).accountType} ${selectResponsible(el).id}`}>\n                            {selectResponsible(el).surname} {selectResponsible(el).name} {selectResponsible(el).midname} {selectResponsible(el).accountType}\n                        </Option>\n                    ))}\n                </Select>\n            </div>\n            <TagBlock className=\"adaptive-height\">\n                <Select mode=\"multiple\" value={selectedTags} onInputKeyDown={onClickCreateTag}\n                        onChange={hooksHandler(setSelectedTags, \"event\")} onSearch={hooksHandler(setTagName, \"event\")}>\n                    {tags.map(tag => {\n                        return <Option key={tag._id} value={tag.name}>{tag.name}</Option>\n                    })}\n                </Select>\n            </TagBlock>\n            <div className=\"background-gray\">\n                <DatePicker showTime value={deadline} placeholder=\"Конечный срок\" format={dateFormat}\n                            onChange={hooksHandler(setDeadline, \"event\")}/>\n            </div>\n        </SelectResponsibleAndDateStyled>\n    )\n}","import React, {useEffect, useState} from \"react\"\nimport {DoubleLeftOutlined} from \"@ant-design/icons\"\nimport moment from \"moment\"\nimport jwt from \"jsonwebtoken\"\n\nimport {CreateTask, SubmitButton, WrapperTasks} from \"./task.styled\"\nimport {getResponsibles} from \"./requests/getResponsibles\"\nimport Url from \"../../../../../../url/url\"\nimport {swallError} from \"../../../../../../alert/alert\"\nimport {createTask} from \"./requests/createTask\"\nimport {selectResponsible} from \"./helpers/selectResponsible\"\nimport {getTags} from \"./requests/getTags\"\nimport {createComment} from \"./requests/createComment\"\nimport {SelectResponsibleAndDate} from \"./components/SelectResponsibleAndDate\"\nimport hooksHandler from \"../../../../../../helpers/hooksHandler\"\n\nexport const CreateTaskComponent = ({\n                                        setOpenedModal,\n                                        setRelTasks,\n                                        portable,\n                                        setComments,\n                                        fio = {name: \"\", surname: \"\"},\n                                        _id = \"\",\n                                        filterTasks = () => {\n                                        }\n                                    }) => {\n\n    // data\n    const {name, surname} = fio\n    const dateFormat = [\"DD/MM/YYYY | HH:mm\"]\n    // data\n\n    // useState\n    const [responsibles, setResponsibles] = useState([])\n    const [tags, setTags] = useState([])\n    const [selectedTags, setSelectedTags] = useState([])\n    const [selectedResponsible, setSelectedResponsible] = useState(jwt.decode(localStorage.getItem(\"tokenID\")))\n    const [tagName, setTagName] = useState(\"\")\n    const [opened, setOpened] = useState(false)\n    const [title, setTitle] = useState(\"\")\n    const [text, setText] = useState(\"\")\n    const [deadline, setDeadline] = useState(moment().get())\n    const [type, setType] = useState(0)\n    // useState\n\n    // useEffect\n    useEffect(() => {\n        const getResponsiblesCallback = async () => {\n            const responsiblesFromReq = await getResponsibles(Url, \"\")\n            const responsibles = responsiblesFromReq.body.hits.hits.map(resp => resp = {\n                ...resp,\n                chosen: selectResponsible(resp).id === selectResponsible(selectedResponsible).id ? true : false\n            })\n            setResponsibles(prev => prev = responsibles)\n        }\n        getResponsiblesCallback()\n    }, [selectedResponsible])\n    useEffect(() => {\n        const getTagsFromServer = async () => {\n            const tagsRes = await getTags(Url)\n            setTags(prev => prev = tagsRes)\n        }\n        getTagsFromServer()\n        return onCreateTaskClearForm\n    }, [])\n    useEffect(() => {\n        setType(prev => Number(prev))\n    }, [type])\n    // useEffect\n\n    // methods\n    const selectType = (typeNumber) => {\n        if (typeNumber === 0) return \"Связаться\"\n        if (typeNumber === 1) return \"Созвониться\"\n    }\n    const onCreateTaskClearForm = () => {\n        setTitle(prev => prev = \"\")\n        setText(prev => prev = \"\")\n        setType(prev => prev = 0)\n        setDeadline(prev => prev = moment().get())\n        setSelectedResponsible(prev => prev = jwt.decode(localStorage.getItem(\"tokenID\")))\n        setSelectedTags(prev => prev = [])\n        setOpened(prev => prev = false)\n        setTagName(prev => prev = \"\")\n    }\n    const onClickSubmit = async () => {\n        const taskName = portable ? (type !== 2 ? `${selectType(type)} с ${name} ${surname}` : title) : title\n        const responsibleId = selectResponsible(selectedResponsible).id\n        const deadlineISO = deadline.toISOString()\n        const tagsArr = tags.filter(tag => selectedTags.includes(tag.name)).map(tag => tag._id)\n        const forLid = portable ? _id : undefined\n        const newTask = {\n            name: taskName,\n            text,\n            deadline: deadlineISO,\n            responsible: responsibleId,\n            tags: tagsArr,\n            type,\n            for: forLid\n        }\n        if (taskName.replaceAll(\" \", \"\").length === 0) {\n            return swallError(\"Ошибка!\", \"Название пустое\")\n        }\n        if (deadline && deadline.isBefore(moment().get())) {\n            return swallError(\"Ошибка!\", \"Окончательный срок не может быть раньше сегодняшней даты\")\n        }\n        const createdTask = await createTask(Url, newTask)\n        if (portable) {\n            await createComment(Url, _id, {text: `${createdTask.name}\\n${createdTask.text}`})\n            setComments(prev => [...prev, {\n                author: `${createdTask.responsible.surname} ${createdTask.responsible.name} ${createdTask.responsible.midname}`,\n                content: {props: {children: `${createdTask.name}\\n${createdTask.text}`}},\n                deadline: createdTask.createdAt\n            }])\n        }\n        setRelTasks(prev => prev = portable ? [...prev, createdTask] : filterTasks([...prev, createdTask]))\n        onCreateTaskClearForm()\n        setOpened(prev => prev = false)\n        if (!portable) setOpenedModal(prev => prev = false)\n    }\n    const onClickOpenCreateTaskMenu = () => {\n        setOpened(prev => prev = !prev)\n        setSelectedTags(prev => prev = [])\n    }\n    // methods\n\n    return (\n        <>\n            <WrapperTasks opened={portable ? opened : portable} portable={portable} type={type}>\n                {portable ? <div className=\"buttonUp\">\n                    <button onClick={onClickOpenCreateTaskMenu}>\n                        <DoubleLeftOutlined/>\n                        Создать\n                    </button>\n                </div> : \"\"}\n                <CreateTask portable={portable}>\n                    <div className=\"type__select data\">\n                        <select value={type} onChange={hooksHandler(setType, \"event.target.value\")}>\n                            <option value=\"0\" defaultChecked>Связаться</option>\n                            <option value=\"1\">Созвониться</option>\n                            <option value=\"2\">Другое</option>\n                        </select>\n                    </div>\n                    {type === 2 || !portable ? <div className=\"input__title data\">\n                        <input placeholder=\"Название\" type=\"text\" name=\"title\" value={title}\n                               onChange={hooksHandler(setTitle, \"event.target.value\")}/>\n                    </div> : <p></p>}\n                    <div className=\"textarea__text data\">\n            <textarea placeholder=\"Задача\" name=\"text\" rows={5} value={text}\n                      onChange={hooksHandler(setText, \"event.target.value\")}/>\n                    </div>\n                    <SelectResponsibleAndDate portable={portable}\n                                              responsiblesObj={{\n                                                  setSelectedResponsible,\n                                                  responsibles,\n                                                  selectedResponsible\n                                              }}\n                                              tagName={tagName}\n                                              tagsObj={{setSelectedTags, setTagName, setTags, tags, selectedTags}}\n                                              deadlineObj={{setDeadline, deadline, dateFormat}}/>\n                    <SubmitButton portable={portable}>\n                        <button onClick={onClickSubmit}>Создать</button>\n                    </SubmitButton>\n                </CreateTask>\n            </WrapperTasks>\n        </>\n    )\n}","const initialState = {\n    all_disciplines: ['Программирование', 'Дизайн'],\n    selected_subject: undefined,\n    trial_lessons: [],\n    possible_teachers: [],\n    loading: false,\n    students_for_trial_lesson: [],\n    subject_teachers: [],\n    local_week: {},\n    chosen_teacher: {\n        tutor: {_id: '', surname: '', name: '', midname: ''},\n        time: '',\n        index: '',\n    },\n    trial_lesson_day: '',\n    all_groups: [],\n    param_filters_groups: {\n        group_name: [],\n        level: [],\n        tutor: [],\n        occupied: [],\n    },\n    all_pupils: [],\n    funnel: [],\n    drop_down_menu_index: {},\n}\n\nconst reducer = (state = initialState, action) => {\n    const {type, payload} = action\n    switch (type) {\n        case 'WHEN_CHOOSING_SUBJECT':\n            return {\n                ...state,\n                selected_subject: payload,\n            }\n        case 'INSTALL_TRIAL_LESSONS':\n            return {\n                ...state,\n                trial_lessons: payload,\n            }\n        case 'ADD_TRIAL_LESSONS':\n            return {\n                ...state,\n                trial_lessons: [...state.trial_lessons, payload],\n            }\n        case 'DELETE_TRIAL_LESSONS':\n            return {\n                ...state,\n                trial_lessons: state.trial_lessons.filter(\n                    (lesson) => lesson._id !== payload\n                ),\n            }\n        case 'CHANGE_TRIAL_LESSONS':\n            return {\n                ...state,\n                trial_lessons: state.trial_lessons.map((lesson) => {\n                    if (lesson._id === payload._id) {\n                        return payload\n                    } else {\n                        return lesson\n                    }\n                }),\n            }\n        case 'IDENTIFY_POSSIBLE_TEACHERS':\n            return {\n                ...state,\n                possible_teachers: payload,\n            }\n        case 'SPECIFY_LOADING':\n            return {\n                ...state,\n                loading: payload,\n            }\n        case 'ADD_PUPIL_TO_TRIAL_LESSON':\n            return {\n                ...state,\n                students_for_trial_lesson: [\n                    ...state.students_for_trial_lesson,\n                    payload,\n                ],\n            }\n        case 'DELETE_PUPIL_TO_TRIAL_LESSON':\n            return {\n                ...state,\n                students_for_trial_lesson: state.students_for_trial_lesson.filter(\n                    (pupil) => pupil.id !== payload\n                ),\n            }\n        case 'CLEAR_PUPIL_TO_TRIAL_LESSON':\n            return {\n                ...state,\n                students_for_trial_lesson: [],\n            }\n        case 'SET_SUBJECT_TEACHERS':\n            return {\n                ...state,\n                subject_teachers: payload,\n            }\n        case 'SET_LOCAL_WEEK':\n            return {\n                ...state,\n                local_week: payload,\n            }\n        case 'FREE_DAY_FOR_TEACHER':\n            const {time, day, tutor} = payload\n            let new_local_week = JSON.parse(JSON.stringify(state.local_week))\n            new_local_week[time][day].tutors.push(tutor)\n            return {\n                ...state,\n                local_week: new_local_week,\n            }\n        case 'SET_CHOSEN_TEACHER':\n            return {\n                ...state,\n                chosen_teacher: payload,\n            }\n        case 'SET_TRIAL_LESSON_DAY':\n            return {\n                ...state,\n                trial_lesson_day: payload,\n            }\n        case 'INSTALL_ALL_GROUPS':\n            return {\n                ...state,\n                all_groups: payload,\n            }\n        case 'ADD_ALL_GROUPS': {\n            return {\n                ...state,\n                all_groups: [...state.all_groups, payload],\n            }\n        }\n        case 'DELETE_ALL_GROUPS':\n            return {\n                ...state,\n                all_groups: state.all_groups.filter((group) => group._id !== payload),\n            }\n        case 'INSTALL_PARAM_FILTERS_GROUPS':\n            return {\n                ...state,\n                param_filters_groups: payload,\n            }\n        case 'INSTALL_ALL_PUPILS':\n            return {\n                ...state,\n                all_pupils: payload,\n            }\n        case 'ADD_ALL_PUPILS': {\n            return {\n                ...state,\n                all_pupils: [...state.all_pupils, payload],\n            }\n        }\n        case 'DELETE_ALL_PUPILS':\n            return {\n                ...state,\n                all_pupils: state.all_pupils.filter((group) => group._id !== payload),\n            }\n        case 'INSTALL_FUNNEL':\n            return {\n                ...state,\n                funnel: payload,\n            }\n        case 'DROP_DOWN_MENU_INDEX':\n            return {\n                ...state,\n                drop_down_menu_index: {\n                    [payload.group_id]: payload.index,\n                },\n            }\n        case 'DEFAULT_DROP_DOWN_MENU_INDEX':\n            return {\n                ...state,\n                drop_down_menu_index: {},\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer\n","import {createStore} from \"redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer)\nexport default store","import {Toast} from '../../alert/alert.js'\n\nconst RestrictionMessage = status => {\n    if (status == 403) {\n        Toast.fire({\n            icon: 'error',\n            title: 'У вас недостаточно прав для этого действия'\n        });\n    }\n}\n\nexport default RestrictionMessage","import React, {useState} from 'react'\nimport './form-log-in.css'\nimport Url from '../../url/url.js'\n\nimport {swallError, Toast} from '../../alert/alert'\nimport RestrictionMessage from '../restriction-message/restriction-message.js'\n\nimport styled from '@emotion/styled'\n\nconst axios = require('axios') // AJAX\n\nconst LogIn = styled.div({\n    height: '500px',\n    button: {\n        fontWeight: 'bold',\n        fontSize: '21px',\n        width: '150px',\n        borderRadius: '19px',\n        transition: '0.3s',\n        borderColor: '#007bff',\n        color: '#000',\n        '&:hover': {\n            transition: '0.3s',\n            backgroundColor: '#f7d99f',\n        },\n    },\n    label: {\n        fontSize: '24px',\n        fontWeight: '400',\n    },\n    input: {\n        color: '#000',\n        fontSize: '20px',\n    },\n    'input[type=text]': {\n        background: 'none',\n    },\n    'input[type=password]': {\n        background: 'none',\n    },\n    i: {\n        cursor: 'pointer',\n    },\n})\n\nconst FormlogIn = ({setUser}) => {\n    const [eye, setEye] = useState({\n        icons: 'bi-eye-fill',\n        type: 'password',\n    }) // bi-eye-slash-fill\n    const [valuePassword, setValuePassword] = useState(''),\n        [valueLogin, setValueLogin] = useState('')\n\n    const [disabled, setDisabled] = useState('submit')\n\n    // Style state\n    const [inputBorder_L, set_I_Border_L] = useState(''),\n        [inputBorder_P, set_I_Border_P] = useState('')\n\n    let valueChangeL = valueLogin,\n        valueChangeP = valuePassword\n\n    const showPassword = () => {\n        setValuePassword(valueChangeP)\n        setValueLogin(valueChangeL)\n\n        if (eye.icons === 'bi-eye-fill') {\n            setEye({\n                icons: 'bi-eye-slash-fill',\n                type: 'text',\n            })\n        } else {\n            setEye({\n                icons: 'bi-eye-fill',\n                type: 'password',\n            })\n        }\n    }\n\n    // Alert\n    const swallGood = () => {\n        Toast.fire({\n            icon: 'success',\n            title: 'Вы успешно вошли в систему',\n        })\n    }\n    // \\alert\n\n    let opacityBtn = '1'\n\n    if (disabled === 'button') {\n        opacityBtn = '0.3'\n    }\n\n    const InputBorder_L_Style = styled.input`\n    border: ${inputBorder_L};\n  `\n    const InputBorder_P_Style = styled.input`\n    border: ${inputBorder_P};\n  `\n    const Button = styled.button`\n    opacity: ${opacityBtn};\n  `\n\n    // =============\n\n    let regLogin = new RegExp(/^[\\w\\d\\W]{1,40}$/),\n        regPassword = new RegExp(/^.{1,40}$/)\n\n    const FormSubmit = async (e) => {\n        setValuePassword(valueChangeP)\n        setValueLogin(valueChangeL)\n\n        e.preventDefault()\n\n        if (!regLogin.test(valueChangeL)) {\n            set_I_Border_L('2px solid red')\n        } else {\n            set_I_Border_L('')\n        }\n        if (!regPassword.test(valueChangeP)) {\n            set_I_Border_P('2px solid red')\n        } else {\n            set_I_Border_P('')\n        }\n\n        if (regLogin.test(valueChangeL) && regPassword.test(valueChangeP)) {\n            setDisabled('button')\n\n            axios({\n                method: 'post',\n                url: `${Url}/auth`,\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                },\n                data: {\n                    login: valueChangeL,\n                    password: valueChangeP,\n                },\n            })\n                .then((res) => {\n                    localStorage.setItem('tokenID', res.data.token)\n\n                    setValuePassword('')\n                    setValueLogin('')\n                    setDisabled('submit')\n                    swallGood()\n                    setUser(valueChangeL)\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        RestrictionMessage(error.response.status)\n                        let {status} = error.response\n                        if (status === 400) {\n                            swallError('Ой..', 'Пользователя не существует')\n                            set_I_Border_L('2px solid red')\n                            set_I_Border_P('2px solid red')\n                            setDisabled('submit')\n                        } else {\n                            setDisabled('submit')\n                        }\n                    }\n                })\n        }\n    }\n\n    return (\n        <LogIn className=\"LogIn container d-flex align-items-center justify-content-center\">\n            <form onSubmit={FormSubmit} key={'form1'} className=\"col-md-8 col-12\">\n                <fieldset>\n                    <div className=\"mb-3\">\n                        <label\n                            htmlFor=\"exampleInputEmail1\"\n                            className=\"form-label\"\n                        >{`Логин`}</label>\n                        <InputBorder_L_Style\n                            required\n                            onChange={(e) => {\n                                valueChangeL = e.target.value\n                            }}\n                            defaultValue={valueLogin}\n                            autoComplete=\"current-password\"\n                            type=\"name\"\n                            className=\"form-control\"\n                            name=\"login\"\n                            id=\"exampleInputEmail1\"\n                        />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n                            Пароль\n                        </label>\n                        <InputBorder_P_Style\n                            required\n                            onChange={(e) => {\n                                valueChangeP = e.target.value\n                            }}\n                            defaultValue={valuePassword}\n                            autoComplete=\"current-password\"\n                            type={`${eye.type}`}\n                            className=\"form-control\"\n                            name=\"password\"\n                            id=\"exampleInputPassword1\"\n                        />\n                        <div className=\"password-control\">\n                            <div className=\"d-flex justify-content-end\">\n                                <i\n                                    onClick={showPassword}\n                                    className={`bi ${eye.icons}`}\n                                    style={{fontSize: '28px', color: '#F5896C'}}\n                                ></i>\n                            </div>\n                        </div>\n                    </div>\n                    <Button type={disabled} className=\"btn\">\n                        Войти\n                    </Button>\n                </fieldset>\n            </form>\n        </LogIn>\n    )\n}\n\nexport default FormlogIn\n","const localStorage_change = (token) => {\n    localStorage.removeItem('tokenID');\n    localStorage.setItem('tokenID', token);\n};\n\nexport default localStorage_change;\n","import {RestrictionMessage, swallError} from \"../../alert/alert\";\nimport localStorage_change from \"./../../#localStorage_change\";\n\nconst errorHandler = (onFunction, error, ...additionalActions) => {\n    if (error.response) {\n        let notification = true;\n        additionalActions.forEach((fnc) => {\n            if (typeof fnc !== \"boolean\") {\n                fnc();\n            } else {\n                notification = fnc;\n            }\n        });\n        RestrictionMessage(error.response.status);\n        let {status, data} = error.response;\n\n        if (data.message === \"Bad Request\" && notification) {\n            swallError(\"Невозможно удалить воронку в которой есть ученик\");\n        } else if (status == 404 && notification) {\n            swallError(\"Сервер не найден\");\n        } else if (status == 401) {\n            if (data.message == \"TOKEN_EXPIRED\") {\n                localStorage_change(data.token);\n                onFunction();\n            } else {\n                localStorage.removeItem(\"tokenID\");\n                window.location.replace(\"/\");\n            }\n        } else if (status == 500 && notification) {\n            swallError(\"Ошибка сервера\");\n        } else if (status == 400 && notification) {\n            swallError(\"Не верно введены данные\");\n        }\n    }\n};\n\nexport default errorHandler;\n","import errorHandler from './../error-handler/error-handler'\nimport Url from './../../url/url'\n\nconst axios = require(\"axios\");\n\nexport const serverRequest = (setData, localUrl, tutorid = '', ...functionsONsuccess) => {\n\n    axios({\n        method: 'get',\n        url: `${Url}/CRM/Search/autocompletion?query=${localUrl}${tutorid}`,\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        }\n    })\n        .then((res) => {\n            setData(res.data.body.hits.hits)\n            functionsONsuccess.forEach(fnc => {\n                fnc()\n            })\n        })\n        .catch((error) => {\n            errorHandler(serverRequest, error)\n        })\n}","import React, {useEffect, useState} from 'react';\nimport {serverRequest} from './server-request'\n\nimport {Link} from \"react-router-dom\";\n\nimport {AutoComplete, Input} from 'antd';\n\nimport styled from '@emotion/styled';\n\nconst Box = styled.div({\n    height: '30px',\n    input: {\n        height: '30px'\n    },\n    '.ant-input-search-button': {\n        paddingBottom: 'none'\n    }\n})\n\nconst renderItem = (title, obj) => {\n\n    let url\n\n    if (obj.type === 'pupil') {\n        url = `/student/${obj.id}`\n    } else {\n        url = `/group/${obj.id}`\n    }\n\n    return ({\n        value: title,\n        key: obj.id,\n        label: (\n            <Link\n                className=\"link-info\"\n                to={url}\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between'\n                }}>\n\n                {title}\n            </Link>\n        ),\n    })\n};\n\nconst SearchAll = ({tutorid = ''}) => {\n\n    const [Data, setData] = useState([])\n    const [Value, setValue] = useState('')\n\n    useEffect(() => {\n        document.getElementById('Search').focus();\n    });\n\n    const onSearch = (value) => {\n\n        let localUrl = encodeURI(value)\n\n        serverRequest(setData, localUrl, tutorid, [() => {\n            setValue(value)\n        }])\n    }\n\n    const renderTitle = (title) => (\n        <span>\n      {title}\n    </span>\n    );\n\n    let options = [\n        {\n            label: renderTitle('Ученики'),\n            options: [],\n        },\n        {\n            label: renderTitle('Группы'),\n            options: [],\n        }\n    ];\n\n    Data.forEach(item => {\n        if (item._index === 'pupils') {\n\n            let {surname, name, midname} = item._source\n            options[0].options.push(renderItem(`${surname} ${name} ${midname}`, item._source))\n        } else if (item._index === 'groups') {\n\n            let {group_name} = item._source\n            options[1].options.push(renderItem(group_name, item._source))\n        }\n    })\n\n    let typingTimer                //timer identifier\n    let doneTypingInterval = 500  //time in ms (5 seconds)\n\n    const onSearchInput = (text) => {\n        clearTimeout(typingTimer)\n        if (text) {\n            typingTimer = setTimeout(() => {\n                onSearch(text)\n            }, doneTypingInterval);\n\n        } else {\n            setValue('')\n            setData([])\n        }\n    }\n\n    return (\n        <Box>\n            <AutoComplete\n                dropdownClassName=\"certain-category-search-dropdown\"\n                dropdownMatchSelectWidth={500}\n                options={options}\n                defaultOpen={() => {\n                    return !!Value;\n                }}\n                defaultValue={`${Value}`}\n                onSearch={(text) => {\n                    onSearchInput(text)\n                }}\n                id='Search'>\n\n                <Input size=\"large\" placeholder=\"Поиск по CRM\"/>\n            </AutoComplete>\n        </Box>\n    );\n}\n\nexport default SearchAll","import moment from 'moment'\n\nconst ReturnAge = (data) => {\n    let year = moment(data).format('YYYY-MM-DD') // , 'YYYY-MM-DD'\n\n    let dateOfBirth = moment().diff(year, 'years')\n\n    return dateOfBirth ? dateOfBirth : 'Не указан'\n}\n\nexport default ReturnAge\n","const getLimit = Math.round(document.documentElement.clientHeight / 55) - 2\nexport default getLimit\n","import React from 'react'\n\nimport {Pagination} from 'antd'\nimport 'antd/dist/antd.css'\nimport getLimit from './../../#more-functions/getLimit/getLimit.js'\n\n// Style\nimport styled from '@emotion/styled'\n\nconst PaginationG = ({offset, setOffset, getItem, count}) => {\n    const PaginationI = styled.div({\n        margin: '3px 3px 20px 3px',\n        '.ant-pagination-item-link': {\n            height: '34px',\n        },\n    })\n\n    return (\n        <PaginationI>\n            <Pagination\n                defaultPageSize={getLimit}\n                defaultCurrent={offset / getLimit + 1}\n                total={count}\n                showSizeChanger={false}\n                onChange={(i) => {\n                    setOffset((i - 1) * getLimit)\n                    getItem((i - 1) * getLimit)\n                }}\n            />\n        </PaginationI>\n    )\n}\n\nexport default PaginationG\n","import {axiosGetFunnelSteps} from \"../../sales-funnel/helpers/axios-requests\";\nimport Url from \"../../../../url/url\";\nimport axios from \"axios\";\nimport getLimit from \"../../#more-functions/getLimit/getLimit\";\nimport errorHandler from \"../../../error-handler/error-handler\";\n\nconst getFunnel = async (set) => {\n    let box = await axiosGetFunnelSteps(Url, 8)\n\n    set(box)\n}\n\nconst update = (offset = 0, param = {}, filtersGroups = {}, setUsers = () => {\n}, setCount = () => {\n}) => {\n\n    let filtersLocal = {}\n\n    for (let key in filtersGroups) {\n\n        if (filtersLocal.groups) {\n            filtersLocal.groups.push(key)\n        } else {\n            filtersLocal.groups = []\n            filtersLocal.groups.push(key)\n        }\n    }\n\n    for (let key in param) {\n        if (param[key][0]) {\n            if (key === 'surname' || key === 'name' || key === 'midname' || key === 'dateOfBirth') {\n                filtersLocal[`${key}s`] = param[key]\n            } else {\n                filtersLocal[`${key}`] = param[key]\n            }\n        }\n    }\n\n    if (filtersLocal.ages) {\n        let dateOfBirth = [...filtersLocal.ages]\n        filtersLocal.ages = []\n        dateOfBirth.forEach(dateOfBirth => {\n            filtersLocal.ages.push(+dateOfBirth)\n        })\n    }\n\n    if (filtersLocal.balance) {\n        let balance = [...filtersLocal.balance]\n        if (balance[0] == 1 & !balance[1]) {\n            filtersLocal.balance = {$gte: 0}\n        } else if (balance[0] == 2 & !balance[1]) {\n            filtersLocal.balance = {$lt: 0}\n        } else if (balance[1]) {\n            filtersLocal.balance = {$gte: 0, $lte: 0}\n        }\n    }\n\n    let p = {\n        filters: filtersLocal\n    }\n\n    axios({\n        method: 'post',\n        url: `${Url}/CRM/Pupils/find?limit=${getLimit}&offset=${offset}`, // ${10 + offset}\n        headers: {\n            'Content-Type': 'application/jsoncharset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        },\n        data: p\n    })\n        .then((res) => {\n\n            let {data, headers} = res\n            setUsers(data)\n            setCount(headers.count)\n        })\n        .catch((error) => {\n            errorHandler(update, error)\n        })\n}\n\nconst trashUser = async (item, update, offsetG, delete_all_pupils, add_all_pupils) => {\n    delete_all_pupils(item._id)\n    axios({\n        method: 'DELETE',\n        url: `${Url}/CRM/Pupils/${item._id}`,\n        headers: {\n            'Content-Type': 'application/jsoncharset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        }\n    })\n        .catch((error) => {\n            errorHandler(() => {\n                trashUser(item, update, offsetG, delete_all_pupils, add_all_pupils)\n            }, error, () => {\n                add_all_pupils(item)\n            })\n        })\n}\n\nconst getStudent_Id = async (pageStudent_id) => {\n    let result\n\n    await axios({\n        method: 'get',\n        url: `${Url}/CRM/Pupils/${pageStudent_id}`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        }\n    }).then((response) => result = response.data)\n\n    return result\n}\n\nexport {\n    getFunnel,\n    update,\n    trashUser,\n    getStudent_Id\n}","const when_choosing_subject = (subject) => ({\n    type: 'WHEN_CHOOSING_SUBJECT',\n    payload: subject,\n});\nconst install_trial_lessons = (lessons) => ({\n    // #\n    type: 'INSTALL_TRIAL_LESSONS',\n    payload: lessons,\n});\nconst add_trial_lessons = (new_lesson) => ({\n    // # Добавить пробный урок\n    type: 'ADD_TRIAL_LESSONS',\n    payload: new_lesson,\n});\nconst delete_trial_lessons = (_id) => ({\n    // # Удалить пробный урок\n    type: 'DELETE_TRIAL_LESSONS',\n    payload: _id,\n});\nconst free_day_for_teacher = (time, day, tutor) => ({\n    type: 'FREE_DAY_FOR_TEACHER',\n    payload: {time, day, tutor},\n});\nconst change_trial_lessons = (lesson) => ({\n    type: 'CHANGE_TRIAL_LESSONS',\n    payload: lesson,\n});\nconst identify_possible_teachers = (tutors) => ({\n    // # определить возможных учителей\n    type: 'IDENTIFY_POSSIBLE_TEACHERS',\n    payload: tutors,\n});\nconst specify_loading = (status) => ({\n    type: 'SPECIFY_LOADING',\n    payload: status,\n});\nconst add_pupil_to_trial_lesson = (pupil) => ({\n    type: 'ADD_PUPIL_TO_TRIAL_LESSON',\n    payload: pupil,\n});\nconst delete_pupil_to_trial_lesson = (id) => ({\n    type: 'DELETE_PUPIL_TO_TRIAL_LESSON',\n    payload: id,\n});\nconst clear_pupil_to_trial_lesson = () => ({\n    type: 'CLEAR_PUPIL_TO_TRIAL_LESSON',\n});\nconst set_subject_teachers = (tutors) => ({\n    type: 'SET_SUBJECT_TEACHERS',\n    payload: tutors,\n});\nconst set_local_week = (new_week) => ({\n    type: 'SET_LOCAL_WEEK',\n    payload: new_week,\n});\nconst set_chosen_teacher = (tutor) => ({\n    type: 'SET_CHOSEN_TEACHER',\n    payload: tutor,\n});\nconst set_trial_lesson_day = (date) => ({\n    type: 'SET_TRIAL_LESSON_DAY',\n    payload: date,\n});\nconst install_all_groups = (data) => ({\n    type: 'INSTALL_ALL_GROUPS',\n    payload: data,\n});\nconst add_all_groups = (group) => ({\n    type: 'ADD_ALL_GROUPS',\n    payload: group,\n});\nconst delete_all_groups = (_id) => ({\n    type: 'DELETE_ALL_GROUPS',\n    payload: _id,\n});\nconst install_parameter_filters_groups = (data) => ({\n    type: 'INSTALL_PARAM_FILTERS_GROUPS',\n    payload: data,\n});\nconst install_all_pupils = (data) => ({\n    type: 'INSTALL_ALL_PUPILS',\n    payload: data,\n});\nconst add_all_pupils = (pupil) => ({\n    type: 'ADD_ALL_PUPILS',\n    payload: pupil,\n});\nconst delete_all_pupils = (_id) => ({\n    type: 'DELETE_ALL_PUPILS',\n    payload: _id,\n});\nconst install_funnel = (funnel) => ({\n    type: 'INSTALL_FUNNEL',\n    payload: funnel,\n});\nconst set_drop_down_menu_index = (index, group_id) => ({\n    type: 'DROP_DOWN_MENU_INDEX',\n    payload: {index, group_id},\n});\nconst default_drop_down_menu_index = () => ({\n    type: 'DEFAULT_DROP_DOWN_MENU_INDEX',\n});\n\nexport {\n    when_choosing_subject,\n    install_trial_lessons,\n    identify_possible_teachers,\n    specify_loading,\n    add_pupil_to_trial_lesson,\n    delete_pupil_to_trial_lesson,\n    set_subject_teachers,\n    set_local_week,\n    set_chosen_teacher,\n    set_trial_lesson_day,\n    add_trial_lessons,\n    delete_trial_lessons,\n    change_trial_lessons,\n    free_day_for_teacher,\n    clear_pupil_to_trial_lesson,\n    install_all_groups,\n    add_all_groups,\n    delete_all_groups,\n    install_parameter_filters_groups as install_param_filters_groups,\n    install_all_pupils,\n    add_all_pupils,\n    delete_all_pupils,\n    install_funnel,\n    set_drop_down_menu_index,\n    default_drop_down_menu_index,\n};\n","import {DatePicker, Form, Input} from \"antd\";\nimport InputMask from \"react-input-mask\";\nimport React from \"react\";\n\nconst textError = 'Пожалуйста, заполните это поле!'\n\nconst InputBox = ({label, name, required = true}) => {\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n            rules={[{\n                required,\n                message: textError\n            }]}\n        >\n            {name === 'dateOfBirth' ? <DatePicker placeholder={'гггг-мм-дд'} allowClear={false}/> : <Input/>}\n        </Form.Item>\n    )\n}\nconst InputPhone = ({label, name, required = true}) => {\n\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n            rules={[{\n                required,\n                message: textError\n            }]}\n        >\n            <InputMask\n                autoComplete=\"off\"\n                type=\"tel\"\n                name=\"tel\"\n                className=\"form-control\"\n                mask=\"+9 (999) 999-99-99\"\n            />\n        </Form.Item>\n    )\n}\n\nexport {\n    textError,\n    InputPhone,\n    InputBox\n}","import axios from 'axios'\nimport Url from '../../../../url/url'\nimport {swallGood} from '../../../../alert/alert'\nimport errorHandler from '../../../error-handler/error-handler'\nimport {add_all_pupils} from '../../../../actions'\n\nconst mapStateToProps = (state) => ({\n    funnel: state.funnel,\n})\nconst mapDispatchToProps = {\n    add_all_pupils,\n}\n\nconst onFinish = (\n    values,\n    setLoading_button,\n    setVisible,\n    add_all_pupils,\n    form\n) => {\n    setLoading_button(true)\n    axios({\n        method: 'post',\n        url: `${Url}/CRM/Pupils`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n        },\n        data: {\n            ...values,\n            dateOfBirth: values.dateOfBirth.toISOString(),\n            parentPhones: [values.parentPhone],\n        },\n    })\n        .then((res) => {\n            setVisible(false)\n            setLoading_button(false)\n            add_all_pupils(res.data)\n            form.resetFields()\n            swallGood('Ученик создан')\n        })\n        .catch((error) => {\n            errorHandler(\n                () => onFinish(values),\n                error,\n                () => setLoading_button(false)\n            )\n        })\n}\n\nexport {onFinish, mapStateToProps, mapDispatchToProps}\n","import {connect} from \"react-redux\";\nimport {Button, Form, Modal, Select} from \"antd\";\nimport React, {useState} from \"react\";\nimport {InputBox, InputPhone, textError} from \"./auxiliary_components\";\nimport {mapDispatchToProps, mapStateToProps, onFinish} from \"./create-student.logics\";\n\nconst {Option} = Select;\n\nconst CreateStudent = ({funnel, add_all_pupils}) => {\n\n    const [form] = Form.useForm();\n    const [visible, setVisible] = useState(false)\n    const [loading_button, setLoading_button] = useState(false)\n    const changeVisibility = (visible, setVisible) => setVisible(!visible)\n\n    return (\n        <div>\n            <Button\n                type={'primary'}\n                onClick={() => {\n                    changeVisibility(visible, setVisible)\n                }}\n            >\n                Создать ученика\n            </Button>\n            <Modal\n                width={800}\n                title={'Добавить ученика'}\n                visible={visible}\n                onCancel={() => {\n                    changeVisibility(visible, setVisible)\n                    form.resetFields()\n                }}\n                footer={false}\n            >\n                <Form\n                    form={form}\n                    name=\"basic\"\n                    labelCol={{span: 8}}\n                    wrapperCol={{span: 16}}\n                    onFinish={values => {\n                        onFinish(values, setLoading_button, setVisible, add_all_pupils, form)\n                    }}\n                    autoComplete=\"off\"\n                    initialValues={{\n                        surname: '',\n                        name: '',\n                        midname: '',\n                        gender: '',\n                        phone: '',\n                        parentPhone: '',\n                        parentFullname: '',\n                        discord: '',\n                        salesFunnelStep: '',\n                        dateOfBirth: ''\n                    }}\n                >\n                    <InputBox label={'Фамилия'} name={'surname'}/>\n                    <InputBox label={'Имя'} name={'name'}/>\n                    <InputBox label={'Отчество'} name={'midname'}/>\n                    <InputBox label={'Дата рождения'} name={'dateOfBirth'}/>\n                    <Form.Item\n                        name=\"gender\"\n                        label=\"Пол\"\n                        rules={[{\n                            required: true,\n                            message: textError\n                        }]}\n                    >\n                        <Select\n                            placeholder=\"Мальчик или девочка?\"\n                            allowClear\n                        >\n                            <Option value='Мужской'>Мальчик</Option>\n                            <Option value='Женский'>Девочка</Option>\n                        </Select>\n                    </Form.Item>\n                    <InputPhone label={'Номер телефона ребёнка'} name={'phone'} required={false}/>\n                    <InputPhone label={'Номер телефона родителя'} name={'parentPhone'}/>\n                    <InputBox label={'Фамилия, имя, отчество родителя'} name={'parentFullname'}/>\n                    <InputBox label={'Дискорд nik-name'} name={'discord'} required={false}/>\n                    <Form.Item\n                        name=\"salesFunnelStep\"\n                        label=\"Этап в воронке продаж\"\n                        rules={[{\n                            required: true,\n                            message: textError\n                        }]}\n                    >\n                        <Select\n                            allowClear\n                        >\n                            {funnel.map(item => {\n                                return (\n                                    <Option value={item._id} key={item._id}>{item.name}</Option>\n                                )\n                            })}\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item className={'submit'} wrapperCol={{offset: 8, span: 16}}>\n                        <Button\n                            style={{\n                                marginRight: '10px'\n                            }}\n                            onClick={() => {\n                                changeVisibility(visible, setVisible)\n                                form.resetFields()\n                            }}\n                        >\n                            Закрыть\n                        </Button>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            loading={loading_button}\n                        >\n                            Сохранить\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateStudent)","import React, {useEffect, useState} from 'react'\nimport {Table, Tag} from 'antd'\n\nimport ReturnAge from './../return-age/returnAge.js' // Определяет возраст\nimport Pagination from './../#more-functions/pagination/pagination.js' // Pagination\nimport {getFunnel, trashUser, update} from \"./service-student/service-student\";\n\n// Библиотеки\nimport './student.css'\n\nimport {Link} from \"react-router-dom\"\n\nimport styled from '@emotion/styled'\nimport {connect} from \"react-redux\";\nimport {add_all_pupils, delete_all_pupils, install_all_pupils, install_funnel} from \"../../../actions\";\nimport CreateStudent from \"./create-student/create-student\";\n\nconst mq = [1020, 700].map(\n    bp => `@media (max-width: ${bp}px)`\n)\n\nconst TableL = styled.div({\n    padding: '0 30px',\n    [mq[1]]: {\n        padding: '0 0',\n    },\n    '.log_h2': {},\n    td: {\n        paddingTop: '1px',\n        paddingBottom: '4px'\n    },\n    'th, td': {\n        whiteSpace: 'nowrap'\n    }\n})\n\nconst Student = ({users, setUsers, setFunnel, delete_all_pupils, add_all_pupils}) => {\n\n    const [offsetG, setOffsetG] = useState(0)\n    const [Count, setCount] = useState(0)\n\n    useEffect(() => {\n        update(0, {}, {}, setUsers, setCount)\n        getFunnel(setFunnel)\n    }, [])\n\n    useEffect(() => {\n        document.querySelectorAll(\"input\").forEach((item) => {\n            item.value = ''\n        })\n        document.querySelectorAll('select').forEach((item) => {\n            item.value = ''\n        })\n    })\n\n    const dataSource = []\n\n    users.forEach((item) => {\n\n        let {\n            _id,\n            parentFullname,\n            statuses,\n            surname,\n            name,\n            midname,\n            dateOfBirth,\n            gender,\n            phone,\n            balance,\n            parentPhone,\n            discord,\n            groups\n        } = item\n\n        dataSource.push({\n            key: _id,\n            trash: () => {\n                trashUser(item, update, offsetG, delete_all_pupils, add_all_pupils)\n            },\n            surname: () => (\n                <Link\n                    className=\"link-info\"\n                    to={`/student/${_id}`}>\n                    {surname}\n                </Link>\n            ),\n            name,\n            midname,\n            dateOfBirth: ReturnAge(dateOfBirth),\n            gender,\n            phoneNumber: phone,\n            tutor: '',\n            parentPhoneNumber: parentPhone.join(', '),\n            parentFullname,\n            balance: `${balance}`,\n            groups: groups ? groups : [],\n            discordNickname: discord,\n            statuses\n        })\n    })\n\n    const getColumn = (title, dataIndex) => ({\n        title: title,\n        dataIndex: dataIndex,\n        key: dataIndex\n    })\n\n    const columns = [\n        {\n            title: \"\",\n            dataIndex: \"trash\",\n            key: \"trash\",\n            render: (trash) => {\n                if (trash) {\n                    return (\n                        <i\n                            onClick={trash}\n                            className=\"bi bi-trash\"\n                            style={{\n                                fontSize: \"30px\",\n                                color: \"#F56767\",\n                                cursor: \"pointer\",\n                            }}\n                        />\n                    );\n                }\n            },\n        },\n        {\n            ...getColumn(\"Фамилия\", \"surname\"),\n            render: (surname) => {\n                if (typeof surname == \"function\") {\n                    return surname();\n                }\n            }\n        },\n        {\n            ...getColumn(\"Имя\", \"name\")\n        },\n        {\n            ...getColumn(\"Отчество\", \"midname\")\n        },\n        {\n            ...getColumn(\"Возраст\", \"dateOfBirth\")\n        },\n        {\n            ...getColumn(\"Пол\", \"gender\")\n        },\n        {\n            ...getColumn('Статусы', 'statuses'),\n            render: (statuses) => {\n                if (statuses) {\n                    return (\n                        statuses.map(status => {\n                            const {color, _id, name} = status\n                            return (\n                                <Tag color={color} key={_id}>{name}</Tag>\n                            )\n                        })\n                    )\n                }\n            }\n        },\n        {\n            ...getColumn('ФИО Родителя', 'parentFullname')\n        },\n        {\n            ...getColumn(\n                \"Номер телефона\",\n                \"phoneNumber\"\n            )\n        },\n        {\n            ...getColumn(\"Номер телефона родителя\", \"parentPhoneNumber\")\n        },\n        {\n            ...getColumn(\"Баланс\", \"balance\")\n        },\n        {\n            ...getColumn(\"Группы\", \"groups\"),\n            render: (groups) => {\n                if (typeof groups.map == \"function\") {\n                    return (\n                        <>\n                            {groups.map((item) => (\n                                <Tag\n                                    color=\"blue\"\n                                    key={`${item._id}`}\n                                >\n                                    {item.group_name}\n                                </Tag>\n                            ))}\n                        </>\n                    );\n                }\n            }\n        },\n        {\n            ...getColumn(\"Дискорд никнейм\", \"discordNickname\")\n        },\n    ]\n\n    return (\n        <>\n            <nav id=\"navbar-student\" className=\"navbar navbar-expand-lg navbar-light\">\n                <div className=\"container-fluid d-flex\">\n                    <div className=\"collapse d-flex flex-row h3-person\">\n                        <div className=\"d-flex plus-box\">\n                            <div>\n                                <h3>Ученики</h3>\n                            </div>\n                        </div>\n                        <CreateStudent/>\n                    </div>\n                </div>\n            </nav>\n            <TableL className=''>\n                <div>\n                    <div className={`table_user`}>\n                        <Table\n                            pagination={false}\n                            dataSource={dataSource}\n                            columns={columns}\n                            scroll={{x: 0}}>\n                        </Table>\n                    </div>\n                    <Pagination getItem={(offset) => {\n                        update(offset, {}, {}, setUsers, setCount)\n                    }} count={Count} offset={offsetG} setOffset={setOffsetG}/>\n                </div>\n            </TableL>\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    users: state.all_pupils,\n    funnel: state.funnel\n})\nconst mapDispatchToProps = {\n    setUsers: install_all_pupils,\n    setFunnel: install_funnel,\n    delete_all_pupils,\n    add_all_pupils\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Student)","import Url from './../../../url/url.js';\nimport {swallError} from '../../../alert/alert';\nimport errorHandler from \"../../error-handler/error-handler\";\n\nconst axios = require('axios'); // AJAX\n\nconst Change_Balance = (sym, pupil_id, updeteStudent, subscription, group_id, returnBalance) => {\n\n    let urlLocal = subscription ? `/CRM/Pupils/${pupil_id}/Payment?subscription=${subscription}&group_id=${group_id}` : `/CRM/Pupils/${pupil_id}/Payment?amount=${+sym}`\n\n    axios({\n        method: \"post\",\n        url: `${Url}${urlLocal}`, // amount&subscription&group_id\n        headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\",\n            Authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n        },\n    })\n        .then((res) => {\n            updeteStudent(res.data);\n        })\n        .catch((error) => {\n            errorHandler(\n                () => {\n                },\n                error,\n                returnBalance,\n                updeteStudent,\n                () => {\n                    swallError(\"Не удалось пополнить баланс\", \"Попробуйте снова\")\n                }\n            )\n        });\n\n}\n\nexport default Change_Balance;","import styled from '@emotion/styled'\n\nlet Span = styled.div({\n    // День из расписания ученика.\n    margin: '0 3px 0 0',\n    position: 'initial',\n    button: {\n        fontSize: '15px',\n        fontWeight: '600',\n        padding: '1px 7px',\n        width: '104px',\n    },\n    '.btnAbic': {\n        width: '100%',\n    },\n    ul: {\n        border: 'none',\n        background: 'rgba(0, 0, 0, 0.3)',\n        padding: '6px',\n    },\n    '.li': {\n        border: 'none',\n        background: 'rgba(0, 0, 0, 0)',\n        span: {\n            borderRadius: '6px',\n            fontWeight: '500',\n            cursor: 'pointer',\n        },\n        '.input-group-text': {\n            margin: '0',\n            borderRadius: '6px 0 0 6px',\n        },\n        textarea: {\n            padding: '2px 7px',\n            fontWeight: '500',\n        },\n    },\n})\n\nconst breakpoints = [780, 1380, 2002], // 619, 1238, 1857, > 2476\n    mq = breakpoints.map((bp) => `@media (max-width: ${bp}px)`)\n\nconst Div_box = styled.div({\n    borderBottom: '1px solid #91A8B0',\n    paddingBottom: '5px',\n    marginBottom: '5px',\n    i: {\n        color: '#17a2b8',\n        fontSize: '26px',\n        cursor: 'pointer',\n        paddingTop: '10px',\n    },\n    '.global-fon3000': {\n        position: 'fixed',\n        top: '0',\n        left: '0',\n        zIndex: '99',\n        height: '100vh',\n        background: 'rgba(0, 0, 0, 0.6)',\n        overflowY: 'scroll',\n        i: {\n            position: 'fixed',\n            top: '3px',\n            left: '7px',\n            color: '#fff',\n        },\n        '.bi-trash': {\n            display: 'none',\n        },\n    },\n    h4: {\n        display: 'inline-block',\n        marginRight: '10px',\n        marginBottom: '19px',\n    },\n    '.fixedSchedule-H': {\n        maxHeight: '81px',\n        overflow: 'hidden',\n    },\n\n    '.scheblueFixet': {\n        margin: '0 auto',\n        marginTop: '50px',\n        width: '86%',\n    },\n    '.fixedSchedule-H, .scheblueFixet': {\n        overflow: 'hidden',\n        width: '2476px',\n        [mq[2]]: {\n            width: '1857px',\n        },\n        [mq[1]]: {\n            width: '1238px',\n        },\n        [mq[0]]: {\n            width: '619px',\n        },\n    },\n    '.boxDay': {\n        overflowX: 'auto',\n        padding: '0 0 10px 0',\n        '&::-webkit-scrollbar': {\n            height: '10px',\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            borderRadius: '10px',\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: '#17a2b8',\n            borderRadius: '10px',\n        },\n    },\n})\n\nexport {Div_box, Span}\n","import React, {useEffect, useRef, useState} from 'react'\nimport {Dropdown, Menu, Popover} from 'antd'\n\nimport Url from './../../../../../url/url.js'\nimport {swallError} from '../../../../../alert/alert'\nimport RestrictionMessage from '../../../../restriction-message/restriction-message.js'\n\nimport Change_Balance from './../../../change-balance/changeBalance.js'\n\nimport moment from 'moment'\nimport {Link} from 'react-router-dom'\n// Style\nimport styled from '@emotion/styled'\nimport errorHandler from '../../../../error-handler/error-handler'\nimport {Div_box, Span} from './pupils-and-time.style'\nimport {connect} from 'react-redux'\nimport {set_drop_down_menu_index} from '../../../../../actions/index.js'\n\nconst axios = require('axios') // AJAX\n\nconst PupilsAndTime = ({\n                           itemG,\n                           dataGroup,\n                           getGroup_Id,\n                           setData,\n                           surname,\n                           name,\n                           pageInfo,\n                           type,\n                           set_drop_down_menu_index,\n                           drop_down_menu_index,\n                       }) => {\n    const [fixedSchedule, setFixedSchedule] = useState([\n        'fixedSchedule-H',\n        '',\n        'bi-plus-circle',\n    ])\n\n    let ScheduleItem = itemG.localSchedule[`${dataGroup}`]\n        ? itemG.localSchedule[`${dataGroup}`]\n        : []\n\n    const [dataS, setDataS] = useState(ScheduleItem)\n\n    const textarea = useRef()\n\n    const revers = () => {\n        if (fixedSchedule[0] === 'fixedSchedule-H') {\n            setFixedSchedule(['scheblueFixet', ' global-fon3000', 'bi-x-circle'])\n        } else {\n            setFixedSchedule(['fixedSchedule-H', '', 'bi-plus-circle'])\n        }\n    }\n\n    const addNotes = (name, axiosPut = () => {\n    }) => {\n        axios({\n            method: 'post',\n            url: `${Url}/CRM/Pupils/${itemG._id}/Notes`,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n            data: {\n                text: name,\n            },\n        })\n            .then(() => {\n                axiosPut()\n            })\n            .catch((error) => {\n                errorHandler(\n                    () => {\n                        addNotes(name, axiosPut)\n                    },\n                    error,\n                    getGroup_Id\n                )\n            })\n    }\n\n    const [Abic, setAbic] = useState([])\n\n    const getAbic = () => {\n        axios({\n            method: 'get',\n            url: `${Url}/CRM/Subscriptions`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n        })\n            .then((res) => {\n                setAbic(res.data)\n            })\n            .catch((error) => {\n                errorHandler(getAbic, error)\n            })\n    }\n\n    const axiosPut = (mass, ChangeBalic = () => {\n    }) => {\n        axios({\n            method: 'put',\n            url: `${Url}/CRM/Groups/${dataGroup}/Pupils/${itemG._id}/Schedule`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n            data: mass,\n        })\n            .then(() => {\n                ChangeBalic()\n            })\n            .catch((error) => {\n                errorHandler(() => {\n                    axiosPut(mass, ChangeBalic)\n                }, error)\n            })\n    }\n\n    const liAbic = Abic.map((abic, i) => {\n        const PaySubscription = () => {\n            let arr = [...dataS]\n\n            let n = 0,\n                index = 0\n            while (n < abic.hoursCount) {\n                if (!arr[index].paid && arr[index].status !== 1) {\n                    arr[index].paid = true\n                    n++\n                }\n                index++\n            }\n\n            axiosPut(arr, () => {\n                Change_Balance(\n                    `-${abic.price}`,\n                    itemG._id,\n                    setData,\n                    abic._id,\n                    dataGroup,\n                    () => {\n                        axiosPut(arr)\n                    }\n                )\n            })\n            setDataS(arr)\n        }\n        return (\n            <Menu.Item key={i} className=\"li\">\n        <span\n            onClick={PaySubscription}\n            className=\"dropdown-item bg-info text-light\"\n        >\n          {abic.name}\n        </span>\n            </Menu.Item>\n        )\n    })\n\n    const menu = <Menu>{liAbic}</Menu>\n\n    useEffect(() => {\n        getAbic()\n    }, [])\n\n    let index = 1\n\n    let SchedulePupils = dataS.map((item, i) => {\n        let marginRight = 0\n        if (index === 8) {\n            marginRight = 27\n            index = 1\n        } else {\n            index += 1\n        }\n\n        let day = moment(item.date, 'DD.MM.YYYY').format('DD.MM')\n\n        let color = '#f8f9fa',\n            opacity = '1'\n\n        let time = moment(item.date, 'DD.MM.YYYY').format('YYYY-MM-DD'),\n            time_day = moment().diff(time, 'day')\n\n        if (item.status === 1) {\n            color = '#000'\n        } else if (item.paid && item.status !== 3 && time_day <= 0) {\n            color = '#17a2b8'\n        } else if (item.status === 3 && time_day <= 0) {\n            color = '#6c757d'\n        } else if (item.status === 3 && item.paid) {\n            color = '#dc3545'\n        } else if (time_day > 0 && item.paid) {\n            color = '#28a745'\n        } else if (time_day > 0 && !item.paid && item.status !== 3) {\n            color = '#28a745'\n            opacity = '0.5'\n        } else if (time_day > 0 && !item.paid && item.status === 3) {\n            color = '#dc3545'\n            opacity = '0.5'\n        }\n\n        const changeDayIndex = (index) => {\n            let arr = [...dataS]\n\n            const setStatus = () => {\n                arr[i].status = index\n\n                axiosPut(arr)\n                setDataS(arr)\n            }\n\n            if (index === 1) {\n                setStatus()\n            } else if (index === 2) {\n                setStatus()\n            } else if (index === 3 && time_day < 0) {\n                setStatus()\n            } else if (index === 1) {\n                setStatus()\n            } else if (index !== 3 && index !== 2 && index !== 1) {\n                arr[i].title = index\n                addNotes(index, () => {\n                    axiosPut(arr)\n                })\n                setDataS(arr)\n            } else {\n                swallError('Не возможно установить статус')\n            }\n        }\n\n        const Item = styled.span({\n            marginRight: `${marginRight}px`,\n        })\n\n        let title = item.title\n        let colorTitle = '',\n            colorSpan = '#1890ff'\n        if (item.title) {\n            colorTitle = '#ffc107'\n        } else if (item.status === 1) {\n            colorTitle = '#fff'\n            colorSpan = '#ffc107'\n        }\n        if (item.status === 3) {\n            colorSpan = '#fff'\n        }\n\n        const menuItem = (\n            <Menu key={day}>\n                <Menu.Item key={`${day}1`}>\n          <span\n              onClick={() => {\n                  changeDayIndex(3)\n              }}\n              className=\"dropdown-item bg-secondary text-light\"\n          >\n            Пропустил\n          </span>\n                </Menu.Item>\n                <Menu.Item key={`${day}2`}>\n          <span\n              onClick={() => {\n                  changeDayIndex(2)\n              }}\n              className=\"dropdown-item bg-success text-light\"\n          >\n            Урок пройден\n          </span>\n                </Menu.Item>\n                <Menu.Item key={`${day}4`}>\n          <span\n              style={{\n                  background: '#000',\n              }}\n              onClick={() => {\n                  changeDayIndex(1)\n              }}\n              className=\"dropdown-item text-light\"\n          >\n            Урока не будет/не было\n          </span>\n                </Menu.Item>\n                <Menu.Item key={`${day}3`}>\n                    <div className=\"input-group\">\n            <span\n                onClick={() => {\n                    if (title) {\n                        changeDayIndex(title)\n                        set_drop_down_menu_index('', dataGroup)\n                    } else {\n                        textarea.current.focus()\n                    }\n                }}\n                className=\"input-group-text bg-info text-light\"\n            >\n              Сохранить\n            </span>\n                        <textarea\n                            ref={textarea}\n                            placeholder=\"Оставьте заметку...\"\n                            defaultValue={title}\n                            onChange={(e) => {\n                                title = e.target.value\n                            }}\n                            className=\"form-control\"\n                            aria-label=\"With textarea\"\n                        />\n                    </div>\n                </Menu.Item>\n            </Menu>\n        )\n\n        let visibleLocal = false\n\n        if (drop_down_menu_index[dataGroup] === i) {\n            visibleLocal = true\n        } else if (!drop_down_menu_index[dataGroup]) {\n            visibleLocal = false\n        }\n\n        return (\n            <Item key={`${day}${i}`}>\n                <Span className=\"btn-group\">\n                    <Dropdown\n                        overlay={menuItem}\n                        visible={visibleLocal}\n                        trigger={['click']}\n                    >\n                        <button\n                            type=\"button\"\n                            style={{\n                                color: `${colorTitle}`,\n                                background: `${color}`,\n                                opacity: `${opacity}`,\n                            }}\n                            className={`btn dropdown-toggle`}\n                            onClick={() => {\n                                if (drop_down_menu_index[dataGroup] === i) {\n                                    set_drop_down_menu_index('', dataGroup)\n                                } else {\n                                    set_drop_down_menu_index(i, dataGroup)\n                                }\n                            }}\n                        >\n                            {day}{' '}\n                            <span\n                                className=\"ant-dropdown-trigger-span\"\n                                style={{color: colorSpan}}\n                            >\n                {item.duration[0]}\n              </span>\n                        </button>\n                    </Dropdown>\n                </Span>\n            </Item>\n        )\n    })\n\n    let urlPage = itemG._id,\n        page = 'student'\n    if (pageInfo) {\n        page = pageInfo\n        urlPage = dataGroup\n    }\n    let LinkItem = (\n        <Link to={`/${page}/${urlPage}`}>\n            <h4>{`${surname} ${name}`}</h4>\n        </Link>\n    )\n\n    let oplata = ''\n\n    let jwt = require('jsonwebtoken')\n    if (jwt.decode(localStorage.getItem('tokenID')).accountType !== 'teacher') {\n        oplata = (\n            <span>\n        <Span className=\"btn-group\">\n          <Dropdown overlay={menu} trigger={['click']}>\n            <button\n                type=\"button\"\n                className={`btn btn-success dropdown-toggle btnAbic`}\n            >\n              Оплатить\n            </button>\n          </Dropdown>\n        </Span>\n      </span>\n        )\n    }\n\n    const deletePupils = () => {\n        axios({\n            method: 'delete',\n            url: `${Url}/CRM/Groups/${dataGroup}/Pupils/${itemG._id}`,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n        })\n            .then((res) => {\n                let {group, pupil} = res.data\n\n                if (type === 'group') {\n                    setData(group)\n                } else if (type === 'pupil') {\n                    setData(pupil)\n                }\n            })\n            .catch((error) => {\n                if (error.response) {\n                    RestrictionMessage(error.response.status)\n                }\n            })\n    }\n\n    return (\n        <Div_box key={itemG._id} className=\"table\">\n            <div className=\"pupils-item row\">\n                <div className=\"col-12\">\n                    {LinkItem}\n                    {oplata}\n                </div>\n                <div className={`col-12${fixedSchedule[1]}`}>\n                    <div className=\"boxDay\">\n                        <div className={`${fixedSchedule[0]}`}>{SchedulePupils}</div>\n                    </div>\n                    <i\n                        onClick={() => {\n                            revers()\n                        }}\n                        className={`bi ${fixedSchedule[2]}`}\n                    />\n                    <Popover\n                        title={'Внимание'}\n                        content={'Удаление ученика из группы'}\n                        placement=\"right\"\n                        trigger={'hover'}\n                    >\n                        <i\n                            onClick={deletePupils}\n                            className=\"bi bi-trash\"\n                            style={{color: 'rgb(245, 103, 10', marginLeft: '10px'}}\n                        />\n                    </Popover>\n                </div>\n            </div>\n        </Div_box>\n    )\n}\n\nPupilsAndTime.defaultProps = {\n    surname: '',\n}\nconst mapStateToProps = (state) => ({\n    drop_down_menu_index: state.drop_down_menu_index,\n})\nconst mapDispathToProps = {\n    set_drop_down_menu_index,\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(PupilsAndTime)\n","export const setStudent = (pupil, addedStudents, addStudent, setValue) => {\n\n    let permitted = true\n\n    addedStudents.forEach(item => {\n        if (item.id === pupil.id) {\n            permitted = false\n        }\n    })\n\n    if (permitted) {\n        addStudent([...addedStudents, pupil])\n        setValue('')\n    }\n}\n\nexport const removeStudent = (id, addedStudents, addStudent, setValue) => {\n    const newStydent = addedStudents.filter(item => (item.id !== id))\n    addStudent(newStydent)\n    setValue('')\n}\n\nexport const sortingSearchResponses = (data, setArrayEligibleStudents, index = \"pupils\") => {\n    let arrPupils = []\n\n    data.forEach(item => {\n        if (item._index === index) {\n            arrPupils.push(item._source)\n        }\n    })\n    setArrayEligibleStudents(arrPupils)\n}","import axios from \"axios\";\nimport Url from \"../../../../../url/url\";\nimport errorHandler from \"../../../../error-handler/error-handler\";\n\nexport const requestAddStudentGroup = (groupId, studentId, set, callBefore = () => {\n}) => {\n    callBefore()\n    axios({\n        method: 'post',\n        url: `${Url}/CRM/Groups/${groupId}/Pupils`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        },\n        data: {\n            ids: [studentId]\n        }\n    })\n        .then((res) => {\n            set(res.data)\n        })\n        .catch((error) => {\n            errorHandler(requestAddStudentGroup, error)\n        })\n}","import React, {useState} from 'react'\nimport {Input, Modal} from 'antd'\nimport {handleCancel, handleOk, showModal} from './add-student-group-logic'\nimport {AppstoreAddOutlined} from '@ant-design/icons'\nimport {serverRequest} from '../../../../search/server-request'\nimport {sortingSearchResponses} from '../../../group/group-logic'\nimport {requestAddStudentGroup} from './request-add-student-group'\nimport {useParams} from 'react-router-dom'\nimport {loading, swallGood} from '../../../../../alert/alert'\n\nconst AddStudentGroup = ({data, updatePage}) => {\n    const studentId = useParams().id\n    const {groups} = data\n\n    const [isModalVisible, setIsModalVisible] = useState(false)\n    const [value, setValue] = useState('')\n    const [ArrayEligibleGroups, setArrayEligibleGroups] = useState([])\n\n    const SuitableGroups = ArrayEligibleGroups.map((item) => {\n        const {group_name, id} = item\n\n        return (\n            <li\n                style={{fontSize: '18px'}}\n                onClick={() => {\n                    requestAddStudentGroup(\n                        id,\n                        studentId,\n                        (resData) => {\n                            swallGood('Ученик добавлен в группу')\n                            setIsModalVisible(false)\n                            updatePage({...data, groups: [...groups, resData]})\n                        },\n                        loading\n                    )\n                }}\n                key={id}\n                className=\"list-group-item\"\n            >\n                <span className=\"badge bg-warning text-dark\">{`${group_name}`}</span>\n            </li>\n        )\n    })\n\n    let spanGroup = groups.map((item) => {\n        return (\n            <span key={item._id} className={`badge bg-light text-dark`}>\n        {item.group_name}\n      </span>\n        )\n    })\n\n    return (\n        <>\n            {spanGroup}\n            <AppstoreAddOutlined\n                onClick={() => {\n                    showModal(setIsModalVisible)\n                }}\n                style={{color: 'rgb(23, 162, 184)', fontSize: '23px'}}\n            />\n            <Modal\n                title=\"Добавить группу\"\n                visible={isModalVisible}\n                onOk={() => {\n                    handleOk(setIsModalVisible)\n                }}\n                onCancel={() => {\n                    handleCancel(setIsModalVisible)\n                }}\n            >\n                <div>\n                    <div className=\"row addPUPILS\">\n                        <div className=\"input-group\">\n                            <Input\n                                placeholder={'Найти группы...'}\n                                onChange={(e) => {\n                                    setValue(e.target.value)\n                                    serverRequest((data) => {\n                                        sortingSearchResponses(\n                                            data,\n                                            setArrayEligibleGroups,\n                                            'groups'\n                                        )\n                                    }, encodeURI(e.target.value))\n                                }}\n                                value={value}\n                            />\n\n                            <ul className=\"list-group list-group-flush\">{SuitableGroups}</ul>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    )\n}\n\nexport default AddStudentGroup\n","export const showModal = (setIsModalVisible) => {\n    setIsModalVisible(true);\n};\n\nexport const handleOk = (setIsModalVisible) => {\n    setIsModalVisible(false);\n};\n\nexport const handleCancel = (setIsModalVisible) => {\n    setIsModalVisible(false);\n};","import React, {useState} from 'react'\nimport {DatePicker, Dropdown, Menu} from 'antd'\n\nimport Url from './../../../../../url/url.js'\nimport ReturnAge from './../../../return-age/returnAge.js'\nimport RestrictionMessage from '../../../../restriction-message/restriction-message.js'\n\nimport InputMask from 'react-input-mask'\n\nimport {loading, Swalclose, Toast} from '../../../../../alert/alert'\nimport AddStudentGroup from '../add-student-group-/add-student-group-'\nimport moment from 'moment'\n// Style\nimport styled from '@emotion/styled'\n\nconst Info_Table = styled.ul({\n    marginLeft: '10px',\n    '.ant-picker': {\n        span: {\n            margin: '0',\n        },\n    },\n    '.ant-picker-input': {\n        input: {\n            width: '127px',\n        },\n    },\n})\n\nconst Li = styled.li`\n  padding: 0.5rem 1.25rem;\n`\n\nconst InfoTable = ({dataStudent, updetePage}) => {\n    let newInfo = {}\n\n    const axios = require('axios') // AJAX\n\n    const [visible, setVisible] = useState('')\n\n    const {\n        name,\n        surname,\n        midname,\n        gender,\n        parentFullname,\n        dateOfBirth,\n        phone,\n        parentPhone,\n        discord,\n        createdAt,\n        _id,\n    } = dataStudent\n\n    const onChangeInfoItem = () => {\n        loading('Изменения загружаются', 'Пожалуйста подождите')\n\n        axios({\n            method: 'patch',\n            url: `${Url}/CRM/Pupils/${_id}`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n            data: newInfo,\n        })\n            .then((res) => {\n                updetePage(res.data)\n                Swalclose()\n                Toast.fire({\n                    icon: 'success',\n                    title: 'Изменения сохранены',\n                })\n            })\n            .catch((error) => {\n                if (error.response) {\n                    RestrictionMessage(error.response.status)\n                }\n            })\n    }\n\n    const menuSurname = (\n        <Menu>\n            <Menu.Item>\n                <input\n                    placeholder=\"Поменять фамилию\"\n                    onChange={(e) => {\n                        newInfo = {surname: `${e.target.value}`}\n                    }}\n                    type=\"name\"\n                    className=\"text-dark form-control col-12\"\n                />\n            </Menu.Item>\n            <Menu.Item>\n        <span\n            onClick={() => {\n                setVisible('')\n                onChangeInfoItem()\n            }}\n            className=\"badge bg-warning text-dark save\"\n        >\n          Сохранить\n        </span>\n            </Menu.Item>\n        </Menu>\n    )\n    const menuName = (\n        <Menu>\n            <Menu.Item>\n                <input\n                    placeholder=\"Новое имя\"\n                    onChange={(e) => {\n                        newInfo = {name: `${e.target.value}`}\n                    }}\n                    type=\"name\"\n                    className=\"text-dark form-control col-12\"\n                />\n            </Menu.Item>\n            <Menu.Item>\n        <span\n            onClick={() => {\n                setVisible('')\n                onChangeInfoItem()\n            }}\n            className=\"badge bg-warning text-dark save\"\n        >\n          Сохранить\n        </span>\n            </Menu.Item>\n        </Menu>\n    )\n    const menuMidname = (\n        <Menu>\n            <Menu.Item>\n                <input\n                    placeholder=\"Изменить поле...\"\n                    onChange={(e) => {\n                        newInfo = {midname: `${e.target.value}`}\n                    }}\n                    type=\"name\"\n                    className=\"text-dark form-control col-12\"\n                />\n            </Menu.Item>\n            <Menu.Item>\n        <span\n            onClick={() => {\n                onChangeInfoItem()\n                setVisible('')\n            }}\n            className=\"badge bg-warning text-dark save\"\n        >\n          Сохранить\n        </span>\n            </Menu.Item>\n        </Menu>\n    )\n    const menuParentPhone = (\n        <Menu>\n            <Menu.Item>\n                <InputMask\n                    mask=\"+9 (999) 999-99-99\"\n                    placeholder=\"Новый номер\"\n                    onChange={(e) => {\n                        newInfo = {parentPhone: [`${e.target.value}`]}\n                    }}\n                    type=\"name\"\n                    className=\"text-dark form-control col-12\"\n                />\n            </Menu.Item>\n            <Menu.Item>\n        <span\n            onClick={() => {\n                onChangeInfoItem()\n                setVisible('')\n            }}\n            className=\"badge bg-warning text-dark save\"\n        >\n          Сохранить\n        </span>\n            </Menu.Item>\n        </Menu>\n    )\n    const menuPhone = (\n        <Menu>\n            <Menu.Item>\n                <InputMask\n                    mask=\"+9 (999) 999-99-99\"\n                    placeholder=\"Новый номер\"\n                    onChange={(e) => {\n                        newInfo = {phone: `${e.target.value}`}\n                    }}\n                    type=\"name\"\n                    className=\"text-dark form-control col-12\"\n                />\n            </Menu.Item>\n            <Menu.Item>\n        <span\n            onClick={() => {\n                onChangeInfoItem()\n                setVisible('')\n            }}\n            className=\"badge bg-warning text-dark save\"\n        >\n          Сохранить\n        </span>\n            </Menu.Item>\n        </Menu>\n    )\n    const menuDiscord = (\n        <Menu>\n            <Menu.Item>\n                <input\n                    placeholder=\"Изменить NickName\"\n                    onChange={(e) => {\n                        newInfo = {discord: `${e.target.value}`}\n                    }}\n                    type=\"name\"\n                    className=\"text-dark form-control col-12\"\n                />\n            </Menu.Item>\n            <Menu.Item>\n        <span\n            onClick={() => {\n                onChangeInfoItem()\n                setVisible('')\n            }}\n            className=\"badge bg-warning text-dark save\"\n        >\n          Сохранить\n        </span>\n            </Menu.Item>\n        </Menu>\n    )\n\n    return (\n        <Info_Table className=\"list-group list-group-flush\">\n            <Li className=\"list-group-item\">\n                Фамилия:\n                <span className=\"badge bg-warning text-dark\">{surname}</span>\n                <div className={`btn-group`}>\n                    <Dropdown\n                        overlay={menuSurname}\n                        visible={() => {\n                            return visible === 'Surname'\n                        }}\n                        trigger={['click']}\n                    >\n                        <i\n                            className=\"bi bi-pencil\"\n                            onClick={() => {\n                                if (visible === 'Surname') {\n                                    setVisible('')\n                                } else {\n                                    setVisible('Surname')\n                                }\n                            }}\n                            style={{fontSize: '20px', color: '#17a2b8', cursor: 'pointer'}}\n                        />\n                    </Dropdown>\n                </div>\n            </Li>\n            <Li className=\"list-group-item\">\n                Имя: <span className=\"badge bg-warning text-dark\">{name}</span>\n                <div className={`btn-group`}>\n                    <Dropdown\n                        overlay={menuName}\n                        visible={() => {\n                            return visible === 'Name'\n                        }}\n                        trigger={['hover']}\n                    >\n                        <i\n                            onClick={() => {\n                                if (visible === 'Name') {\n                                    setVisible('')\n                                } else {\n                                    setVisible('Name')\n                                }\n                            }}\n                            className=\"bi bi-pencil\"\n                            style={{fontSize: '20px', color: '#17a2b8', cursor: 'pointer'}}\n                        />\n                    </Dropdown>\n                </div>\n            </Li>\n            <Li className=\"list-group-item\">\n                Отчество: <span className=\"badge bg-warning text-dark\">{midname}</span>\n                <div className={`btn-group`}>\n                    <Dropdown\n                        overlay={menuMidname}\n                        visible={() => {\n                            return visible === 'Midname'\n                        }}\n                        trigger={['hover']}\n                    >\n                        <i\n                            className=\"bi bi-pencil\"\n                            onClick={() => {\n                                if (visible === 'Midname') {\n                                    setVisible('')\n                                } else {\n                                    setVisible('Midname')\n                                }\n                            }}\n                            style={{fontSize: '20px', color: '#17a2b8', cursor: 'pointer'}}\n                        />\n                    </Dropdown>\n                </div>\n            </Li>\n            <Li className=\"list-group-item\">\n                Возраст:{' '}\n                <span className=\"badge bg-success text-light\">\n          {ReturnAge(dateOfBirth)}\n        </span>\n                <DatePicker\n                    onChange={(data) => {\n                        newInfo = {dateOfBirth: data._d.toISOString()}\n                        onChangeInfoItem()\n                    }}\n                    placeholder=\"Изменить возраст\"\n                />\n            </Li>\n            <Li className=\"list-group-item\">\n                Пол: <span className=\"badge bg-success text-light\">{gender}</span>\n            </Li>\n            <Li className=\"list-group-item\">\n                ФИО Родителя:{' '}\n                <span className=\"badge bg-success text-light\">{parentFullname}</span>\n            </Li>\n            <Li className=\"list-group-item\">\n                Дата записи ученика:{' '}\n                <span className=\"badge bg-info text-light\">\n          {createdAt ? moment(createdAt).format('DD - MMMM - YYYY, HH:MM') : ''}\n        </span>\n            </Li>\n            <Li className=\"list-group-item\">\n                Номер родителя:{' '}\n                <span className=\"badge bg-info text-light\">{parentPhone}</span>\n                <div className={`btn-group`}>\n                    <Dropdown\n                        overlay={menuParentPhone}\n                        visible={() => {\n                            return visible === 'ParentPhone'\n                        }}\n                    >\n                        <i\n                            className=\"bi bi-pencil\"\n                            onClick={() => {\n                                if (visible === 'ParentPhone') {\n                                    setVisible('')\n                                } else {\n                                    setVisible('ParentPhone')\n                                }\n                            }}\n                            style={{fontSize: '20px', color: '#17a2b8', cursor: 'pointer'}}\n                        />\n                    </Dropdown>\n                </div>\n            </Li>\n            <Li className=\"list-group-item\">\n                Номер ученика:{' '}\n                <span className=\"badge bg-warning text-dark\">{phone}</span>\n                <div className={`btn-group`}>\n                    <Dropdown\n                        overlay={menuPhone}\n                        visible={() => {\n                            return visible === 'Phone'\n                        }}\n                    >\n                        <i\n                            className=\"bi bi-pencil\"\n                            onClick={() => {\n                                if (visible === 'Phone') {\n                                    setVisible('')\n                                } else {\n                                    setVisible('Phone')\n                                }\n                            }}\n                            style={{fontSize: '20px', color: '#17a2b8', cursor: 'pointer'}}\n                        />\n                    </Dropdown>\n                </div>\n            </Li>\n            <Li className=\"list-group-item\">\n                Discord: <span className=\"badge bg-light text-dark\">{discord}</span>\n                <div className={`btn-group`}>\n                    <Dropdown\n                        className=\"Discord\"\n                        overlay={menuDiscord}\n                        visible={() => {\n                            return visible === 'Discord'\n                        }}\n                    >\n                        <i\n                            className=\"bi bi-pencil\"\n                            onClick={() => {\n                                if (visible === 'Discord') {\n                                    setVisible('')\n                                } else {\n                                    setVisible('Discord')\n                                }\n                            }}\n                            style={{fontSize: '20px', color: '#17a2b8', cursor: 'pointer'}}\n                        />\n                    </Dropdown>\n                </div>\n            </Li>\n            <Li className=\"list-group-item\">\n                Группы: <AddStudentGroup data={dataStudent} updatePage={updetePage}/>\n            </Li>\n        </Info_Table>\n    )\n}\n\nexport default InfoTable\n","import styled from \"@emotion/styled\";\n\nconst Span = styled.span({\n    borderRadius: '6px',\n    fontWeight: '500',\n    cursor: 'pointer',\n    fontSize: '14px'\n});\nconst Div = styled.div`\n  padding: 0;\n  h6 {\n    font-size: 1.25rem;\n  }\n`\n\nexport {\n    Span,\n    Div\n}","import React, {useState} from 'react'\nimport {Dropdown, Menu} from 'antd'\n\nimport Change_Balance from './../../../change-balance/changeBalance.js'\nimport {Div, Span} from './balance.style'\n\nconst Balance = ({balance_item, pageStudent_id, updeteStudent}) => {\n    const [visible, setVisible] = useState(false)\n    const [balance, setBalance] = useState(balance_item)\n\n    let incBalance = 0\n\n    const returnBalance = () => {\n        setBalance(balance)\n    }\n\n    const ChangeBalance = () => {\n        let sum = +balance + +incBalance\n        setBalance(sum)\n\n        Change_Balance(\n            incBalance,\n            pageStudent_id,\n            updeteStudent,\n            undefined,\n            undefined,\n            returnBalance\n        )\n    }\n\n    const menu = (\n        <Menu>\n            <Menu.Item>\n                <input\n                    placeholder=\"Пополнить\"\n                    onChange={(e) => {\n                        incBalance = e.target.value\n                    }}\n                    type=\"number\"\n                    className=\"text-info form-control col-12\"\n                />\n            </Menu.Item>\n            <Menu.Item>\n                <Span\n                    onClick={() => {\n                        setVisible(!visible)\n                        ChangeBalance()\n                    }}\n                    className=\"badge bg-warning text-dark\"\n                >\n                    Сохранить\n                </Span>\n            </Menu.Item>\n        </Menu>\n    )\n\n    return (\n        <Div className=\"balance\">\n            <h6 className=\"calendar badge bg-success text-light\">\n                {balance_item}\n                <span>₽</span>\n            </h6>\n            <Dropdown overlay={menu} visible={visible} trigger={['click']}>\n                <i\n                    id=\"dropdownMenuReference\"\n                    className=\"bi bi-plus\"\n                    onClick={() => {\n                        setVisible(!visible)\n                    }}\n                    style={{fontSize: '30px', color: '#17a2b8', cursor: 'pointer'}}\n                />\n            </Dropdown>\n        </Div>\n    )\n}\n\nexport default Balance\n","import React from 'react';\n\n// Style\nimport styled from '@emotion/styled';\nimport Balance from \"../balance/balance\";\n\nconst PayHistoryDiv = styled.div({\n    margin: '0',\n    padding: '0',\n    '.colona': {\n        padding: '0 3px',\n        marginBottom: '15px',\n        h3: {\n            fontSize: '16px'\n        },\n        ul: {\n            borderRadius: '5px',\n            overflow: 'auto',\n            maxHeight: '268px',\n            '&::-webkit-scrollbar': {\n                width: '10px',\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                borderRadius: '10px'\n            },\n            '&::-webkit-scrollbar-thumb': {\n                backgroundColor: '#17a2b8',\n                borderRadius: '10px'\n            }\n        },\n        li: {\n            span: {\n                fontSize: '17px',\n\n            }\n        }\n    },\n    '.colona-1': {\n        ul: {\n            border: '1px solid #28a745'\n        },\n        li: {\n            span: {\n                color: '#28a745',\n            }\n        }\n    },\n    '.colona-2': {\n        ul: {\n            border: '1px solid #f27474'\n        },\n        li: {\n            span: {\n                color: '#28a745',\n            }\n        }\n    }\n})\nconst Box2 = styled.div`\n  padding: 0 13px;\n`\n\nconst PayHistory = ({balance_item, pageStudent_id, updeteStudent, pay_History}) => {\n\n    let pay_HistoryLocal = pay_History ? pay_History : []\n\n    let liInc = [];\n    pay_HistoryLocal.forEach((item, i) => {\n        if (item.type == 0) {\n            liInc.unshift(\n                <li key={i} className=\"list-group-item\">{item.date} <span>{item.amount}₽</span> <br/>{item.issuer}</li>\n            );\n        }\n    })\n\n    let liDec = [];\n    pay_HistoryLocal.forEach((item, i) => {\n        if (item.type == 1) {\n            liDec.unshift(\n                <li key={i} className=\"list-group-item\">{item.date} <span>{item.amount}₽</span> <br/>{item.issuer}</li>\n            );\n        }\n    })\n\n    return (\n        <PayHistoryDiv className='col-12'>\n            <Balance\n                balance_item={balance_item}\n                pageStudent_id={pageStudent_id}\n                updeteStudent={updeteStudent}/>\n            <Box2 className=\"row\">\n                <div className=\"colona colona-1 col-6\">\n                    <h3 className=\"badge bg-success text-light\">Пополнение</h3>\n                    <ul className=\"list-group\">\n                        {liInc}\n                    </ul>\n                </div>\n                <div className=\"colona colona-2 col-6\">\n                    <h3 className=\"badge bg-danger text-light\">Оплата</h3>\n                    <ul className=\"list-group\">\n                        {liDec}\n                    </ul>\n                </div>\n            </Box2>\n        </PayHistoryDiv>\n    )\n}\n\nexport default PayHistory;","import React, {useEffect, useState} from 'react'\nimport {Button, Comment, Form, Input} from 'antd'\nimport Url from '../../../../../../url/url.js'\nimport moment from 'moment'\nimport errorHandler from '../../../../../error-handler/error-handler'\n\nconst {TextArea} = Input\nconst axios = require('axios') // AJAX\n\nconst Chat = ({_id, commentsObj}) => {\n    useEffect(() => {\n        document.querySelector('.ant-input').value = ''\n    })\n\n    // ===========================================================================================================================\n\n    let {surname, name, midname} = require('jsonwebtoken').decode(\n        localStorage.getItem('tokenID')\n    )\n\n    let UserName = `${surname} ${name} ${midname}`\n\n    const {comments, setComments} = commentsObj\n    const [submitting, setSubmitting] = useState(false)\n    let value = ''\n\n    const handleSubmit = () => {\n        if (!value) {\n            return\n        }\n\n        setSubmitting(true)\n\n        axios({\n            method: 'post',\n            url: `${Url}/CRM/Pupils/${_id}/Notes`,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n            data: {\n                text: value,\n            },\n        })\n            .then(() => {\n                setSubmitting(false)\n                setComments([\n                    ...comments,\n                    {\n                        author: UserName,\n                        content: <p>{value}</p>,\n                        datetime: moment().toISOString(),\n                    },\n                ])\n                // update()\n            })\n            .catch((error) => {\n                errorHandler(handleSubmit, error)\n            })\n    }\n\n    return (\n        <>\n            <Comment\n                content={\n                    <>\n                        <Form.Item>\n                            <TextArea\n                                id=\"TextArea\"\n                                onClick={() => {\n                                    document.querySelector('#TextArea').value = ''\n                                }}\n                                rows={4}\n                                onChange={(e) => {\n                                    value = e.target.value\n                                }}\n                                placeholder=\"Добавить комментарий\"\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                htmlType=\"submit\"\n                                loading={submitting}\n                                onClick={handleSubmit}\n                                type=\"primary\"\n                            >\n                                Добавить комментарий\n                            </Button>\n                        </Form.Item>\n                    </>\n                }\n            />\n        </>\n    )\n}\n\nexport default Chat\n","import {Comment, List} from \"antd\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nexport const CommentList = ({comments}) => {\n    return (\n        <List\n            dataSource={comments}\n            header={`Всего сообщений: ${comments.length}`}\n            itemLayout=\"horizontal\"\n            renderItem={(props, idx) => {\n                let body = {...props};\n                body.datetime = moment(props.datetime)\n                    .locale(\"ru\")\n                    .format(\"dddd, D MMMM YYYY г., HH:mm\");\n                if (body.datetime === \"Invalid date\") {\n                    body.datetime = props.datetime;\n                }\n                body.text = props.content.props.children\n                body.key = idx;\n                body.content = (\n                    <>\n                        <p style={{color: body.color ? body.color : \"black\"}}>\n                            {body.text.split(\"\\n\")[0]\n                                ? body.text.split(\"\\n\")[0]\n                                : body.text}\n                        </p>\n                        <p>\n                            {body.text.split(\"\\n\")[1]\n                                ? body.text.split(\"\\n\")[1]\n                                : body.text}\n                        </p>\n                    </>\n                );\n\n                return (\n                    <Comment\n                        key={body.key}\n                        content={body.content}\n                        datetime={body.datetime}\n                        author={body.author}\n                    />\n                );\n            }}\n        />\n    );\n};\n","import styled from \"@emotion/styled\"\n\nexport const DivDrawerStyles = styled.div`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  \n  .ant-list-items {\n    overflow: hidden auto;\n    max-height: 220px;\n  }\n  .specialList .ant-list-items {\n    max-height: 350px;\n    margin: 0 0 20px 0;\n  }\n  .tasks {\n    font-family: \"MontLight\";\n  }\n`\n\nexport const List = styled.div`\n  max-height: 350px;\n  overflow: hidden auto;\n  border-top: 1px solid lightgray;\n  margin: 0 0 10px 0;\n  li {\n    border-bottom: 1px solid lightgray;\n  }\n`\n","import React, {useEffect, useState} from \"react\";\nimport {Checkbox, List, Tag} from \"antd\";\nimport moment from \"moment\";\nimport {CloseOutlined} from \"@ant-design/icons\";\n\nimport {\n    CheckboxContainer,\n    DeleteButton,\n    OpacityContainer,\n    OpacityParagraph,\n    WrapperTaskComponent,\n} from \"./task.styled\";\nimport Url from \"../../../../../../url/url\";\nimport {editTask} from \"./requests/editTask\";\nimport {StatusesBlock} from \"../../../../sales-funnel/helpers/sales-funnel-styled\";\nimport {createComment} from \"./requests/createComment\";\n\nexport const TaskComponent = ({task, deleteTask, setComments, _id}) => {\n    const [done, setDone] = useState(task.done);\n\n    const resFIO = (key) => {\n        if (!task.responsible || task.responsible.length === 0) return \"Не найден\";\n        if (Array.isArray(task.responsible)) {\n            return task.responsible[0][key];\n        }\n        if (\n            !Array.isArray(task.responsible) &&\n            task.responsible instanceof Object\n        ) {\n            return task.responsible[key];\n        }\n        return \"...\";\n    };\n    const onClickDeleteTask = async (id) => {\n        await editTask(Url, id, {archived: true});\n        deleteTask(id)\n    };\n\n    async function onChangeEditDone(id, ev) {\n        const checked = ev.target.checked;\n\n        await editTask(Url, id, {\n            done: true,\n            completedOn: moment().toISOString(),\n            archived: true,\n        });\n\n        deleteTask(id)\n\n        await createComment(Url, _id, {\n            text: `${task.name}\\n${task.text}`,\n            color: \"crimson\",\n        });\n        setComments((prev) => [\n            ...prev,\n            {\n                author: `${resFIO(\"surname\")} ${resFIO(\"name\")} ${resFIO(\"midname\")}`,\n                content: {props: {children: `${task.name}\\n${task.text}`}},\n                deadline: moment().get().toISOString(),\n                color: \"crimson\",\n            },\n        ]);\n    }\n\n    useEffect(() => {\n        return () => setDone(() => false)\n    }, [])\n\n    return (\n        <List.Item key={task._id}>\n            <WrapperTaskComponent done={done}>\n                <div>\n                    <OpacityContainer>\n                        {task.name}\n                        <StatusesBlock portable={false} contains={task.tags.length}>\n                            {task.tags.map((tag) => {\n                                return (\n                                    <Tag key={tag._id} color={tag.color}>\n                                        {tag.name}\n                                    </Tag>\n                                );\n                            })}\n                        </StatusesBlock>\n                    </OpacityContainer>\n                    <OpacityParagraph>\n                        Срок до: {moment(task.deadline).format(\"DD/MM/YYYY | HH:mm\")}\n                    </OpacityParagraph>\n                    <OpacityParagraph>\n                        Ответственнен: {resFIO(\"surname\")} {resFIO(\"name\")}{\" \"}\n                        {resFIO(\"midname\")}\n                    </OpacityParagraph>\n                    <DeleteButton onClick={() => onClickDeleteTask(task._id)}>\n                        <CloseOutlined/>\n                    </DeleteButton>\n                </div>\n                <p className=\"done\">{task.text}</p>\n                <CheckboxContainer>\n                    <Checkbox\n                        checked={done}\n                        onChange={(ev) => onChangeEditDone(task._id, ev)}\n                    />\n                </CheckboxContainer>\n            </WrapperTaskComponent>\n        </List.Item>\n    );\n};\n","import React from \"react\";\n\nimport {CreateTaskComponent} from \"./CreateTask\";\nimport {TaskComponent} from \"./TaskComponent\";\nimport {List} from \"../styled\";\n\nexport const Tasks = React.memo(({tasksObj, _id, fio, setComments}) => {\n\n    const {relTasks, setRelTasks} = tasksObj;\n\n    const deleteTask = (id) => {\n        setRelTasks(prev => prev.filter(task => task._id !== id))\n    }\n\n    return (\n        <div style={{position: \"relative\"}}>\n            <p style={{marginBottom: \"5px\"}}>\n                Всего задач: {relTasks.filter((task) => !task.archived).length}\n            </p>\n            <List>\n                {relTasks\n                    .filter((task) => !task.archived)\n                    .map((task) => (\n                        <TaskComponent\n                            _id={_id}\n                            setComments={setComments}\n                            key={task._id}\n                            task={task}\n                            deleteTask={deleteTask}\n                        />\n                    ))}\n            </List>\n            <CreateTaskComponent\n                setComments={setComments}\n                setRelTasks={setRelTasks}\n                _id={_id}\n                fio={fio}\n                portable={true}\n            />\n        </div>\n    );\n});\n","import React, {useEffect, useState} from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport ChatItem from \"./chat-item/chat.js\";\nimport {CommentList} from \"./chat-item/CommentList\";\nimport {DivDrawerStyles} from \"./styled\";\nimport {Tasks} from \"./task-item/Tasks\";\n\nconst DrawerChat = React.memo(({notes, update, _id, fio, tasksObj}) => {\n    const {relTasks, setRelTasks} = tasksObj;\n    const [comments, setComments] = useState([]);\n    let notesLocal = notes ? notes : [];\n    let notesGlobal = [];\n\n    useEffect(() => {\n        let block = document.querySelector(\".ant-list-items\");\n        if (block) {\n            block.scrollTop = block.scrollHeight;\n        }\n    });\n\n    notesLocal.forEach((item, i) => {\n        let {author, date, text, color} = item;\n\n        if (comments[0]) {\n            if (\n                author + text !==\n                comments[0].author + comments[0].content.props.children\n            ) {\n                notesGlobal.push({\n                    author,\n                    content: <p>{text}</p>,\n                    datetime: date,\n                    color,\n                });\n            }\n        } else {\n            notesGlobal.push({\n                author,\n                content: <p>{text}</p>,\n                datetime: date,\n                color,\n            });\n        }\n    });\n\n    const COMEN = styled.div({\n        position: \"relative\",\n        \".ant-comment-content-detail\": {\n            borderBottom: \"1px solid #f0f0f0\",\n        },\n    });\n\n    return (\n        <DivDrawerStyles>\n            <div style={{padding: 0}}>\n                {<CommentList comments={[...notesGlobal, ...comments]}/>}\n                <ChatItem\n                    commentsObj={{comments, setComments}}\n                    notesGlobal={notesGlobal}\n                    update={update}\n                    _id={_id}\n                />\n            </div>\n            <COMEN>\n                <Tasks\n                    tasksObj={{relTasks, setRelTasks}}\n                    _id={_id}\n                    fio={fio}\n                    setComments={setComments}\n                />\n            </COMEN>\n        </DivDrawerStyles>\n    );\n});\n\nexport default DrawerChat;\n","import styled from \"@emotion/styled\";\n\nconst breakpoints = [767],\n    mq = breakpoints.map(\n        bp => `@media (max-width: ${bp}px)`\n    );\n\nexport const StudentPage = styled.div({\n    marginTop: '0px',\n    margin: '0 auto',\n    padding: '0',\n    '.pad': {\n        padding: '0px',\n        paddingRight: '10px',\n        [mq[0]]: {\n            paddingRight: '0px'\n        }\n    },\n    '.infoLog': {\n        marginBottom: '10px',\n        padding: '0',\n        [mq[0]]: {\n            paddingBottom: '10px'\n        },\n        '.calendar': {\n            margin: 'auto 0',\n            marginRight: '10px',\n            fontSize: '20px',\n            span: {\n                paddingLeft: '6px'\n            }\n        }\n    },\n    '.group-name': {\n        borderBottom: '1px solid #0dcaf0',\n        padding: '0px',\n        [mq[0]]: {\n            borderRight: 'none'\n        }\n    },\n    '.Button-Drawer': {\n        position: 'absolute',\n        right: '0',\n        top: '8px'\n    },\n    '.ulBox': {\n        borderRadius: '15px',\n        padding: '0px',\n    },\n    '.editing': {\n        background: '#fff',\n        borderRadius: '10px 10px 0 0',\n        i: {\n            marginLeft: '95%',\n            cursor: 'pointer'\n        }\n    },\n    li: {\n        backgroundColor: 'none',\n        span: {\n            fontSize: '14px',\n            margin: '0 5px 5px 0'\n        }\n    }\n});\n\nexport const TablePupils = styled.div({\n    background: '#fff',\n    margin: '10px 0',\n    padding: '0 10px',\n    borderRadius: '15px',\n    '& > h3': {\n        fontSize: '22px'\n    },\n    '.ant-tabs-nav': {\n        margin: 0\n    }\n});","import axios from \"axios\";\nimport Url from \"../../../../url/url\";\nimport errorHandler from \"../../../error-handler/error-handler\";\n\nlet colors = ['magenta', 'red', 'volcano', 'orange', 'gold', 'lime', 'green', 'cyan', 'blue', 'geekblue', 'purple']\n\nexport const updateStatuses = (set, setLoading) => {\n\n    setLoading(true)\n\n    axios({\n        method: 'get',\n        url: `${Url}/CRM/Statuses`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        }\n    })\n        .then(res => {\n            set(res.data)\n            setLoading(false)\n        })\n        .catch(error => {\n            errorHandler(updateStatuses, error, () => {\n                setLoading(false)\n            })\n        })\n}\n\nexport const createStatus = (setStatuses, setLoading, setValue, value, Statuses) => {\n    if (value) {\n        let idx = Math.floor(Math.random() * (10))\n\n        setLoading(true)\n        setValue('')\n\n        axios({\n            method: 'post',\n            url: `${Url}/CRM/Statuses`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n            },\n            data: {\n                name: value,\n                color: colors[idx]\n            }\n        })\n            .then(res => {\n                setStatuses([...Statuses, res.data])\n                setLoading(false)\n            })\n            .catch(error => {\n                errorHandler(createStatus, error, () => {\n                    setLoading(false)\n                })\n            })\n    }\n}\n\nexport const onDelete = (_id, setStatuses, Statuses, setLoading) => {\n    let box = Statuses.filter(item => item._id !== _id)\n\n    setLoading(true)\n\n    axios({\n        method: 'delete',\n        url: `${Url}/CRM/Statuses/${_id}`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        }\n    })\n        .then(() => {\n            setStatuses(box)\n            setLoading(false)\n        })\n        .catch(error => {\n            errorHandler(onDelete, error, () => {\n                setLoading(false)\n            })\n        })\n}\n\nexport const attachStatus = (statuses_id, setLoading, updateStudent, student_id,) => {\n\n    setLoading(true)\n\n    axios({\n        method: 'patch',\n        url: `${Url}/CRM/Pupils/${student_id}`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        },\n        data: {\n            statuses: statuses_id\n        }\n    })\n        .then(res => {\n            setLoading(false)\n            updateStudent(res.data)\n        })\n        .catch(error => {\n            errorHandler(attachStatus, error, () => {\n                setLoading(false)\n            })\n        })\n}","import React, {useState} from \"react\";\nimport {Button, Checkbox, Input, Menu, Space} from \"antd\";\nimport {DeleteOutlined} from '@ant-design/icons'\nimport {attachStatus, createStatus, onDelete} from './logic-statuses'\nimport {useParams} from \"react-router-dom\";\n\nconst CreatingStatuses = ({studentStatuses, updateStudent, globalStatuses}) => {\n\n    const student_id = useParams().id\n    let statuses_id = studentStatuses.map(status => status._id)\n\n    const [loading, setLoading] = useState(false)\n    const [Statuses, setStatuses] = useState(globalStatuses)\n    const [value, setValue] = useState('')\n\n    return (\n        <>\n            <div style={{padding: 8, background: '#fff'}}>\n                <Input\n                    autoComplete={'off'}\n                    value={value}\n                    id={'creating-statuses'}\n                    placeholder={`Статус...`}\n                    onChange={(e) => {\n                        setValue(e.target.value)\n                    }}\n                    onPressEnter={() => {\n                        createStatus(setStatuses, setLoading, setValue, value, Statuses)\n                    }}\n                    style={{marginBottom: 8, display: \"block\"}}\n                />\n                <Space>\n                    <Button\n                        loading={loading}\n                        type=\"primary\"\n                        onClick={() => {\n                            createStatus(setStatuses, setLoading, setValue, value, Statuses)\n                        }}\n                        size=\"small\"\n                    >\n                        Добавить новый статус\n                    </Button>\n                </Space>\n                <Menu>\n                    {\n                        Statuses.map(item => {\n\n                            let checked = false\n\n\n                            studentStatuses.forEach(status_statuses => {\n                                if (status_statuses._id === item._id) {\n                                    checked = true\n                                }\n                            })\n\n                            return (\n                                <Menu.Item key={item._id}>\n                                    <Checkbox\n                                        defaultChecked={checked}\n                                        onChange={(e) => {\n\n                                            if (e.target.checked) {\n                                                statuses_id.push(item._id)\n                                            } else {\n                                                statuses_id = statuses_id.filter(status_id => (status_id !== item._id))\n                                            }\n                                        }}>\n                                        {item.name}\n                                        <DeleteOutlined\n                                            onClick={() => {\n                                                onDelete(item._id, setStatuses, Statuses, setLoading)\n                                            }}\n                                            style={{\n                                                position: 'absolute',\n                                                right: '10px',\n                                                top: '14px',\n                                                color: 'red'\n                                            }}\n                                        />\n                                    </Checkbox>\n                                </Menu.Item>\n                            )\n                        })\n                    }\n                </Menu>\n                <Button\n                    loading={loading}\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                        attachStatus(statuses_id, setLoading, updateStudent, student_id)\n                    }}\n                    style={{marginTop: 10}}\n                >\n                    Применить изменения\n                </Button>\n            </div>\n        </>\n    )\n}\n\nexport default CreatingStatuses","import React, {useEffect, useState} from \"react\";\nimport {Dropdown, Skeleton} from \"antd\";\nimport CreatingStatuses from \"./creating-statuses\";\nimport {DownOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\";\nimport {updateStatuses} from \"./logic-statuses\";\n\nconst StudentStatuses = ({studentStatusesGlobal, updateStudent}) => {\n\n    const [globalStatuses, setGlobalStatuses] = useState(false)\n\n    useEffect(() => {\n        updateStatuses(setGlobalStatuses, () => {\n        })\n    }, [])\n\n    if (!globalStatuses) {\n        return (\n            <div style={{padding: '12px 0'}}>\n                <Skeleton.Button active={true} style={{height: 25}}/>\n            </div>\n        )\n    }\n\n    return (\n        <Dropdown\n            overlay={<CreatingStatuses updateStudent={updateStudent}\n                                       studentStatuses={studentStatusesGlobal}\n                                       globalStatuses={globalStatuses}/>}\n            trigger={['click']}\n        >\n            <Link\n                to={'#'}\n                style={{\n                    paddingLeft: '5px',\n                    lineHeight: '47px',\n                    overflow: 'hidden',\n                    width: '198px',\n                    paddingRight: 0\n                }}\n            >\n                Добавить статус <DownOutlined/>\n            </Link>\n        </Dropdown>\n    )\n}\n\nexport default StudentStatuses","import React from \"react\";\nimport {Tag} from \"antd\";\nimport styled from \"@emotion/styled\";\n\nconst Box = styled.div`\n  height: 47px;\n  display: flex;\n  line-height: 47px;\n  overflow: auto;\n  width: 100%;\n\n  &::-webkit-scrollbar {\n    height: 2px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: #5c636a;\n  }\n`\n\nconst ListStatuses = ({items}) => {\n\n    return (\n        <Box>\n            {\n                items.map((status) => {\n                    return (\n                        <div key={status._id}>\n                            <Tag color={status.color}>{status.name}</Tag>\n                        </div>\n                    )\n                })\n            }\n        </Box>\n    )\n}\n\nexport default ListStatuses","import styled from \"@emotion/styled\"\n\nexport const FlexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: ${props => props.first ? \"1px solid #0DCAF0\" : \"none\"};\n  > select {\n    margin: 0 10px 0 0;\n    border: 1px solid lightgray;\n    appearance: revert;\n    padding: 3px 5px 3px 2px;\n    width: 120px;\n  }\n`","import React from 'react'\nimport {Tabs} from 'antd'\n\nconst {TabPane} = Tabs\n\nconst callback = (key) => {\n    // console.log(key);\n}\n\nconst TabsPupil = ({tabs_groups}) => {\n    return (\n        <Tabs defaultActiveKey=\"1\" onChange={callback}>\n            <TabPane tab=\"Группы\" key=\"1\">\n                {tabs_groups}\n            </TabPane>\n            <TabPane tab=\"Прогресс\" key=\"2\">\n                {'<'}... <br/>\n                Прогресс...\n                <br/>\n                ../{'>'}\n            </TabPane>\n            <TabPane tab=\"Архив посещаемости\" key=\"3\">\n                {'<'}... <br/>\n                Архив посещаемости <br/>\n                ../{'>'}\n            </TabPane>\n        </Tabs>\n    )\n}\n\nexport default TabsPupil\n","import React, {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\n\nimport Url from './../../../../url/url.js'\n\nimport PupilsAndTime from '../../group/group-page/pupils-and-time/pupils-and-time.js'\nimport InfoTable from './Info-table/InfoTable.js'\nimport PayHistory from './payment-history/paymentHistory.js'\nimport DrawerChat from './chat/drawer-chat.js'\nimport {getStudent_Id} from '../service-student/service-student'\n// Block\n// Style\nimport {StudentPage, TablePupils} from './style-pageStudent'\n\nimport StudentStatuses from '../student-statuses/student-statuses'\nimport ListStatuses from '../student-statuses/list-statuses'\nimport {FlexDiv} from '../pageStudent.styled'\nimport {axiosGetFunnelSteps, axiosUpdateStudent,} from '../../sales-funnel/helpers/axios-requests'\nimport TabsPupil from './tabs-pupil/tabs-pupil'\nimport errorHandler from '../../../error-handler/error-handler'\n\nconst PageStudent = () => {\n    let pageStudent_id = useParams().id\n\n    const [dataStudent, setDataS] = useState({\n        _id: '60ba505dc12d3b9783c51d0f',\n        name: 'Загрузка...',\n        surname: '',\n        midname: '',\n        gender: '',\n        dateOfBirth: '2004-12-07',\n        phone: '',\n        parentPhone: '',\n        discord: '',\n        balance: 0,\n        localSchedule: {},\n        groups: [],\n        paymentHistory: [\n            {type: 1, date: '', amount: 0, issuer: '', subscription: null},\n            {type: 0, date: '', amount: 0, issuer: '', subscription: null},\n        ],\n        notes: [],\n        statuses: [],\n        tasks: [],\n    })\n    const [salesFunnelSteps, setSalesFunnelSteps] = useState([])\n    const [relTasks, setRelTasks] = useState([])\n\n    const {\n        notes,\n        groups,\n        name,\n        balance,\n        localSchedule,\n        paymentHistory,\n        salesFunnelStep,\n    } = dataStudent\n\n    useEffect(() => {\n        const requestsAsync = async () => {\n            try {\n                const studentData = await getStudent_Id(pageStudent_id)\n                setDataS(studentData)\n                setRelTasks(studentData.tasks)\n                const salesFunnelStepsServ = await axiosGetFunnelSteps(Url, 1)\n                setSalesFunnelSteps((prev) => (prev = salesFunnelStepsServ))\n            } catch (error) {\n                errorHandler(getStudent_Id, error)\n            }\n        }\n        requestsAsync()\n    }, [pageStudent_id])\n\n    let arrIdSch = []\n    for (let key in localSchedule) {\n        arrIdSch.push(key)\n    }\n\n    let groups_id = []\n\n    groups.forEach((item) => {\n        groups_id.push(item.group_name)\n    })\n\n    let PupilsSandTimeGroup = arrIdSch.map((id, i) => {\n        if (i < groups_id.length) {\n            return (\n                <PupilsAndTime\n                    key={id}\n                    pageInfo={'group'}\n                    itemG={dataStudent}\n                    dataGroup={id}\n                    getGroup_Id={() => {\n                        getStudent_Id(pageStudent_id, setDataS)\n                    }}\n                    setData={setDataS}\n                    name={groups_id[i]}\n                    type=\"pupil\"\n                />\n            )\n        }\n    })\n\n    const onChangeSelect = (event) => {\n        axiosUpdateStudent(Url, pageStudent_id, {\n            salesFunnelStep: event.target.value,\n        })\n    }\n\n    return (\n        <StudentPage className=\"container row col-12\">\n            <div className=\"col-12 col-md-3 pad\">\n                <div className=\"infoLog align-self-start col-md-12 col-12\">\n                    <FlexDiv first={true}>\n                        <h3>{name}</h3>\n                        <FlexDiv>\n                            <select onChange={onChangeSelect} value={salesFunnelStep?._id}>\n                                {salesFunnelSteps?.map((step) => (\n                                    <option key={step._id} value={step._id}>\n                                        {step.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </FlexDiv>\n                    </FlexDiv>\n                    <div style={{display: 'flex', height: '47px'}}>\n                        <ListStatuses\n                            items={dataStudent.statuses ? dataStudent.statuses : []}\n                        />\n                        <StudentStatuses\n                            updateStudent={setDataS}\n                            studentStatusesGlobal={\n                                dataStudent.statuses ? dataStudent.statuses : []\n                            }\n                        />\n                    </div>\n                </div>\n                <PayHistory\n                    balance_item={balance}\n                    pageStudent_id={pageStudent_id}\n                    updeteStudent={setDataS}\n                    pay_History={paymentHistory}\n                />\n            </div>\n            <div className=\"col-md-6\" style={{background: '#fff'}}>\n                <DrawerChat\n                    tasksObj={{relTasks, setRelTasks}}\n                    notes={notes}\n                    fio={{\n                        name: dataStudent.name,\n                        surname: dataStudent.surname,\n                    }}\n                    update={() => {\n                        getStudent_Id(pageStudent_id, setDataS)\n                    }}\n                    _id={pageStudent_id}\n                />\n            </div>\n            <div className=\"col-md-3 ulBox\">\n                <InfoTable dataStudent={dataStudent} updetePage={setDataS}/>\n            </div>\n            <TablePupils className=\"container col-12\">\n                <TabsPupil tabs_groups={PupilsSandTimeGroup}/>\n            </TablePupils>\n        </StudentPage>\n    )\n}\n\nexport default PageStudent\n","import React, {useState} from \"react\";\nimport {Input} from \"antd\";\nimport {removeStudent, setStudent, sortingSearchResponses} from './group-logic'\nimport {serverRequest} from \"../../search/server-request\";\n\nconst AddingStudentsToGroup = ({addStudent, addedStudents}) => {\n\n    const [ArrayEligibleStudents, setArrayEligibleStudents] = useState([])\n    const [value, setValue] = useState('')\n\n    const SuitableStudents = ArrayEligibleStudents.map(item => {\n\n        const {name, surname, midname, id} = item\n\n        return (\n            <li\n                onClick={() => {\n                    setStudent(item, addedStudents, addStudent, setValue)\n                }}\n                key={id}\n                className=\"list-group-item\">\n                <span className=\"badge bg-warning text-dark\">{`${surname} ${name} ${midname}`}</span>\n            </li>\n        )\n    })\n\n    const AddedStudentButton = addedStudents.map(item => {\n\n        const {name, surname, midname, id} = item\n\n        return (\n            <button\n                onClick={() => {\n                    removeStudent(id, addedStudents, addStudent, setValue)\n                }}\n                key={id}\n                type=\"button\"\n                className=\"btn btn-info\">\n                {`${surname} ${name} ${midname}`}\n                <i className=\"bi bi-x\" style={{fontSize: '15px'}}/>\n            </button>\n        )\n    })\n\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor=\"inputSirname\" className=\"fs-5 col-sm-4 col-form-label\">Добавить\n                учеников</label>\n            <div className=\"row addPUPILS\">\n                <div className=\"col-sm-6 input-group\">\n                    <Input\n                        placeholder={'Найти...'}\n                        onChange={(e) => {\n                            setValue(e.target.value)\n                            serverRequest((data) => {\n                                sortingSearchResponses(data, setArrayEligibleStudents)\n                            }, encodeURI(e.target.value), '')\n                        }}\n                        value={value}\n                    />\n\n                    <ul className=\"col-12 list-group list-group-flush\">\n                        {SuitableStudents}\n                    </ul>\n                </div>\n                <div className=\"col-sm-6 boxPUPILS\">\n                    {AddedStudentButton}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddingStudentsToGroup","import styled from \"@emotion/styled\";\n\nconst breakpoints = [1020, 700],\n    mq = breakpoints.map(\n        bp => `@media (max-width: ${bp}px)`\n    );\nexport const Table = styled.div({\n    padding: '0 30px',\n    [mq[1]]: {\n        padding: '0 0',\n    },\n    '.table_user': {\n        overflowX: 'auto',\n        '&::-webkit-scrollbar': {\n            height: '10px',\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            borderRadius: '10px'\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: '#17a2b8',\n            borderRadius: '10px'\n        },\n    },\n    '.log_h2': {},\n    td: {\n        paddingTop: '1px',\n        paddingBottom: '4px'\n    },\n    'th, td': {\n        whiteSpace: 'nowrap'\n    }\n});\nexport const Form = styled.form({\n    '.addPUPILS': {\n        '.input-group': {\n            ul: {\n                overflowY: 'scroll',\n                height: '100px'\n            },\n            li: {\n                cursor: 'pointer',\n                padding: '5px',\n                span: {\n                    fontSize: '11px'\n                }\n            }\n        }\n    }\n});","import React, {useEffect, useState} from 'react';\nimport Url from './../../../url/url.js';\nimport {swallError, swallGood} from '../../../alert/alert';\nimport Pagination from './../#more-functions/pagination/pagination.js'\nimport RestrictionMessage from '../../restriction-message/restriction-message.js'\nimport AddingStudentsToGroup from './adding-students-to-group'\nimport {Link} from \"react-router-dom\";\nimport {Button, Input, Modal} from 'antd';\nimport './group.css';\nimport {Form, Table} from './group-style'\nimport errorHandler from \"../../error-handler/error-handler\";\nimport {connect} from \"react-redux\";\nimport {add_all_groups, delete_all_groups, install_all_groups} from \"../../../actions\";\n\nconst axios = require('axios'); // AJAX\n\nconst Group = (\n    {\n        install_all_groups,\n        add_all_groups,\n        delete_all_groups,\n        groups\n    }\n) => {\n\n    // Modal\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [loading, setLoading] = useState(false)\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    // /Modal\n\n    const [offsetG, setOffsetG] = useState(0)\n    const [Count, setCount] = useState(1)\n\n    const [availableTutor, setAvailableTutor] = useState([]);\n\n    // Получить группы\n    const getGroup = (offset = 0) => {\n        axios({\n            method: 'post',\n            url: `${Url}/CRM/Groups/find?limit=10&offset=${offset}`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n            }\n        })\n            .then((res) => {\n                let {data, headers} = res\n                install_all_groups(data)\n                setCount(headers.count)\n            })\n            .catch((error) => {\n                errorHandler(() => getGroup(offset), error)\n            })\n    }\n\n    const getTUTOR = () => {\n        axios({\n            method: 'get',\n            url: `${Url}/CRM/Teachers?limit=149&offset=0`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n            }\n        })\n            .then((res) => {\n                let {data} = res\n                setAvailableTutor(data)\n            })\n            .catch((error) => {\n                errorHandler(getTUTOR, error)\n            })\n    }\n\n    const update = () => {\n        getTUTOR();\n        getGroup(offsetG);\n    };\n\n    useEffect(() => {\n        update();\n    }, []);\n\n    let A_Tutor = availableTutor.map((item, i) => {\n        let {name, surname, midname, _id} = item\n        return (\n            <option key={name + i} value={_id}>{surname} {name} {midname}</option>\n        );\n    });\n\n    const [pupils, setPupils] = useState([]);\n\n    const [groupName, setGROUP_NAME] = useState(''),\n        [places, setPLACES] = useState(''),\n        [tutor, setTUTOR] = useState(''),\n        [level, setLEVEL] = useState('');\n\n    const addingStudentSafely = (newArr) => {\n        setPupils(newArr)\n    }\n\n    let tableGroup = groups.map((item) => {\n\n        const trashGroup = () => {\n\n            let i = document.getElementById(item._id);\n            i.style.opacity = '0.3';\n\n            axios({\n                method: \"DELETE\",\n                url: `${Url}/CRM/Groups/${item._id}`,\n                headers: {\n                    \"Content-Type\": \"application/json;charset=utf-8\",\n                    Authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n                },\n            })\n                .then((res) => {\n                    delete_all_groups(res.data._id)\n                    i.style.opacity = '1';\n                })\n                .catch((error) => {\n                    errorHandler(trashGroup, error)\n                });\n        };\n\n        const {group_name, tutor, level, places, pupils, global_schedule, _id} = item;\n\n        let PUPILS01 = pupils ? pupils : []\n\n        let tutorText = 'Учитель не добавлен...',\n            time = '-'\n\n        if (global_schedule) {\n            if (global_schedule[0]) {\n\n                let {duration} = global_schedule[0]\n\n                time = `с ${duration[0]} до ${duration[1]}`\n            }\n        }\n\n        if (tutor) {\n            let {surname, name, midname} = tutor\n            tutorText = `${surname} ${name} ${midname}`\n        }\n\n        return (\n            <tr key={`${_id}`}>\n                <td className=\"td-trash\" scope=\"row\">\n                    <i id={_id} onClick={trashGroup} className=\"bi bi-trash\"\n                       style={{fontSize: '30px', color: '#F56767'}}/>\n                </td>\n                <td className=\"align-middle td-use\">\n                    <Link\n                        className=\"link-info\"\n                        to={`/group/${_id}`}>\n                        {group_name}\n                    </Link>\n                </td>\n                <td className=\"align-middle td-use\">{tutorText}</td>\n                <td className=\"align-middle td-use\">{level} класс</td>\n                <td className=\"align-middle td-use\">{places}</td>\n                <td className=\"align-middle td-use\">{places - PUPILS01.length}</td>\n                <td className=\"align-middle td-use\">{time}</td>\n            </tr>\n        );\n\n    });\n\n    const formSubmit = () => {\n\n        let PUPILS_ID = [];\n        pupils.forEach((item) => {\n            PUPILS_ID.push(item.id);\n        });\n\n        setLoading(true)\n\n        axios({\n            method: \"POST\",\n            url: `${Url}/CRM/Groups`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n            },\n            data: {\n                group_name: groupName,\n                tutor: tutor || undefined,\n                level: +level,\n                places: +places,\n                pupils: PUPILS_ID,\n                trial: false\n            }\n        })\n            .then((res) => {\n                setLoading(false)\n                swallGood('Группа создана', 'Теперь добавьте расписание');\n                setIsModalVisible(false)\n                add_all_groups(res.data)\n                setGROUP_NAME('')\n                setPLACES('')\n                setTUTOR('')\n                setLEVEL('')\n                setPupils([])\n            })\n            .catch((error) => {\n                setLoading(false)\n                if (error.response) {\n                    RestrictionMessage(error.response.status)\n                    let {status} = error.response;\n\n                    if (status == 400) {\n                        if (+places < PUPILS_ID.length) {\n                            swallError('Ой...', 'Мест для учеников не хватает');\n                        } else {\n                            swallError('Ой...', 'Заполните поля правильно');\n                        }\n                    } else if (status == 401) {\n                        swallError('Ой...', 'Где токен ?');\n                    } else if (status == 500) {\n                        swallError('Произошла поломка сервера', 'Сообщите об ошибке владельцу сервиса')\n                    }\n                }\n            });\n    };\n\n    return (\n        <>\n            <nav id=\"navbar-student\" className=\"navbar navbar-expand-lg navbar-light\">\n                <div className=\"container-fluid d-flex\">\n                    <div className=\"collapse d-flex flex-row h3-person\">\n                        <div className=\"d-flex plus-box\">\n                            <div>\n                                <h3>Группы</h3>\n                            </div>\n                        </div>\n                        <div>\n                            <Button\n                                type={'primary'}\n                                onClick={showModal}\n                            >\n                                Создать группу</Button>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n\n            <Table className=''>\n                <div>\n                    <div className={`table_user`}>\n                        <table className=\"table table-striped\">\n                            <thead>\n                            <tr>\n                                <th className=\"th-h\" scope=\"col\"/>\n                                <th className=\"th-h align-middle\" scope=\"col\">Группы</th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Учитель</th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Уровень</th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Количество мест</th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Свободных мест</th>\n                                <th className=\"th-h align-middle\" scope=\"col\">Время занятий</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {tableGroup}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Pagination getItem={getGroup} count={Count} offset={offsetG} setOffset={setOffsetG}/>\n                </div>\n            </Table>\n\n            <Modal\n                title=\"Добавить группу\"\n                visible={isModalVisible}\n                onCancel={handleCancel}\n                width={1000}\n                footer={[\n                    <Button key=\"onCancel1\" onClick={handleCancel}>\n                        Отмена\n                    </Button>,\n                    <Button\n                        key=\"onOk1\"\n                        onClick={formSubmit}\n                        loading={loading}\n                        type=\"primary\"\n                    >\n                        Сохранить\n                    </Button>\n                ]}\n            >\n                <Form>\n                    <div className=\"modal-body\">\n                        <div className=\"row mb-3\">\n                            <label htmlFor=\"inputName\" className=\"fs-5 col-sm-4 col-form-label\">Имя группы</label>\n                            <div className=\"col-sm-8\">\n                                <Input value={groupName} autoComplete='off' onChange={(e) => {\n                                    setGROUP_NAME(e.target.value)\n                                }} required type=\"name\" name=\"group_name\" className={`form-control`} id=\"group_name\"/>\n                            </div>\n                        </div>\n                        <div className=\"row mb-3\">\n                            <label htmlFor=\"inputMidname\" className=\"fs-5 col-sm-4 col-form-label\">Количество\n                                мест</label>\n                            <div className=\"col-sm-8\">\n                                <Input value={places} autoComplete='off' onChange={(e) => {\n                                    setPLACES(e.target.value)\n                                }} required type=\"number\" name=\"places\" className={`form-control`} id=\"places\"/>\n                            </div>\n                        </div>\n                        <div className=\"row mb-3\">\n                            <label htmlFor=\"inputSirname\" className=\"fs-5 col-sm-4 col-form-label\">Уровень\n                                подготовки</label>\n                            <div className=\"col-sm-8 input-group\">\n                                <select value={level} onChange={(e) => {\n                                    setLEVEL(e.target.value)\n                                }} required className=\"form-control\" id=\"inputGroupSelect01\">\n                                    <option defaultValue/>\n                                    <option value=\"1\">1 класс</option>\n                                    <option value=\"2\">2 класс</option>\n                                    <option value=\"3\">3 класс</option>\n                                    <option value=\"4\">4 класс</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row mb-3\">\n                            <label className=\"fs-5 col-sm-4 col-form-label\">Учитель</label>\n                            <div className=\"col-sm-8 input-group\">\n                                <select value={tutor} onChange={(e) => {\n                                    setTUTOR(e.target.value)\n                                }} className=\"form-control\">\n                                    <option defaultValue/>\n                                    {A_Tutor}\n                                </select>\n                            </div>\n                        </div>\n                        <AddingStudentsToGroup addStudent={addingStudentSafely} addedStudents={pupils}/>\n                    </div>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    groups: state.all_groups\n})\nconst mapDispatchToProps = {\n    install_all_groups,\n    add_all_groups,\n    delete_all_groups\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Group);","import React, {useState} from 'react';\nimport {Button, Modal} from 'antd';\n\nimport Url from './../../../../url/url.js';\n\nimport {loading, Swalclose} from '../../../../alert/alert';\n\nimport moment from 'moment';\n\n//Style\nimport styled from '@emotion/styled';\nimport errorHandler from \"../../../error-handler/error-handler\";\nimport {serverRequest} from \"../../../search/server-request\";\nimport {sortingSearchResponses} from \"../../group/group-logic\";\n\nconst axios = require('axios'); // AJAX\n\nconst Li = styled.li({\n    span: {\n        cursor: 'pointer'\n    }\n});\nconst Span = styled.span({\n    cursor: 'pointer'\n});\n\nconst AddStydent_Group = ({title, pageId, update, schedule}) => {\n\n    // Modal\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    // /Modal\n\n    const [pupils, setPupils] = useState([]);\n\n    const changeSchedulePupil = (idPupil) => {\n\n        let newSchedule = [];\n\n        schedule.forEach((item) => {\n\n            let day = moment(item.date, 'DD.MM.YYYY').format('YYYY-MM-DD'),\n                time_day = moment().diff(day, 'day');\n\n            if (time_day <= 0) {\n                newSchedule.push(item);\n            }\n        })\n\n        axios({\n            method: 'put',\n            url: `${Url}/CRM/Groups/${pageId}/Pupils/${idPupil}/Schedule`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n            },\n            data: newSchedule\n        })\n            .then((res) => {\n                update();\n                Swalclose();\n            })\n            .catch(error => {\n                errorHandler(changeSchedulePupil, error)\n            })\n    }\n    const addPUPILS_Group = (data, idPupil) => {\n        axios({\n            method: 'post',\n            url: `${Url}/CRM/Groups/${pageId}/Pupils`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n            },\n            data: {\n                ids: data\n            }\n        })\n            .then(() => {\n                changeSchedulePupil(idPupil);\n            })\n            .catch((error) => {\n                errorHandler(addPUPILS_Group, error)\n            })\n    }\n\n    let PUPILS_search_Li = pupils.map((item, i) => {\n\n        const choice = () => {\n            loading('Ученик добавляется', 'Пожалуйста подождите');\n            addPUPILS_Group([item.id], item.id);\n        };\n\n        return (\n            <Li key={item.id}\n                onClick={choice}\n                className=\"list-group-item\">\n                <span className=\"badge bg-warning text-dark\">{item.surname} {item.name} {item.midname}</span>\n            </Li>\n        );\n    });\n\n    return (\n        <>\n            <Span\n                className=\"btn \"\n                onClick={showModal}\n            >\n                <i className=\"bi bi-person-plus-fill\" style={{color: '#ffc107', fontSize: '24px'}}></i>\n            </Span>\n\n            <Modal\n                title={`Добавить ${title}`}\n                visible={isModalVisible}\n                onCancel={handleCancel}\n                width={600}\n                footer={[\n                    <Button key=\"onCancel1\" onClick={handleCancel}>\n                        Отмена\n                    </Button>\n                ]}\n            >\n                <div className=\"row addPUPILS\">\n                    <div className=\"col-12 input-group\">\n                        <input\n                            id=\"fort\"\n                            onChange={(e) => {\n                                serverRequest((data) => {\n                                    sortingSearchResponses(data, setPupils)\n                                }, encodeURI(e.target.value))\n                            }}\n                            autoComplete=\"off\"\n                            type=\"search\"\n                            className=\"form-control\"\n                            name=\"q\"\n                            placeholder=\"Найти ученика...\"\n                        />\n\n                        <ul className=\"col-12 list-group list-group-flush\">\n                            {PUPILS_search_Li}\n                        </ul>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n\n};\n\nexport default AddStydent_Group;","import React, {useEffect, useState} from 'react'\nimport {Dropdown, Menu} from 'antd'\n\nimport Url from './../../../../../url/url.js'\nimport localStorage_change from './../../../../../#localStorage_change.js'\nimport RestrictionMessage from '../../../../restriction-message/restriction-message.js'\n\nimport {loading, Swalclose, Toast} from './../../../../../alert/alert.js'\n\n// Style\nimport styled from '@emotion/styled'\n\nconst InfoTable = ({Data_ALL, updetePage}) => {\n    let newInfo = {}\n\n    const axios = require('axios') // AJAX\n\n    const [visible, setVisible] = useState('')\n\n    const {group_name, tutor, level, places, pupils, _id} = Data_ALL\n\n    let PUPILS0 = pupils ? pupils : ''\n\n    let tutorText = 'Учитель не добавлен...'\n\n    if (tutor) {\n        let {surname, name, midname} = tutor\n        tutorText = `${surname} ${name} ${midname}`\n    }\n\n    const [AllTutor, setAllTutor] = useState([\n        {\n            name: 'Учителей не обнаруженно...',\n            surname: '',\n            midname: '',\n            _id: '546456',\n        },\n    ])\n\n    const getTUTOR = (offset = 0) => {\n        axios({\n            method: 'get',\n            url: `${Url}/AdminPanel/CRMAccounts?limit=20&offset=${offset}&accountType=teacher`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n        })\n            .then((res) => {\n                let {data} = res\n                setAllTutor(data)\n            })\n            .catch((error) => {\n                if (error.response) {\n                    RestrictionMessage(error.response.status)\n                    if (error.response.status == 401) {\n                        if (error.response.data.message == 'TOKEN_EXPIRED') {\n                            localStorage_change(error.response.data.token)\n                            getTUTOR()\n                        } else {\n                            localStorage.removeItem('tokenID')\n                            window.location.replace('/')\n                        }\n                    }\n                }\n            })\n    }\n\n    const onChangeInfo = () => {\n        axios({\n            method: 'get',\n            url: `${Url}/CRM/Groups/${_id}`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n        })\n            .then((res) => {\n                updetePage(res.data)\n\n                Swalclose()\n                Toast.fire({\n                    icon: 'success',\n                    title: 'Изменения сохранены',\n                })\n            })\n            .catch((error) => {\n                if (error.response) {\n                    RestrictionMessage(error.response.status)\n                }\n            })\n    }\n\n    const onAddTutur = (id) => {\n        loading('Изменения загружаются', 'Пожалуйста подождите')\n\n        axios({\n            method: 'post',\n            url: `${Url}/CRM/Groups/${_id}/Teacher?tutorID=${id}`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n        })\n            .then(() => {\n                onChangeInfo()\n            })\n            .catch((error) => {\n                if (error.response) {\n                    RestrictionMessage(error.response.status)\n                }\n            })\n    }\n\n    let A_Tutor = AllTutor.map((item, i) => {\n        let {name, surname, midname} = item\n\n        return (\n            <option key={item._id} value={item._id}>\n                {surname} {name} {midname}\n            </option>\n        )\n    })\n\n    useEffect(() => {\n        getTUTOR()\n    }, [])\n\n    const onChangeInfoItem = () => {\n        loading('Изменения загружаются', 'Пожалуйста подождите')\n\n        axios({\n            method: 'patch',\n            url: `${Url}/CRM/Groups/${_id}`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n            data: newInfo,\n        })\n            .then(() => {\n                onChangeInfo()\n            })\n            .catch((error) => {\n                if (error.response) {\n                    RestrictionMessage(error.response.status)\n                }\n            })\n    }\n\n    const Box = styled.span({\n        fontSize: '13px',\n    })\n\n    const menuGROUP_NAME = (\n        <Menu>\n            <Menu.Item>\n                <input\n                    placeholder=\"Изменить название\"\n                    onChange={(e) => {\n                        newInfo = {group_name: `${e.target.value}`}\n                    }}\n                    type=\"name\"\n                    className=\"text-dark form-control col-12\"\n                />\n            </Menu.Item>\n            <Menu.Item>\n                <Box\n                    onClick={() => {\n                        onChangeInfoItem()\n                        setVisible('')\n                    }}\n                    className=\"badge bg-warning text-dark save\"\n                >\n                    Сохранить\n                </Box>\n            </Menu.Item>\n        </Menu>\n    )\n    const menuTutor = (\n        <Menu>\n            <Menu.Item>\n                <div className=\"input-group\">\n                    <select\n                        onChange={(e) => {\n                            onAddTutur(e.target.value)\n                        }}\n                        className=\"form-control\"\n                    >\n                        <option></option>\n                        {A_Tutor}\n                    </select>\n                </div>\n            </Menu.Item>\n        </Menu>\n    )\n    const menuLEVEL = (\n        <Menu>\n            <Menu.Item>\n                <div className=\"input-group\">\n                    <select\n                        onChange={(e) => {\n                            newInfo = {level: +e.target.value}\n                        }}\n                        className=\"form-control\"\n                    >\n                        <option></option>\n                        <option value=\"1\">1 класс</option>\n                        <option value=\"2\">2 класс</option>\n                        <option value=\"3\">3 класс</option>\n                        <option value=\"4\">4 класс</option>\n                    </select>\n                </div>\n            </Menu.Item>\n            <Menu.Item>\n                <Box\n                    onClick={() => {\n                        onChangeInfoItem()\n                        setVisible('')\n                    }}\n                    className=\"badge bg-warning text-dark save\"\n                >\n                    Сохранить\n                </Box>\n            </Menu.Item>\n        </Menu>\n    )\n    const menuPLACES = (\n        <Menu>\n            <Menu.Item>\n                <input\n                    placeholder=\"Изменить колличество мест\"\n                    onChange={(e) => {\n                        newInfo = {places: +e.target.value}\n                    }}\n                    type=\"number\"\n                    className=\"text-dark form-control col-12\"\n                />\n            </Menu.Item>\n            <Menu.Item>\n                <Box\n                    onClick={() => {\n                        onChangeInfoItem()\n                        setVisible('')\n                    }}\n                    className=\"badge bg-warning text-dark save\"\n                >\n                    Сохранить\n                </Box>\n            </Menu.Item>\n        </Menu>\n    )\n\n    const changeData = (menu, data_name) => {\n        return (\n            <Dropdown\n                overlay={menu}\n                visible={() => {\n                    if (visible === data_name) {\n                        return true\n                    } else {\n                        return false\n                    }\n                }}\n                trigger={['click']}\n            >\n                <i\n                    className=\"bi bi-pencil\"\n                    onClick={() => {\n                        if (visible === data_name) {\n                            setVisible('')\n                        } else {\n                            setVisible(data_name)\n                        }\n                    }}\n                    style={{fontSize: '20px', color: '#17a2b8', cursor: 'pointer'}}\n                ></i>\n            </Dropdown>\n        )\n    }\n\n    return (\n        <>\n            <li className=\"list-group-item\">\n                Название: <span className=\"badge bg-info text-light\">{group_name}</span>\n                <div className={`btn-group`}>\n                    {changeData(menuGROUP_NAME, 'group_name')}\n                </div>\n            </li>\n            <li className=\"list-group-item\">\n                Учитель: <span className=\"badge bg-warning text-dark\">{tutorText}</span>\n                <div className={`btn-group`}>{changeData(menuTutor, 'tutor')}</div>\n            </li>\n            <li className=\"list-group-item\">\n                Класс: <span className=\"badge bg-success\">{level}</span>\n                <div className={`btn-group`}>{changeData(menuLEVEL, 'level')}</div>\n            </li>\n            <li className=\"list-group-item\">\n                Mест в группе: <span className=\"badge bg-info text-dark\">{places}</span>\n                <div className={`btn-group`}>{changeData(menuPLACES, 'places')}</div>\n            </li>\n            <li className=\"list-group-item\">\n                Свободных мест:{' '}\n                <span className=\"badge bg-light text-dark\">\n          {places - PUPILS0.length}\n        </span>\n            </li>\n        </>\n    )\n}\n\nexport default InfoTable\n","import styled from \"@emotion/styled\";\n\nconst breakpoints = [767],\n    mq = breakpoints.map(\n        bp => `@media (max-width: ${bp}px)`\n    );\n\nconst GroupPageStyle = styled.div({\n    marginTop: '0px',\n    margin: '0 auto',\n    '.pad': {\n        padding: '0px',\n        paddingRight: '10px',\n        [mq[0]]: {\n            paddingRight: '0px'\n        }\n    },\n    '.infoLog': {\n        marginBottom: '10px',\n        padding: '0',\n        [mq[0]]: {\n            paddingBottom: '10px'\n        },\n        '.calendar': {\n            margin: '9px 0',\n            marginRight: '10px',\n            fontSize: '15px'\n        }\n    },\n    '.group-name': {\n        padding: '0',\n        borderBottom: '1px solid #0dcaf0',\n        [mq[0]]: {\n            borderRight: 'none'\n        }\n    },\n    '.time': {\n        margin: '0',\n        padding: '0',\n        h5: {\n            fontSize: '1.25rem'\n        }\n    },\n    '.ulBox': {\n        borderRadius: '15px',\n        padding: '0px'\n    },\n    '.editing': {\n        background: '#fff',\n        borderRadius: '10px 10px 0 0',\n        i: {\n            marginLeft: '95%',\n            cursor: 'pointer'\n        }\n    },\n    li: {\n        backgroundColor: 'none',\n        span: {\n            fontSize: '16px',\n            margin: '0 5px 5px 0'\n        }\n    }\n});\n\nconst TablePupils = styled.div({\n    background: '#fff',\n    margin: '10px 0',\n    padding: '10px',\n    borderRadius: '15px',\n    '& > h3': {\n        fontSize: '22px'\n    }\n});\n\nexport {\n    TablePupils,\n    GroupPageStyle\n}","import axios from \"axios\";\nimport Url from \"../../../../url/url\";\nimport errorHandler from \"../../../error-handler/error-handler\";\n\nconst getGroup_Id = (setFun, id, onError = () => {\n}, notification = true) => {\n    axios({\n        method: 'get',\n        url: `${Url}/CRM/Groups/${id}`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        }\n    })\n        .then((res) => {\n            setFun(res.data);\n        })\n        .catch((error) => {\n            errorHandler(() => {\n                getGroup_Id(setFun, id, onError, notification)\n            }, error, onError, notification)\n        });\n}\n\nexport {\n    getGroup_Id\n}","import React from 'react';\n\nimport moment from 'moment';\n\n// Style \nimport styled from '@emotion/styled';\n\nconst SchedulE = styled.div({\n    padding: '0',\n    marginBottom: '15px',\n    '.boxS': {\n        overflow: 'auto',\n        maxHeight: '200px',\n    },\n    '.dataNumber': {\n        margin: '0 3px 0 0',\n        fontSize: '15px',\n        fontWeight: '600',\n        width: '96px',\n        '.time': {\n            color: '#1890ff'\n        }\n    }\n});\n\nconst Schedule = ({global_schedule}) => {\n\n    if (!global_schedule[0]) {\n        return (\n            <SchedulE className=\"col-12\">\n                <h5>Расписания нет...</h5>\n            </SchedulE>\n        );\n    }\n\n    let time = '',\n        previous_day\n\n    let SpanDay = global_schedule.map((item) => {\n        let date = moment(item.date, 'DD.MM.YYYY').format('DD.MM')\n        if (previous_day === date) {\n            let num = +`${item.duration[0][0]}${item.duration[0][1]}`\n            if (num === 23) {\n                time = `00:${item.duration[0][3]}${item.duration[0][4]}`\n            } else {\n                time = `${num + 1}:${item.duration[0][3]}${item.duration[0][4]}`\n            }\n        } else {\n            time = item.duration[0]\n        }\n        previous_day = date\n        return (\n            <span key={`${item.date}${time}`} className=\"badge bg-light text-dark dataNumber\">{`${date} `}<span\n                className={'time'}>{time}</span></span>\n        );\n    });\n\n    return (\n        <SchedulE className=\"col-12\">\n            <div className=\"boxS\">\n                {SpanDay}\n            </div>\n        </SchedulE>\n    );\n};\n\nexport default Schedule;","import React from 'react'\nimport {Form, TimePicker} from 'antd'\n\nconst TimePickerSchedule = ({label, name}) => {\n    return (\n        <Form.Item style={{marginBottom: 0}} label={label}>\n            <Form.Item\n                name={`${name}0`}\n                style={{display: 'inline-block', width: 'calc(50% - 12px)'}}\n            >\n                <TimePicker\n                    allowClear={false}\n                    format={'HH'}\n                    placeholder=\"Начало урока\"\n                />\n            </Form.Item>\n            <span\n                style={{\n                    display: 'inline-block',\n                    width: '23px',\n                    lineHeight: '32px',\n                    textAlign: 'center',\n                }}\n            >\n        -\n      </span>\n            <Form.Item\n                name={`${name}1`}\n                style={{display: 'inline-block', width: 'calc(50% - 12px)'}}\n            >\n                <TimePicker\n                    format={'HH'}\n                    allowClear={false}\n                    placeholder=\"Конец урока\"\n                />\n            </Form.Item>\n        </Form.Item>\n    )\n}\n\nexport default TimePickerSchedule\n","import styled from \"@emotion/styled\";\n\nconst formItemLayout = {\n    labelCol: {\n        xs: {span: 24},\n        sm: {span: 8},\n    },\n    wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n    },\n}\n\nconst ScheduleForm = styled.div`\n\n`;\nconst TimePickerStyle = styled.div`\n  .ant-picker-clear {\n    top: 16%;\n  }\n`\n\nexport {\n    formItemLayout,\n    ScheduleForm,\n    TimePickerStyle\n}","import React, {useState} from 'react'\nimport Url from './../../../../url/url.js'\nimport {swallGood} from '../../../../alert/alert'\nimport moment from 'moment'\nimport {Button, DatePicker, Form, Modal} from 'antd'\nimport errorHandler from '../../../error-handler/error-handler'\nimport TimePickerSchedule from '../../student/create-student/time-picker/time-picker-schedule'\nimport {formItemLayout, ScheduleForm} from './create-schedule.style'\n\nconst {RangePicker} = DatePicker\nconst axios = require('axios') // AJAX\n\nconst CreateSchedule = ({updateGroup, groupID}) => {\n    const [form] = Form.useForm()\n    const [isModalVisible, setIsModalVisible] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const showModal = () => {\n        setIsModalVisible(true)\n    }\n\n    const handleCancel = () => {\n        setIsModalVisible(false)\n        form.resetFields()\n    }\n    // /Modal\n\n    let dataInputs = {\n        startDate: '',\n        endDate: '',\n        weekDay: [],\n    }\n\n    let schedule = []\n\n    const FindNeedle = () => {\n        // let {startDate, duration_Start, duration_End, endDate} = dataInputs\n        let {startDate, endDate} = dataInputs\n\n        let dayNumber = moment(startDate, 'DD.MM.YYYY').day()\n\n        let day_end = endDate\n        let day = startDate,\n            day_number = moment(day, 'DD.MM.YYYY').day(),\n            inc = 1\n\n        const PushDay = () => {\n            dataInputs.weekDay.forEach((item) => {\n                if (item.index === day_number) {\n                    let academicHours = moment(`2000-01-01, ${item.duration[1]}`).diff(\n                        `2000-01-01, ${item.duration[0]}`,\n                        'hours'\n                    )\n\n                    let scheduleItem = {\n                        date: day,\n                        duration: item.duration,\n                        status: 2,\n                        tutor: '',\n                        paid: false,\n                        title: '',\n                    }\n                    for (let i = 0; i < academicHours; i++) {\n                        schedule.push(scheduleItem)\n                    }\n                }\n            })\n        }\n        PushDay()\n\n        do {\n            day = moment(dataInputs.startDate, 'DD.MM.YYYY')\n                .day(dayNumber + inc)\n                .format('DD.MM.YYYY')\n            day_number = moment(day, 'DD.MM.YYYY').day()\n\n            PushDay()\n\n            inc++\n        } while (day !== day_end)\n\n        axios({\n            method: 'post',\n            url: `${Url}/CRM/Groups/${groupID}/Schedule`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n            data: schedule,\n        })\n            .then(() => {\n                updateGroup(() => {\n                    setLoading(false)\n                    handleCancel()\n                    swallGood('Расписание создано', '')\n                }) // Обновить группу.\n            })\n            .catch((error) => {\n                errorHandler(FindNeedle, error)\n            })\n    }\n\n    const FormChance = (values) => {\n        setLoading(true)\n\n        for (let key in values) {\n            if (values[key] && key !== 'range_picker') {\n                dataInputs.weekDay.push({\n                    duration: [`${values[key][0]}:00`, `${values[key][1]}:00`],\n                    index: +key,\n                })\n            }\n        }\n        dataInputs.startDate = values.range_picker[0]\n        dataInputs.endDate = values.range_picker[1]\n        FindNeedle()\n    }\n\n    return (\n        <ScheduleForm>\n            <Button style={{margin: '8px 0 8px 0'}} onClick={showModal}>\n                Создать расписание\n            </Button>\n            <Modal\n                title=\"Добавить расписание\"\n                visible={isModalVisible}\n                onCancel={handleCancel}\n                footer={[\n                    <Button\n                        key=\"onCancel1\"\n                        onClick={() => {\n                            form.resetFields()\n                        }}\n                    >\n                        Сброс\n                    </Button>,\n                    <Button\n                        key=\"onOk1\"\n                        onClick={() => {\n                            form.submit()\n                        }}\n                        loading={loading}\n                        type=\"primary\"\n                    >\n                        Сохранить\n                    </Button>,\n                ]}\n            >\n                <Form\n                    {...formItemLayout}\n                    form={form}\n                    name=\"basic\"\n                    onFinish={(values) => {\n                        let valuesSuccess = {\n                            range_picker: values.range_picker.map((item) =>\n                                moment(item).format('DD.MM.YYYY')\n                            ),\n                        }\n                        for (let key in values) {\n                            const returnTime = (value) => {\n                                if (value) {\n                                    return `${moment(value).format('HH')}:00`\n                                } else {\n                                    return undefined\n                                }\n                            }\n                            let newKey = +`${key[0]}`\n                            if (key !== 'range_picker' && values[key]) {\n                                if (key[1] === '1') {\n                                    valuesSuccess[newKey].push(returnTime(values[key]))\n                                } else {\n                                    valuesSuccess[newKey] = [returnTime(values[key])]\n                                }\n                            } else if (key !== 'range_picker' && !values[key]) {\n                                valuesSuccess[newKey] = undefined\n                            }\n                        }\n                        FormChance(valuesSuccess)\n                    }}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        className={'form-item'}\n                        name=\"range_picker\"\n                        label=\"Период\"\n                        rules={[{required: true, message: 'Заполните это поле!'}]}\n                    >\n                        <RangePicker format={'DD.MM.YYYY'} allowClear={false}/>\n                    </Form.Item>\n                    <TimePickerSchedule label={'Понедельник'} name={'1'}/>\n                    <TimePickerSchedule label={'Вторник'} name={'2'}/>\n                    <TimePickerSchedule label={'Среда'} name={'3'}/>\n                    <TimePickerSchedule label={'Четверг'} name={'4'}/>\n                    <TimePickerSchedule label={'Пятница'} name={'5'}/>\n                    <TimePickerSchedule label={'Суббота'} name={'6'}/>\n                    <TimePickerSchedule label={'Воскресенье'} name={'0'}/>\n                </Form>\n            </Modal>\n        </ScheduleForm>\n    )\n}\n\nexport default CreateSchedule\n","import React, {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport PupilsAndTime from './pupils-and-time/pupils-and-time.js'\nimport AddStydentGroup from './../../#more-functions/add-student_group/add-Student_Group.js'\nimport InfoTable from './Info-table/InfoTable.js'\nimport {GroupPageStyle, TablePupils} from './group-page.style'\nimport {getGroup_Id} from './group-page.logics'\nimport Schedule from '../../#schedule/schedule.js'\nimport CreateSchedule from '../../#schedule/create-schedule/create-schedule'\n\nconst GroupPage = () => {\n    let dataGroup = useParams().id\n\n    let localSchedule = {}\n    const [DataALL, setDataALL] = useState({\n        pupils: [\n            {\n                _id: '564564',\n                localSchedule: localSchedule,\n            },\n        ],\n        group_name: 'Загрузка...',\n        tutor: '',\n        level: '',\n        places: '',\n        global_schedule: [\n            {\n                duration: ['--:--', '--:--'],\n            },\n        ],\n        _id: '6456',\n    })\n\n    const {group_name, pupils, global_schedule} = DataALL\n\n    useEffect(() => {\n        getGroup_Id(setDataALL, dataGroup)\n    }, [])\n\n    let PUPILS_List = ''\n\n    if (pupils) {\n        PUPILS_List = pupils.map((item) => {\n            return (\n                <span\n                    key={item._id}\n                    className=\"badge bg-info text-dark\"\n                >{`${item.name} ${item.surname}`}</span>\n            )\n        })\n    }\n\n    let PUPILSandTIME = ''\n\n    if (pupils) {\n        PUPILSandTIME = pupils.map((itemG) => {\n            return (\n                <PupilsAndTime\n                    key={itemG._id}\n                    itemG={itemG}\n                    dataGroup={dataGroup}\n                    getGroup_Id={() => getGroup_Id(setDataALL, dataGroup)}\n                    setData={setDataALL}\n                    surname={itemG.surname}\n                    name={itemG.name}\n                    type=\"group\"\n                />\n            )\n        })\n    }\n\n    let addPupils_g = (\n        <AddStydentGroup\n            schedule={global_schedule}\n            update={() => getGroup_Id(setDataALL, dataGroup)}\n            pageId={dataGroup}\n            title=\"ученика\"\n        />\n    )\n    return (\n        <>\n            <GroupPageStyle className=\"container row col-12\">\n                <div className=\"col-12 col-md-6 pad\">\n                    <div className=\"infoLog align-self-start col-md-12 col-12\">\n                        <div className=\"group-name col-12 col-lg-12\">\n                            <h3>{group_name}</h3>\n                        </div>\n                        <div className=\"time col-md-12 row\">\n                            <CreateSchedule\n                                updateGroup={(onSuccess) =>\n                                    getGroup_Id((data) => {\n                                        setDataALL(data)\n                                        onSuccess()\n                                    }, dataGroup)\n                                }\n                                groupID={dataGroup}\n                            />\n                            <Schedule\n                                global_schedule={global_schedule ? global_schedule : []}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6 ulBox\">\n                    <ul className=\"list-group list-group-flush\">\n                        <InfoTable Data_ALL={DataALL} updetePage={setDataALL}/>\n                        <li className=\"list-group-item\">\n                            Ученики: {PUPILS_List} {addPupils_g}\n                        </li>\n                    </ul>\n                </div>\n                <TablePupils className=\"container col-12\">\n                    <h3 className=\"badge bg-warning\">Ученики:</h3>\n                    {PUPILSandTIME}\n                </TablePupils>\n            </GroupPageStyle>\n        </>\n    )\n}\nexport default GroupPage\n","import React from 'react';\n\nimport {Button, Upload} from 'antd';\n\nimport 'antd/dist/antd.css';\n\nimport Url from './../../../url/url.js'\nimport {Toast} from '../../../alert/alert.js'\n\nimport styled from '@emotion/styled'\nimport RestrictionMessage from \"../../restriction-message/restriction-message\";\n\nconst Box = styled.div({\n    '.ButtonUpload': {\n        padding: 0,\n        background: 'rgba(0, 0, 0, 0)',\n        border: 'none',\n        color: '#a6adb4',\n        '&:hover': {\n            color: '#fff'\n        }\n    },\n    '.ant-upload-list': {\n        display: 'none'\n    }\n})\n\nconst UploadPupils = () => {\n\n    const props = {\n        name: 'file',\n        action: `${Url}/CRM/Pupils/uploadFile`,\n        accept: '.csv,.xlsx',\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        },\n        onChange(info) {\n\n            if (info.file.status === 'done') {\n\n                Toast.fire({\n                    icon: 'success',\n                    title: `Фаил ${info.file.name}, успешно загружен`\n                })\n            } else if (info.file.status === 'error') {\n\n                if (info.file.response.statusCode === 403) {\n                    RestrictionMessage(403)\n                } else {\n                    Toast.fire({\n                        icon: 'error',\n                        title: `В ${info.file.name}, ошибки на строках: ${info.file.response.message.join(\", \")}`\n                    })\n                }\n            }\n        }\n    };\n\n    return (\n        <Box>\n            <Upload {...props}>\n                <Button className={'ButtonUpload'}>Загрузите файлы c учениками</Button>\n            </Upload>\n        </Box>\n    )\n}\n\nexport default UploadPupils","import React from \"react\"\nimport {Table} from \"antd\"\n\n\nimport styled from \"@emotion/styled\"\n\nconst Box = styled.div({\n    '.log_h2': {},\n    td: {\n        paddingTop: '1px',\n        paddingBottom: '4px'\n    },\n    'th, td': {\n        padding: '16px 11px',\n        whiteSpace: 'nowrap'\n    }\n})\n\nconst TableGroups = (\n    {\n        dataSource = [],\n        columns = [],\n        setParamFilrers,\n        paramFilrers,\n        update = () => {\n        }\n    }\n) => {\n\n    return (\n        <Box>\n            <Table\n                pagination={false}\n                dataSource={dataSource}\n                columns={columns}\n                scroll={{x: 0}}\n                onChange={(pagination, filters) => {\n                    let box = {...paramFilrers}\n                    for (let key in filters) {\n                        if (filters[key]) {\n                            box[key] = filters[key]\n                        } else if (key !== 'GROUP_NAME') {\n                            box[key] = []\n                        }\n                    }\n                    update(0, box)\n                    setParamFilrers(box)\n                }}\n            />\n        </Box>\n    )\n}\n\nexport default TableGroups","import React from 'react';\nimport {MenuFoldOutlined} from '@ant-design/icons';\n\nexport const getColumn = (con, fnc, title, dataIndex) => ({\n    title: () => (\n        <>\n            <MenuFoldOutlined\n                onClick={() => {\n                    if (con[1]) {\n                        fnc([\"\", \"\"]);\n                    } else {\n                        fnc([\n                            <span style={{paddingLeft: \"7px\"}}>{title}</span>,\n                            dataIndex,\n                        ]);\n                    }\n                }}\n            />\n            {con[0]}\n        </>\n    ),\n    dataIndex: `${con[1]}`,\n    key: `${con[1]}`\n})","import React, {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button, Checkbox, Input, Menu, Space} from 'antd'\nimport {CloseCircleOutlined, SearchOutlined} from '@ant-design/icons'\n\nimport TableGroups from './../../../table-groups/table-groups.js'\nimport {getColumn} from '../change-column/change-column'\nimport Pagination from './../pagination/pagination.js'\nimport getLimit from './../../#more-functions/getLimit/getLimit.js'\n// Style\nimport styled from '@emotion/styled'\n\nimport Url from './../../../../url/url.js'\nimport errorHandler from '../../../error-handler/error-handler'\nimport {connect} from 'react-redux'\nimport {install_all_groups, install_param_filters_groups,} from '../../../../actions'\n\nconst Create_Columns_Rows_Groups = ({\n                                        dataObj,\n                                        install_all_groups,\n                                        paramFilrers,\n                                        setParamFilrers,\n                                    }) => {\n    const [offsetG, setOffsetG] = useState(0)\n    const [Count, setCount] = useState(1)\n\n    // Filters\n    const [loadingButtomFilrer, setLoadingButtomFilrer] = useState(false)\n    const [filterDropdownVisible, setFilterDropdownVisible] = useState({\n        group_name: false,\n    })\n\n    const [g, setG] = useState([\n        <span style={{paddingLeft: '7px'}}>Группа</span>,\n        'group_name',\n    ])\n    const [l, setL] = useState([\n        <span style={{paddingLeft: '7px'}}>Уровень группы</span>,\n        'level',\n    ])\n    const [p, setP] = useState([\n        <span style={{paddingLeft: '7px'}}>Количество мест</span>,\n        'places',\n    ])\n    const [o, setO] = useState([\n        <span style={{paddingLeft: '7px'}}>Свободных мест</span>,\n        'occupied',\n    ])\n    const [n, setN] = useState([\n        <span style={{paddingLeft: '7px'}}>Число учеников</span>,\n        'NUMBER_PUPILS',\n    ])\n    const [t, setT] = useState([\n        <span style={{paddingLeft: '7px'}}>Учитель</span>,\n        'tutor',\n    ])\n    // /Change colums\n\n    const axios = require('axios') // AJAX\n\n    const [Tutors, setTutors] = useState([])\n\n    const addTUTOR = () => {\n        axios({\n            method: 'get',\n            url: `${Url}/AdminPanel/CRMAccounts?limit=100&offset=0&accountType=teacher`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n        })\n            .then((res) => {\n                let {data} = res\n                setTutors(data)\n            })\n            .catch((error) => {\n                errorHandler(addTUTOR, error)\n            })\n    }\n\n    const update = (offset = 0, filters = {}) => {\n        setLoadingButtomFilrer(true)\n\n        let box = {}\n\n        for (let key in filters) {\n            if (key !== 'occupied' && filters[key][0] !== undefined) {\n                box[`${key}s`] = filters[key]\n            } else if (filters[key].length) {\n                box[key] = filters[key][0]\n            }\n        }\n\n        axios({\n            method: 'post',\n            url: `${Url}/CRM/Groups/find?limit=${getLimit}&offset=${offset}`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n            data: {\n                filters: box,\n            },\n        })\n            .then((res) => {\n                let {data, headers} = res\n                install_all_groups(data)\n                setFilterDropdownVisible({group_name: false})\n                setLoadingButtomFilrer(false)\n                setCount(headers.count)\n            })\n            .catch((error) => {\n                errorHandler(update, error, () => {\n                    setLoadingButtomFilrer(false)\n                })\n            })\n    }\n\n    useEffect(() => {\n        addTUTOR()\n        update(0, paramFilrers)\n    }, [])\n\n    let CheckboxValue = {\n        group_name: {},\n    }\n\n    for (let key in CheckboxValue) {\n        paramFilrers[key].forEach((item) => {\n            CheckboxValue[key][item] = true\n        })\n    }\n\n    const [globalFilters, setGlobalFilters] = useState({\n        group_name: [],\n    })\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        if (selectedKeys[0]) {\n            let FiltersLocal = {...globalFilters}\n\n            FiltersLocal[dataIndex].push({\n                text: selectedKeys[0],\n                value: selectedKeys[0],\n            })\n\n            setGlobalFilters(FiltersLocal)\n            selectedKeys[0] = ''\n        }\n    }\n\n    let DataSource = dataObj.map((item) => {\n        let {group_name, level, places, pupils, tutor, _id} = item\n\n        return {\n            key: _id,\n            group_name: [group_name, _id],\n            level,\n            places,\n            NUMBER_PUPILS: pupils ? pupils.length : '',\n            tutor: tutor ? `${tutor.surname} ${tutor.name} ${tutor.midname}` : '-',\n            occupied: pupils ? places - pupils.length : '',\n        }\n    })\n\n    const BoxButtom = styled.div({\n        marginTop: '10px',\n        svg: {\n            marginBottom: '3px',\n        },\n    })\n\n    const getColumnSearchProps = (dataIndex) => ({\n        filterDropdown: ({\n                             setSelectedKeys,\n                             selectedKeys,\n                             confirm,\n                             clearFilters,\n                         }) => (\n            <div style={{padding: 8}}>\n                <Input\n                    placeholder={`Создать фильтр ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={(e) =>\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\n                    }\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{marginBottom: 8, display: 'block'}}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => {\n                            handleSearch(selectedKeys, confirm, dataIndex)\n                        }}\n                        size=\"small\"\n                        style={{width: 140}}\n                    >\n                        Добавить в фильтр\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        size=\"small\"\n                        onClick={() => {\n                            let filters = {...globalFilters}\n                            filters[dataIndex] = []\n                            setGlobalFilters(filters)\n\n                            let dataFilters = {...paramFilrers}\n                            dataFilters[dataIndex] = []\n\n                            setParamFilrers(dataFilters)\n\n                            update(0, dataFilters)\n                        }}\n                    >\n                        Очистить фильтр\n                    </Button>\n                </Space>\n                <Menu>\n                    {globalFilters[dataIndex].map((item, i) => {\n                        let checked = false\n                        paramFilrers[dataIndex].forEach((param) => {\n                            if (param == item.text) {\n                                checked = true\n                            }\n                        })\n\n                        return (\n                            <Menu.Item key={`${item.text}${i}`}>\n                                <Checkbox\n                                    defaultChecked={checked}\n                                    onChange={(e) => {\n                                        if (e.target.checked) {\n                                            CheckboxValue[dataIndex][item.text] = true\n                                        } else {\n                                            CheckboxValue[dataIndex][item.text] = false\n                                        }\n                                    }}\n                                >\n                                    {item.text}\n                                </Checkbox>\n                            </Menu.Item>\n                        )\n                    })}\n                </Menu>\n                <BoxButtom>\n                    <Button\n                        loading={loadingButtomFilrer}\n                        type=\"primary\"\n                        size=\"small\"\n                        icon={<SearchOutlined/>}\n                        onClick={() => {\n                            let paramLocal = []\n\n                            for (let key in CheckboxValue[dataIndex]) {\n                                if (CheckboxValue[dataIndex][key]) {\n                                    paramLocal.push(key)\n                                }\n                            }\n                            let data = {...paramFilrers}\n                            data[dataIndex] = paramLocal\n\n                            setParamFilrers(data)\n                            setGlobalFilters(globalFilters)\n\n                            update(0, data)\n                        }}\n                    >\n                        Применить фильтр\n                    </Button>\n                </BoxButtom>\n            </div>\n        ),\n        filterIcon: () => {\n            let color = undefined\n            if (paramFilrers[dataIndex][0]) {\n                color = '#1890ff'\n            }\n\n            if (filterDropdownVisible[dataIndex]) {\n                return <CloseCircleOutlined/>\n            } else {\n                return (\n                    <>\n                        <SearchOutlined style={{color: color}}/>\n                    </>\n                )\n            }\n        },\n        onFilterDropdownVisibleChange: (Visible) => {\n            let per = {...filterDropdownVisible}\n            per[dataIndex] = Visible\n            setFilterDropdownVisible(per)\n\n            if (!Visible) {\n                setParamFilrers(paramFilrers)\n                setGlobalFilters(globalFilters)\n            }\n        },\n        filterDropdownVisible: filterDropdownVisible[dataIndex],\n    })\n    // /Filrers\n\n    let filtersTutors = Tutors.map((item) => ({\n        text: `${item.surname} ${item.name}`,\n        value: item._id,\n    }))\n\n    let Columns = [\n        {\n            ...getColumn(g, setG, 'Группа', 'group_name'),\n            render: (group_name) => {\n                if (group_name) {\n                    return <Link to={`/group/${group_name[1]}`}>{group_name[0]}</Link>\n                }\n            },\n            ...getColumnSearchProps('group_name'),\n        },\n        {\n            ...getColumn(l, setL, 'Уровень группы', 'level'),\n            filters: [\n                {\n                    text: '1',\n                    value: 1,\n                },\n                {\n                    text: '2',\n                    value: 2,\n                },\n                {\n                    text: '3',\n                    value: 3,\n                },\n                {\n                    text: '4',\n                    value: 4,\n                },\n            ],\n            defaultFilteredValue: paramFilrers.level.map((item) => item + ''),\n        },\n        {\n            ...getColumn(p, setP, 'Количество мест', 'places'),\n        },\n        {\n            ...getColumn(o, setO, 'Свободных мест', 'occupied'),\n            filters: [\n                {\n                    text: 'Заполненно',\n                    value: false,\n                },\n                {\n                    text: 'Свободно',\n                    value: true,\n                },\n            ],\n            defaultFilteredValue: paramFilrers.occupied.map((item) => `${item}`),\n        },\n        {\n            ...getColumn(n, setN, 'Число учеников', 'NUMBER_PUPILS'),\n        },\n        {\n            ...getColumn(t, setT, 'Учитель', 'tutor'),\n            filters: filtersTutors,\n            defaultFilteredValue: [...paramFilrers.tutor],\n        },\n    ]\n\n    const Box = styled.div({\n        padding: '0 30px',\n    })\n\n    return (\n        <Box>\n            <TableGroups\n                dataSource={DataSource}\n                columns={Columns}\n                setParamFilrers={setParamFilrers}\n                paramFilrers={paramFilrers}\n                update={update}\n            />\n            <Pagination\n                getItem={update}\n                count={Count}\n                offset={offsetG}\n                setOffset={setOffsetG}\n            />\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    dataObj: state.all_groups,\n    paramFilrers: state.param_filters_groups,\n})\nconst mapDispatchToProps = {\n    install_all_groups,\n    setParamFilrers: install_param_filters_groups,\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Create_Columns_Rows_Groups)\n","import React, {useEffect} from 'react';\nimport {Link} from \"react-router-dom\"\nimport {Table} from 'antd';\nimport ReturnAge from './../home-page/return-age/returnAge' // Определяет возраст\nimport styled from '@emotion/styled';\nimport moment from \"moment\";\nimport 'moment/locale/ru';\n\nconst Box = styled.div({\n    'th, td': {\n        padding: '16px 11px'\n    }\n})\n\nconst Table_Pupils = ({\n                          paramFilrers,\n                          setParamFilrers,\n\n                          dataGroupsChecked,\n\n                          dataSource,\n                          update,\n                          columns,\n\n                          scrollLeft\n                      }) => {\n\n    useEffect(() => {\n        document.querySelector('.ant-table-content').scrollLeft = scrollLeft\n    })\n    let itemPupils = dataSource.map(item => {\n        let {\n            _id,\n            surname,\n            name,\n            midname,\n            dateOfBirth,\n            gender,\n            phone,\n            balance,\n            parentPhone,\n            parentFullname,\n            discord,\n            groups,\n            tutor,\n            statuses,\n            createdAt\n        } = item\n\n        return ({\n            key: _id,\n            surname: () => (\n                <Link\n                    className=\"link-info\"\n                    to={`/student/${_id}`}>\n\n                    {surname}\n                </Link>\n            ),\n            name,\n            midname,\n            dateOfBirth: ReturnAge(dateOfBirth),\n            gender,\n            phoneNumber: phone,\n            tutor,\n            parentFullname,\n            parentPhoneNumber: parentPhone.join(', '),\n            balance: `${balance}`,\n            discordNickname: discord,\n            groups,\n            statuses,\n            createdAt: moment(createdAt).format('DD - MMMM - YYYY, HH:MM')\n        })\n    })\n\n    return (\n        <Box>\n            <Table\n                pagination={false}\n                dataSource={itemPupils}\n                columns={columns}\n                scroll={{x: 0}}\n                onChange={(pagination, filters) => {\n                    let box = {...paramFilrers}\n                    if (filters.gender) {\n                        box.gender = filters.gender\n                    } else {\n                        box.gender = []\n                    }\n\n                    if (filters.balance) {\n                        box.balance = filters.balance\n                    } else {\n                        box.balance = []\n                    }\n\n                    setParamFilrers(box)\n                    update(box, dataGroupsChecked)\n                }}\n            />\n        </Box>\n    )\n}\n\nexport default Table_Pupils","import styled from \"@emotion/styled\";\n\nconst breakpoints = [1020, 700],\n    mq = breakpoints.map(\n        bp => `@media (max-width: ${bp}px)`\n    )\n\nexport const TableL = styled.div({\n    padding: '0 30px',\n    [mq[1]]: {\n        padding: '0 0',\n    },\n    '.log_h2': {},\n    td: {\n        paddingTop: '1px',\n        paddingBottom: '4px'\n    },\n    'th, td': {\n        whiteSpace: 'nowrap'\n    }\n})\n\nexport const BoxButtom = styled.div({\n    marginTop: \"10px\",\n    svg: {\n        marginBottom: \"3px\",\n    },\n});","import {Button, Checkbox, Menu} from 'antd'\nimport {FilterFilled, SearchOutlined} from '@ant-design/icons'\nimport {BoxButtom} from '../style-filter'\nimport React from 'react'\n\nexport const filterStatuses = (\n    dataStatusesCheck,\n    setParamFilrers,\n    loadingButtomFilrer,\n    paramFilrers,\n    setFilterAxios\n) => {\n    return {\n        filterDropdown: () => (\n            <div style={{padding: 8}}>\n                <Menu>\n                    {dataStatusesCheck.map((item) => {\n                        let checked = false\n                        let {_id, name} = item\n\n                        paramFilrers.statuses.forEach((item) => {\n                            if (_id === item) {\n                                checked = true\n                            }\n                        })\n\n                        return (\n                            <Menu.Item key={_id}>\n                                <Checkbox\n                                    defaultChecked={checked}\n                                    onChange={(e) => {\n                                        let box = [...paramFilrers.statuses]\n\n                                        if (e.target.checked) {\n                                            box.push(_id)\n                                        } else {\n                                            box = box.filter((item) => item !== _id)\n                                        }\n                                        setParamFilrers({...paramFilrers, statuses: box})\n                                    }}\n                                >\n                                    {name}\n                                </Checkbox>\n                            </Menu.Item>\n                        )\n                    })}\n                </Menu>\n                <BoxButtom>\n                    <Button\n                        loading={loadingButtomFilrer}\n                        type=\"primary\"\n                        size=\"small\"\n                        icon={<SearchOutlined/>}\n                        onClick={() => {\n                            setFilterAxios(paramFilrers, {})\n                        }}\n                    >\n                        Применить фильтр\n                    </Button>\n                </BoxButtom>\n            </div>\n        ),\n        filterIcon: () => {\n            if (Object.keys(paramFilrers.statuses).length) {\n                return <FilterFilled style={{color: '#1890ff'}}/>\n            } else {\n                return <FilterFilled/>\n            }\n        },\n    }\n}\n","import {Button, Checkbox, Menu} from \"antd\";\nimport {BoxButtom} from \"../style-filter\";\nimport {FilterFilled, SearchOutlined} from \"@ant-design/icons\";\nimport React, {useState} from \"react\";\n\nconst FilterByTeachers = (\n    setParamFilrers = () => {\n    },\n    loadingButtomFilrer = false,\n    paramFilrers = {},\n    setFilterAxios = () => {\n    }\n) => {\n\n    const [dataStatusesCheck, setDataStatusesCheck] = useState([])\n\n    return ({\n        filterDropdown: () => (\n            <div style={{padding: 8}}>\n                <Menu>\n\n                    {dataStatusesCheck.map(item => {\n                        let checked = false\n                        let {_id, name} = item\n\n                        paramFilrers.statuses.forEach(item => {\n                            if (_id === item) {\n                                checked = true\n                            }\n                        })\n\n                        return (\n                            <Menu.Item key={_id}>\n                                <Checkbox\n                                    defaultChecked={checked}\n                                    onChange={(e) => {\n\n                                        let box = [...paramFilrers.statuses]\n\n                                        if (e.target.checked) {\n                                            box.push(_id)\n                                        } else {\n                                            box = box.filter(item => (item !== _id))\n                                        }\n                                        setParamFilrers({...paramFilrers, statuses: box})\n                                    }}\n                                >\n                                    {name}\n                                </Checkbox>\n                            </Menu.Item>\n                        )\n                    })}\n                </Menu>\n                <BoxButtom>\n                    <Button\n                        loading={loadingButtomFilrer}\n                        type=\"primary\"\n                        size=\"small\"\n                        icon={<SearchOutlined/>}\n                        onClick={() => {\n                            setFilterAxios(paramFilrers, {})\n                        }}\n                    >\n                        Применить фильтр\n                    </Button>\n                </BoxButtom>\n            </div>\n        ),\n        filterIcon: () => {\n            if (Object.keys(paramFilrers.statuses).length) {\n                return <FilterFilled style={{color: '#1890ff'}}/>\n            } else {\n                return <FilterFilled/>\n            }\n        }\n    })\n}\n\nexport default FilterByTeachers","import React, {useEffect, useState} from 'react'\nimport {Button, Checkbox, Input, Menu, Space, Tag} from 'antd'\n\nimport Table_Pupils from './../../../table-pupils/table.js'\nimport {getColumn} from '../change-column/change-column'\nimport getLimit from './../../#more-functions/getLimit/getLimit.js'\n\nimport {CloseCircleOutlined, FilterFilled, SearchOutlined,} from '@ant-design/icons'\n\n// Style\nimport {BoxButtom, TableL} from './style-filter'\n\nimport Url from './../../../../url/url.js'\nimport Pagination from './../../#more-functions/pagination/pagination.js'\nimport errorHandler from '../../../error-handler/error-handler'\nimport {filterStatuses} from './filter-dropdown/logics-pupils'\nimport {updateStatuses} from '../../student/student-statuses/logic-statuses'\nimport FilterByTeachers from './filter-dropdown/filter-by-teachers'\n\nconst axios = require('axios') // AJAX\n\nconst Create_Columns_Rows_Pupils = () => {\n    const [ValueGroup, setValueGroup] = useState('')\n    const [dataStatusesCheck, setDataStatusesCheck] = useState([\n        {name: '1', color: 'red', _id: '345'},\n        {name: '2', color: 'red', _id: '335'},\n    ])\n\n    const [offsetG, setOffsetG] = useState(0)\n    const [Count, setCount] = useState(0)\n\n    const [objPupils, setObjPupils] = useState([])\n\n    const [scrollLeft, setScrollLeft] = useState(0)\n\n    // Filtered\n    const [paramFilrers, setParamFilrers] = useState({\n        surname: [],\n        name: [],\n        midname: [],\n        age: [],\n        gender: [],\n        groups: [],\n        balance: [],\n        statuses: [],\n    })\n    const [emptyAge, setEmptyAge] = useState(false)\n\n    let emptyAgeLocal = false\n\n    const [globalFiltersG, setGlobalFiltersG] = useState({\n        surname: [],\n        name: [],\n        midname: [],\n        age: [],\n        balance: [],\n        statuses: [],\n    })\n\n    const [loadingButtomFilrer, setLoadingButtomFilrer] = useState(false)\n\n    const [filterDropdownVisible, setFilterDropdownVisible] = useState({\n        surname: false,\n        name: false,\n        midname: false,\n        age: false,\n        groups: false,\n        statuses: false,\n    })\n\n    const [s, setS] = useState([\n        <span style={{paddingLeft: '7px'}}>Фамилия</span>,\n        'surname',\n    ])\n    const [n, setN] = useState([\n        <span style={{paddingLeft: '7px'}}>Имя</span>,\n        'name',\n    ])\n    const [m, setM] = useState([\n        <span style={{paddingLeft: '7px'}}>Отчество</span>,\n        'midname',\n    ])\n    const [a, setA] = useState([\n        <span style={{paddingLeft: '7px'}}>Возраст</span>,\n        'dateOfBirth',\n    ])\n    const [pF, setPF] = useState([\n        <span style={{paddingLeft: '7px'}}>ФИО Родителя</span>,\n        'parentFullname',\n    ])\n    const [g, setG] = useState([\n        <span style={{paddingLeft: '7px'}}>Пол</span>,\n        'gender',\n    ])\n    const [PhoneTitle, setPhoneTitle] = useState([\n        <span style={{paddingLeft: '7px'}}>Номер телефона</span>,\n        'phoneNumber',\n    ])\n    const [CreatedAt, setCreatedAt] = useState([\n        <span style={{paddingLeft: '7px'}}>Дата создания</span>,\n        'createdAt',\n    ])\n    const [p, setP] = useState([\n        <span style={{paddingLeft: '7px'}}>Номер телефона родителя</span>,\n        'parentPhoneNumber',\n    ])\n    const [b, setB] = useState([\n        <span style={{paddingLeft: '7px'}}>Баланс</span>,\n        'balance',\n    ])\n    const [d, setD] = useState([\n        <span style={{paddingLeft: '7px'}}>Дискорд никнейм</span>,\n        'discordNickname',\n    ])\n    const [gr, setGr] = useState([\n        <span style={{paddingLeft: '7px'}}>Группы</span>,\n        'groups',\n    ])\n    const [st, setSt] = useState([\n        <span style={{paddingLeft: '7px'}}>Статусы</span>,\n        'statuses',\n    ])\n    const [t, setT] = useState([\n        <span style={{paddingLeft: '7px'}}>Учителя</span>,\n        'tutors',\n    ])\n\n    let CheckboxValue = {\n        surname: {},\n        name: {},\n        midname: {},\n        age: {},\n    }\n\n    for (let key in CheckboxValue) {\n        paramFilrers[key].forEach((item) => {\n            CheckboxValue[key][item] = true\n        })\n    }\n\n    // Groups filter\n    const [dataGroupsChecked, setDataGroupsChecked] = useState({})\n\n    const [GroupsCheckedF, setGroupsCheckedF] = useState({})\n\n    let heapGroups = {...dataGroupsChecked, ...GroupsCheckedF}\n\n    let dataGroupsCheck = []\n\n    for (let key in heapGroups) {\n        dataGroupsCheck.push({\n            id: key,\n            text: heapGroups[key][0],\n            checked: heapGroups[key][1],\n        })\n    }\n\n    // /Groups filter\n\n    const [globalFilters, setGlobalFilters] = useState(globalFiltersG)\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        if (selectedKeys[0]) {\n            let FiltersLocal = {...globalFilters}\n\n            FiltersLocal[dataIndex].push({\n                text: selectedKeys[0],\n                value: selectedKeys[0],\n            })\n\n            setGlobalFilters(FiltersLocal)\n            selectedKeys[0] = ''\n        }\n    }\n\n    const emptyAgeGet = (dataIndex) => {\n        if (dataIndex === 'age') {\n            return 'block'\n        } else {\n            return ' none'\n        }\n    }\n    const ageGet = (type) => {\n        if (type === 'age') {\n            return 'number'\n        } else {\n            return 'text'\n        }\n    }\n\n    const getColumnSearchProps = (dataIndex) => ({\n        filterDropdown: ({\n                             setSelectedKeys,\n                             selectedKeys,\n                             confirm,\n                             clearFilters,\n                         }) => (\n            <div style={{padding: 8}}>\n                <Input\n                    type={ageGet(dataIndex)}\n                    placeholder={`Создать фильтр ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={(e) =>\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\n                    }\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{marginBottom: 8, display: 'block'}}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => {\n                            handleSearch(selectedKeys, confirm, dataIndex)\n                        }}\n                        size=\"small\"\n                        style={{width: 140}}\n                    >\n                        Добавить в фильтр\n                    </Button>\n                </Space>\n                <Menu>\n                    {globalFilters[dataIndex].map((item, i) => {\n                        let checked = false\n                        paramFilrers[dataIndex].forEach((param) => {\n                            if (param == item.text) {\n                                checked = true\n                            }\n                        })\n\n                        return (\n                            <Menu.Item key={`${item.text}${i}`}>\n                                <Checkbox\n                                    defaultChecked={checked}\n                                    onChange={(e) => {\n                                        if (e.target.checked) {\n                                            CheckboxValue[dataIndex][item.text] = true\n                                        } else {\n                                            CheckboxValue[dataIndex][item.text] = false\n                                        }\n                                    }}\n                                >\n                                    {item.text}\n                                </Checkbox>\n                            </Menu.Item>\n                        )\n                    })}\n                    <Menu.Item style={{display: emptyAgeGet(dataIndex)}} key=\"emptyAge\">\n                        <Checkbox\n                            defaultChecked={emptyAge}\n                            onChange={(e) => {\n                                emptyAgeLocal = e.target.checked\n                            }}\n                        >\n                            Возраст не указан\n                        </Checkbox>\n                    </Menu.Item>\n                </Menu>\n                <BoxButtom>\n                    <Button\n                        loading={loadingButtomFilrer}\n                        type=\"primary\"\n                        size=\"small\"\n                        icon={<SearchOutlined/>}\n                        onClick={() => {\n                            let paramLocal = []\n\n                            for (let key in CheckboxValue[dataIndex]) {\n                                if (CheckboxValue[dataIndex][key]) {\n                                    paramLocal.push(key)\n                                }\n                            }\n                            let data = {...paramFilrers}\n                            data[dataIndex] = paramLocal\n\n                            setParamFilrers(data)\n                            setGlobalFiltersG(globalFilters)\n\n                            setFilterAxios(data, dataGroupsChecked)\n                        }}\n                    >\n                        Применить фильтр\n                    </Button>\n                </BoxButtom>\n            </div>\n        ),\n        filterIcon: () => {\n            let color = undefined\n            if (paramFilrers[dataIndex][0]) {\n                color = '#1890ff'\n            }\n\n            if (filterDropdownVisible[dataIndex]) {\n                return <CloseCircleOutlined/>\n            } else {\n                return (\n                    <>\n                        <SearchOutlined style={{color: color}}/>\n                    </>\n                )\n            }\n        },\n        onFilterDropdownVisibleChange: (Visible) => {\n            let per = {...filterDropdownVisible}\n            per[dataIndex] = Visible\n            setFilterDropdownVisible(per)\n\n            if (!Visible) {\n                setParamFilrers(paramFilrers)\n                setGlobalFiltersG(globalFilters)\n            }\n        },\n        filterDropdownVisible: filterDropdownVisible[dataIndex],\n    })\n\n    const searchGroups = (value) => {\n        let localUrl = encodeURI(value)\n\n        axios({\n            method: 'get',\n            url: `${Url}/CRM/Search/autocompletion?query=${localUrl}`,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n        })\n            .then((res) => {\n                let box = {} //...GroupsCheckedF\n\n                res.data.body.hits.hits.map((item) => {\n                    let {id, group_name, type} = item._source\n\n                    if (type === 'group') {\n                        box[id] = [`${group_name}`, false]\n                    }\n                })\n\n                setValueGroup(value)\n\n                setGroupsCheckedF(box)\n            })\n            .catch((error) => {\n                errorHandler(searchGroups, error)\n            })\n    }\n\n    let typingTimer //timer identifier\n    let doneTypingInterval = 500 //time in ms (5 seconds)\n\n    const SearchGroups = (text) => {\n        clearTimeout(typingTimer)\n        if (text) {\n            typingTimer = setTimeout(() => {\n                // setValueGroup(name)\n                searchGroups(text)\n            }, doneTypingInterval)\n        } else {\n            setValueGroup('')\n            setGroupsCheckedF({})\n        }\n    }\n\n    const handleSearchGroup = (selectedKeys, confirm) => {\n    }\n\n    const filterGroups = () => ({\n        filterDropdown: ({\n                             setSelectedKeys,\n                             selectedKeys,\n                             confirm,\n                             clearFilters,\n                         }) => (\n            <div style={{padding: 8}}>\n                <Input\n                    // focus={true}\n                    id=\"inputGroup\"\n                    placeholder={`Найти группы`}\n                    defaultValue={ValueGroup}\n                    onChange={(e) => {\n                        SearchGroups(e.target.value)\n                    }}\n                    onPressEnter={() => handleSearchGroup(selectedKeys, confirm)}\n                    style={{marginBottom: 8, display: 'block'}}\n                />\n                <Menu>\n                    {dataGroupsCheck.map((item) => {\n                        let {id, text, checked} = item\n\n                        return (\n                            <Menu.Item key={id}>\n                                <Checkbox\n                                    defaultChecked={checked}\n                                    onChange={(e) => {\n                                        let box = {...dataGroupsChecked}\n\n                                        if (e.target.checked) {\n                                            box[id] = [text, true]\n                                        } else {\n                                            delete box[id]\n                                            // delete obj['gh']\n                                        }\n\n                                        setDataGroupsChecked(box)\n                                        setGroupsCheckedF({})\n                                    }}\n                                >\n                                    {text}\n                                </Checkbox>\n                            </Menu.Item>\n                        )\n                    })}\n                </Menu>\n                <BoxButtom>\n                    <Button\n                        loading={loadingButtomFilrer}\n                        type=\"primary\"\n                        size=\"small\"\n                        icon={<SearchOutlined/>}\n                        onClick={() => {\n                            setFilterAxios(paramFilrers, dataGroupsChecked)\n                        }}\n                    >\n                        Применить фильтр\n                    </Button>\n                </BoxButtom>\n            </div>\n        ),\n        onFilterDropdownVisibleChange: (Visible) => {\n            if (Visible) {\n                setScrollLeft(document.querySelector('.ant-table-content').scrollLeft)\n            } else {\n                setScrollLeft(0)\n            }\n\n            let per = {...filterDropdownVisible}\n            per.groups = Visible\n            setFilterDropdownVisible(per)\n\n            if (!Visible) {\n                // setDataGroupsChecked(dataGroupsChecked)\n                setFilterAxios(paramFilrers, dataGroupsChecked)\n            }\n        },\n        filterDropdownVisible: filterDropdownVisible.groups,\n        filterIcon: () => {\n            if (Object.keys(dataGroupsChecked).length) {\n                return <FilterFilled style={{color: '#1890ff'}}/>\n            } else {\n                return <FilterFilled/>\n            }\n        },\n    })\n\n    // /Filtered\n\n    const [FILTER, SET_FILTER] = useState({\n        filters: {},\n    })\n\n    const update = (offset = 0, p) => {\n        setLoadingButtomFilrer(true)\n\n        axios({\n            method: 'post',\n            url: `${Url}/CRM/Pupils/find?limit=${getLimit}&offset=${offset}`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n            data: p ? p : FILTER,\n        })\n            .then((res) => {\n                let {data, headers} = res\n                setObjPupils(data)\n                setCount(headers.count)\n\n                setFilterDropdownVisible({\n                    surname: false,\n                    name: false,\n                    midname: false,\n                })\n                setLoadingButtomFilrer(false)\n            })\n            .catch((error) => {\n                errorHandler(update, error, () => {\n                    setLoadingButtomFilrer(false)\n                })\n            })\n    }\n\n    const setFilterAxios = (param = {}, filtersGroups = {}) => {\n        let filtersLocal = {}\n\n        for (let key in filtersGroups) {\n            if (filtersLocal.groups) {\n                filtersLocal.groups.push(key)\n            } else {\n                filtersLocal.groups = []\n                filtersLocal.groups.push(key)\n            }\n            // filtersLocal.groups = [...filtersLocal.groups]\n        }\n\n        for (let key in param) {\n            if (param[key][0]) {\n                if (\n                    key === 'surname' ||\n                    key === 'name' ||\n                    key === 'midname' ||\n                    key === 'age'\n                ) {\n                    filtersLocal[`${key}s`] = param[key]\n                } else {\n                    filtersLocal[`${key}`] = param[key]\n                }\n            }\n        }\n\n        if (filtersLocal.ages) {\n            let age = [...filtersLocal.ages]\n            filtersLocal.ages = []\n            age.forEach((age) => {\n                filtersLocal.ages.push(+age)\n            })\n        }\n\n        if (filtersLocal.balance) {\n            let balance = [...filtersLocal.balance]\n            if ((balance[0] == 1) & !balance[1]) {\n                filtersLocal.balance = {$gte: 0}\n            } else if ((balance[0] == 2) & !balance[1]) {\n                filtersLocal.balance = {$lt: 0}\n            } else if (balance[1]) {\n                filtersLocal.balance = {$gte: 0, $lte: 0}\n            }\n        }\n\n        filtersLocal.emptyAge = emptyAgeLocal\n\n        let p = {\n            filters: filtersLocal,\n        }\n        setEmptyAge(emptyAgeLocal)\n        SET_FILTER(p)\n        update(0, p)\n    }\n\n    useEffect(() => {\n        update()\n        updateStatuses(setDataStatusesCheck, setLoadingButtomFilrer)\n    }, [])\n\n    useEffect(() => {\n        let input = document.getElementById('inputGroup')\n        if (input) {\n            input.focus()\n        }\n    })\n\n    const columns = [\n        {\n            ...getColumn(s, setS, 'Фамилия', 'surname'),\n            render: (surname) => {\n                if (typeof surname == 'function') {\n                    return surname()\n                }\n            },\n            ...getColumnSearchProps('surname'),\n        },\n        {\n            ...getColumn(n, setN, 'Имя', 'name'),\n            ...getColumnSearchProps('name'),\n        },\n        {\n            ...getColumn(m, setM, 'Отчество', 'midname'),\n            ...getColumnSearchProps('midname'),\n        },\n        {\n            ...getColumn(a, setA, 'Возраст', 'age'),\n            ...getColumnSearchProps('age'),\n        },\n        {\n            ...getColumn(g, setG, 'Пол', 'gender'),\n            filters: [\n                {\n                    text: 'Мужской',\n                    value: 'Мужской',\n                },\n                {\n                    text: 'Женский',\n                    value: 'Женский',\n                },\n            ],\n            defaultFilteredValue: [...paramFilrers.gender],\n        },\n        {\n            ...getColumn(st, setSt, 'Статусы', 'statuses'),\n            render: (statuses) => {\n                if (statuses && statuses[0]) {\n                    return statuses.map((status) => {\n                        const {color, _id, name} = status\n                        return (\n                            <Tag color={color} key={_id}>\n                                {name}\n                            </Tag>\n                        )\n                    })\n                }\n            },\n            ...filterStatuses(\n                dataStatusesCheck,\n                setParamFilrers,\n                loadingButtomFilrer,\n                paramFilrers,\n                setFilterAxios\n            ),\n        },\n        {\n            ...getColumn(t, setT, 'Учителя', 'tutors'),\n            ...(<FilterByTeachers/>),\n        },\n        {\n            ...getColumn(PhoneTitle, setPhoneTitle, 'Номер телефона', 'phoneNumber'),\n        },\n        {\n            ...getColumn(CreatedAt, setCreatedAt, 'Дата создания', 'createdAt'),\n        },\n        {\n            ...getColumn(p, setP, 'Номер телефона родителя', 'parentPhoneNumber'),\n        },\n        {\n            ...getColumn(pF, setPF, 'ФИО Родителя', 'parentFullname'),\n        },\n        {\n            ...getColumn(b, setB, 'Баланс', 'balance'),\n            filters: [\n                {\n                    text: 'Положительный',\n                    value: '1',\n                },\n                {\n                    text: 'Отрицательный',\n                    value: '2',\n                },\n            ],\n            defaultFilteredValue: [...paramFilrers.balance], //...paramFilrers.balance\n        },\n        {\n            ...getColumn(gr, setGr, 'Группы', 'groups'),\n            render: (groups) => {\n                if (groups) {\n                    return groups.map((group) => (\n                        <Tag color=\"blue\" key={`${group._id}`}>\n                            {group.group_name}\n                        </Tag>\n                    ))\n                }\n            },\n            ...filterGroups(),\n        },\n        {\n            ...getColumn(d, setD, 'Дискорд никнейм', 'discordNickname'),\n        },\n    ]\n\n    return (\n        <TableL>\n            <Table_Pupils\n                paramFilrers={paramFilrers}\n                setParamFilrers={setParamFilrers}\n                globalFiltersG={globalFilters}\n                setGlobalFiltersG={setGlobalFilters}\n                dataGroupsChecked={dataGroupsChecked}\n                setDataGroupsChecked={setDataGroupsChecked}\n                dataSource={objPupils}\n                update={setFilterAxios}\n                loadingButtomFilrer={loadingButtomFilrer}\n                setLoadingButtomFilrer={setLoadingButtomFilrer}\n                filterDropdownVisible={filterDropdownVisible}\n                setFilterDropdownVisible={setFilterDropdownVisible}\n                columns={columns}\n                scrollLeft={scrollLeft}\n            />\n            <Pagination\n                getItem={update}\n                count={Count}\n                offset={offsetG}\n                setOffset={setOffsetG}\n            />\n        </TableL>\n    )\n}\n\nexport default Create_Columns_Rows_Pupils\n","import React from \"react\"\n\nexport const SuspenseComponent = (fallback, OtherComponent, props = {}) => {\n    return () => {\n        return (\n            <React.Suspense fallback={fallback}>\n                <OtherComponent {...props} />\n            </React.Suspense>\n        )\n    }\n}","import styled from \"@emotion/styled\";\n\nconst TrialLessonsStyle = styled.div`\n  .trial-lesson-schedule-skeleton {\n    display: block;\n\n    div {\n      display: block;\n      width: 100%;\n\n      span {\n        width: 100%;\n        margin-bottom: 8px;\n        height: 56px;\n      }\n    }\n  }\n\n  .trial-lesson-schedule {\n    td {\n      padding: 10px 10px;\n    }\n\n    .ant-checkbox-inner {\n      height: 20px;\n      width: 20px;\n    }\n  }\n\n  .trial-lesson-schedule-comments {\n    display: flex;\n\n    button {\n      margin: auto 0;\n      margin-left: 8px;\n    }\n  }\n`\n\nexport {\n    TrialLessonsStyle\n}","import axios from \"axios\";\nimport Url from \"../../../url/url\";\nimport errorHandler from \"../../error-handler/error-handler\";\n\nconst commentingOnGroup = (title, group, change_trial_lessons, setNotes, setLoading) => {\n    setLoading(true)\n    let new_schedule = [{\n        ...group.global_schedule[0],\n        title\n    }]\n    group.pupils.forEach(pupil => {\n        setNotes(pupil.id, title)\n    })\n    change_global_schedule(group._id, new_schedule)\n        .then(res => {\n            setLoading(false)\n            change_trial_lessons(res.data)\n        })\n        .catch(error => {\n            errorHandler(() => {\n                commentingOnGroup(title, group)\n            }, error, () => {\n                setLoading(false)\n            })\n        })\n}\n\nconst setNotes = (id, text) => (\n    axios({\n        method: 'post',\n        url: `${Url}/CRM/Pupils/${id}/Notes`,\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        },\n        data: {\n            text\n        }\n    })\n        .catch(error => {\n            errorHandler(() => setNotes(id, text), error, false)\n        })\n)\n\nconst change_global_schedule = (group_id, new_schedule) => (\n    axios({\n        method: 'post',\n        url: `${Url}/CRM/Groups/${group_id}/Schedule`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        },\n        data: new_schedule\n    })\n)\n\nconst getTrialLessons = (setLoading, install_trial_lessons) => {\n    setLoading(true)\n    axios({\n        method: 'post',\n        url: `${Url}/CRM/Groups/find?limit=100&offset=${0}&trial=true`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        }\n    })\n        .then(res => {\n            install_trial_lessons(res.data)\n            setLoading(false)\n        })\n        .catch(error => {\n            errorHandler(() => getTrialLessons(install_trial_lessons), error, () => setLoading(false))\n        })\n}\n\nconst deleteGroups = (id, delete_trial_lessons, setLoading, free_day_for_teacher) => {\n    setLoading(true)\n    axios({\n        method: \"DELETE\",\n        url: `${Url}/CRM/Groups/${id}`,\n        headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\",\n            Authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n        },\n    })\n        .then(() => {\n            delete_trial_lessons(id)\n            free_day_for_teacher()\n        })\n        .catch(error => {\n            errorHandler(() => deleteGroups(id, delete_trial_lessons, setLoading), error, () => setLoading(false))\n        })\n}\n\nconst setLessonPassed = (checked, group_id, schedule, group, change_trial_lessons) => {\n    let new_schedule = [{\n        ...schedule[0],\n        status: checked ? 2 : 3,\n        title: group.pupils[0].localSchedule[group_id][0].title\n    }]\n    change_trial_lessons({\n        ...group,\n        global_schedule: new_schedule\n    })\n    change_global_schedule(group_id, new_schedule)\n        .catch(error => {\n            errorHandler(() => setLessonPassed(checked, group_id, schedule), error, () => {\n                change_trial_lessons(group)\n            })\n        })\n}\n\nexport {\n    getTrialLessons,\n    setLessonPassed,\n    deleteGroups,\n    change_global_schedule,\n    commentingOnGroup,\n    setNotes\n}","import React, {useState} from \"react\";\nimport {Button} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {free_day_for_teacher} from \"../../../actions\";\n\nconst TrialLessonScheduleButton_delete = ({setFnc, free_day_for_teacher}) => {\n    const [loading, setLoading] = useState(false)\n    return (\n        <Button\n            danger\n            loading={loading}\n            onClick={() => setFnc(setLoading, free_day_for_teacher)}\n        >\n            Удалить\n        </Button>\n    )\n}\n\nconst mapDispatchToProps = {\n    free_day_for_teacher\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(TrialLessonScheduleButton_delete)","import React, {useState} from 'react'\nimport {Button, Input} from 'antd'\nimport {commentingOnGroup, setNotes} from './trial-lesson-schedule.logics'\n\nconst TrialLessonScheduleComments = ({data, change_trial_lessons}) => {\n    const [value, setValue] = useState(\n        data.pupils[0] ? data.pupils[0].localSchedule[data._id][0].title : ''\n    )\n    const [loading, setLoading] = useState(false)\n    return (\n        <div className={'trial-lesson-schedule-comments'}>\n            <Input.TextArea\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n            />\n            <Button\n                loading={loading}\n                onClick={() => {\n                    commentingOnGroup(\n                        value,\n                        data,\n                        change_trial_lessons,\n                        setNotes,\n                        setLoading\n                    )\n                }}\n            >\n                Сохранить\n            </Button>\n        </div>\n    )\n}\n\nexport default TrialLessonScheduleComments\n","import React, {useEffect, useState} from \"react\";\nimport {Checkbox, List, Skeleton, Space, Table} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {change_trial_lessons, delete_trial_lessons, install_trial_lessons} from \"../../../actions\";\nimport {deleteGroups, getTrialLessons, setLessonPassed} from \"./trial-lesson-schedule.logics\";\nimport TrialLessonScheduleDelete from \"./trial-lesson-schedule-button_delete\";\nimport moment from \"moment\";\nimport TrialLessonScheduleComments from \"./trial-lesson-schedule-comments\";\n\nconst TrialLessonSchedule = ({\n                                 trial_lessons,\n                                 change_trial_lessons,\n                                 install_trial_lessons,\n                                 delete_trial_lessons,\n                                 selected_subject\n                             }) => {\n\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        getTrialLessons(setLoading, install_trial_lessons)\n    }, [])\n\n    const dataSource = trial_lessons.map(group => {\n        const start = group.global_schedule[0].duration[0].substr(0, 2)\n        let day = moment(group.global_schedule[0].date, 'DD.MM.YYYY').locale('en').format('dddd').substr(0, 2)\n\n        return {\n            ...group,\n            group,\n            key: group._id,\n            delete_group: {\n                tutor: group.tutor,\n                hour: `hour${start[0] === '0' ? start[1] : start}`,\n                day,\n                _id: group._id\n            },\n            group_name: {\n                name: group.group_name,\n                id: group._id\n            },\n            comment: {\n                pupils: group.pupils,\n                group_id: group._id\n            }\n        }\n    })\n\n    const columns = [\n        {\n            title: 'Урок пройден',\n            dataIndex: 'group',\n            key: 'group',\n            render: (group) => {\n                let checked = group.global_schedule[0].status === 2\n                return (\n                    <Checkbox\n                        loading={true}\n                        checked={checked}\n                        onChange={e => {\n                            setLessonPassed(e.target.checked, group._id, group.global_schedule, group, change_trial_lessons)\n                        }}\n                    />\n                )\n            }\n        },\n        {\n            title: 'Название',\n            dataIndex: 'group_name',\n            key: 'group_name',\n            render: group_name => (\n                <Link to={`/group/${group_name.id}`}>\n                    {group_name.name}\n                </Link>\n            )\n        },\n        {\n            title: 'Ученики',\n            dataIndex: 'pupils',\n            key: 'pupils',\n            render: (pupils) => (\n                <List size={'small'}>\n                    {\n                        pupils.map(pupil => {\n                            const {surname, name, midname, _id} = pupil\n                            return (\n                                <List.Item key={_id}>\n                                    <Link to={`/student/${_id}`}>\n                                        {`${surname} ${name} ${midname}`}\n                                    </Link>\n                                </List.Item>\n                            )\n                        })\n                    }\n                </List>\n            )\n        },\n        {\n            title: 'Учитель',\n            dataIndex: 'tutor',\n            key: 'tutor',\n            render: (tutor) => {\n                const {surname, name, midname} = tutor\n                return `${surname} ${name} ${midname}`\n            }\n        },\n        {\n            title: 'Дата урока',\n            dataIndex: 'global_schedule',\n            key: 'global_schedule',\n            render: (global_schedule) => {\n                const {date, duration} = global_schedule[0]\n                return `${date}г., с ${duration[0]} до ${duration[1]}`\n            }\n        },\n        {\n            title: 'Комментарии',\n            dataIndex: 'group',\n            key: 'comment',\n            render: (group) => (\n                <TrialLessonScheduleComments data={group} change_trial_lessons={change_trial_lessons}/>\n            )\n        },\n        {\n            title: 'Удаление групп',\n            dataIndex: 'delete_group',\n            key: 'delete_group',\n            render: delete_group => (\n                <TrialLessonScheduleDelete setFnc={(setLoading, free_day_for_teacher) => {\n                    deleteGroups(delete_group._id, delete_trial_lessons, setLoading, () => {\n                        if (selected_subject === delete_group.tutor.subject) {\n                            free_day_for_teacher(delete_group.hour, delete_group.day, delete_group.tutor)\n                        }\n                    })\n                }}/>\n            )\n        }\n    ];\n\n    const skeleton = (\n        <Space className={'trial-lesson-schedule-skeleton'}>\n            <Skeleton.Button key={'0'} active={true} size={'large'} block={true}/>\n            <Skeleton.Button key={'1'} active={true} size={'large'} block={true}/>\n            <Skeleton.Button key={'2'} active={true} size={'large'} block={true}/>\n            <Skeleton.Button key={'3'} active={true} size={'large'} block={true}/>\n        </Space>\n    )\n    const table = (\n        <Table\n            className={'trial-lesson-schedule'}\n            dataSource={dataSource}\n            columns={columns}\n        />\n    )\n\n    return (\n        <>\n            {loading ? skeleton : table}\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    trial_lessons: state.trial_lessons,\n    selected_subject: state.selected_subject\n})\nconst mapDispatchToProps = {\n    change_trial_lessons,\n    install_trial_lessons,\n    delete_trial_lessons\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrialLessonSchedule)","import styled from \"@emotion/styled\";\n\nconst CreateTrialLessonStyle = styled.div`\n  margin-bottom: 16px;\n\n  .select {\n    margin-bottom: 16px;\n  }\n\n  .week-and-pupils {\n    display: flex;\n  }\n\n  .selection-students {\n    margin-left: 8px;\n    flex: 1;\n  }\n\n  table {\n    margin-right: 8px;\n  }\n\n  .none-table {\n    opacity: 0.2;\n  }\n\n  .chosen_teacher {\n    margin-top: 16px;\n\n    td {\n      background: #002140;\n      color: #fff;\n    }\n\n    .date {\n      .anticon-double-left {\n        position: relative;\n        top: -1px;\n        color: #1890ff;\n        font-size: 19px;\n        cursor: pointer;\n        margin-right: 8px;\n      }\n      .anticon-double-right {\n        position: relative;\n        top: -1px;\n        color: #1890ff;\n        font-size: 19px;\n        cursor: pointer;\n        margin-left: 8px;\n      }\n    }\n  }\n`\n\nconst Table = styled.table`\n  user-select: none;\n  width: 70%;\n\n  tr {\n    border-bottom: 1px solid #002140;\n  }\n\n  .week {\n    td {\n      text-align: left;\n      background: #001529;\n      color: #fff;\n      border-right: 1px solid #002140;\n    }\n\n    .white {\n      background: #f0f2f5;\n    }\n  }\n\n  .time {\n    background: #001529;\n    color: #fff;\n  }\n\n  td {\n    padding: 10px;\n    width: 12.5%;\n    height: 50px;\n    text-align: right;\n  }\n\n  .td {\n    padding: 0;\n    border-right: 1px solid #002140;\n\n    .ant-list-item {\n      padding: 0 7px;\n      display: flex;\n    }\n\n    .item-span {\n      width: 6px;\n      height: 6px;\n      background: #52c41a;\n      border-radius: 50%;\n      margin-right: 2px;\n    }\n  }\n`\n\nexport {\n    CreateTrialLessonStyle,\n    Table\n}","import React from \"react\";\nimport {Swalclose, Toast} from \"../../../alert/alert\";\nimport {\n    set_chosen_teacher,\n    set_local_week,\n    set_subject_teachers,\n    set_trial_lesson_day,\n    specify_loading,\n    when_choosing_subject\n} from \"../../../actions\";\nimport {List, Select} from \"antd\";\nimport axios from \"axios\";\nimport errorHandler from \"../../error-handler/error-handler\";\nimport Url from \"../../../url/url\";\nimport {getGroup_Id} from \"../../home-page/group/group-page/group-page.logics\";\nimport moment from \"moment\";\n\nconst mapStateToProps = (state) => ({\n    subjects: state.all_disciplines,\n    selected_subject: state.selected_subject,\n    loading: state.loading,\n    subject_teachers: state.subject_teachers,\n    week: state.local_week,\n    chosen_teacher: state.chosen_teacher\n})\nconst mapDispathToProps = {\n    when_choosing_subject,\n    specify_loading,\n    set_subject_teachers,\n    set_local_week,\n    set_chosen_teacher,\n    set_trial_lesson_day\n}\n\nlet week_initial = {\n    hour8: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour9: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour10: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour11: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour12: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour13: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour14: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour15: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour16: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour17: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour18: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour19: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour20: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n    hour21: {\n        Mo: {\n            free: true,\n            tutors: []\n        },\n        Tu: {\n            free: true,\n            tutors: []\n        },\n        We: {\n            free: true,\n            tutors: []\n        },\n        Th: {\n            free: true,\n            tutors: []\n        },\n        Fr: {\n            free: true,\n            tutors: []\n        },\n        Sa: {\n            free: true,\n            tutors: []\n        },\n        Su: {\n            free: true,\n            tutors: []\n        }\n    },\n}\n\nlet initial_work_time = {\n    hour8: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour9: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour10: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour11: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour12: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour13: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour14: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour15: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour16: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour17: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour18: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour19: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour20: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n    hour21: {\n        Mo: false,\n        Tu: false,\n        We: false,\n        Th: false,\n        Fr: false,\n        Sa: false,\n        Su: false\n    },\n}\n\nconst planning_week = async (tutors, setWeek, setLoading) => {\n\n    let localWeek = JSON.parse(JSON.stringify(week_initial)),\n        groupNumber = 0,\n        numberOfGroups = 0\n\n    if (tutors.length === 0) {\n        setWeek(localWeek)\n        setLoading(false)\n    }\n\n    tutors.forEach((tutor) => {\n        const {groups} = tutor\n\n        let group_schedule = [], // Расписание групп учителя.\n            Start = '', // Время\n            End = '',\n            difference = '',\n            work_time = tutor.workHours ? tutor.workHours : JSON.parse(JSON.stringify(initial_work_time))  // JSON.parse(JSON.stringify(week_initial)) // tutor.workHours ? tutor.workHours : undefined\n\n        if (groups.length === 0) {\n            groupNumber += 1\n            getDaysOfWeek([], -1)\n        }\n\n        const addNumderGroup = () => {\n            groupNumber += 1\n        }\n\n        groups.forEach((group_id, i) => {\n            numberOfGroups += 1\n            getGroup_Id(\n                data => {\n                    group_schedule = data.global_schedule.filter((day, i) => i < 7)\n                    const {duration} = data.global_schedule[0]\n                    const start = duration[0].substr(0, 2),\n                        end = duration[1].substr(0, 2)\n                    Start = start[0] === '0' ? start[1] : start\n                    End = end[0] === '0' ? end[1] : end\n                    difference = +End - +Start\n                    addNumderGroup()\n                    getDaysOfWeek(group_schedule, i)\n                },\n                group_id,\n                () => {\n                    addNumderGroup()\n                    getDaysOfWeek([], -1)\n                },\n                false\n            )\n        })\n\n        function getDaysOfWeek(group_schedule) {\n\n            let DaysOfWeek = [['понедельник', 'Mo'], ['вторник', 'Tu'], ['среда', 'We'], ['четверг', 'Th'], ['пятница', 'Fr'], ['суббота', 'Sa'], ['воскресенье', 'Su']],\n                trash = []\n\n            group_schedule.forEach(day => {\n                trash.push(moment(day.date, 'DD.MM.YYYY').format('dddd'))\n            })\n\n            trash.forEach(t => {\n                DaysOfWeek.forEach(day => {\n\n                    if (t === day[0]) {\n                        if (difference === 0) {\n                            work_time[`hour${Start}`][day[1]] = false\n                        } else {\n                            for (let i = 0; i < difference; ++i) {\n                                work_time[`hour${+Start + i}`][day[1]] = false\n                            }\n                        }\n                    }\n                })\n            })\n\n            DaysOfWeek.forEach(day => {\n                ['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21'].forEach(time => {\n                    let permitted = work_time[`hour${time}`][day[1]]\n                    if (permitted === true) {\n                        localWeek[`hour${time}`][day[1]].tutors.push(tutor)\n                        let box = [...localWeek[`hour${time}`][day[1]].tutors]\n                        localWeek[`hour${time}`][day[1]].tutors = box.reduce(\n                            (unique, box) =>\n                                unique.indexOf(box) !== -1 ? unique : [...unique, box],\n                            []\n                        );\n                    } else {\n                        localWeek[`hour${time}`][day[1]].tutors = localWeek[`hour${time}`][day[1]].tutors.filter(tut => tut._id !== tutor._id)\n                    }\n                })\n            })\n            if (groupNumber >= numberOfGroups) {\n                setWeek(localWeek)\n                setLoading(false)\n            }\n        }\n    })\n}\n\nconst get_subject_teachers = (setVariable, selected_subject, specify_loading, week, set) => {\n    if (selected_subject) {\n        specify_loading(true)\n\n        axios({\n            method: 'get',\n            url: `${Url}/CRM/Teachers?limit=100&offset=${0}&subject=${selected_subject}`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n            }\n        })\n            .then(res => {\n                let {data} = res\n                setVariable(data)\n                set(data)\n            })\n            .catch(error => errorHandler(\n                () => get_subject_teachers(setVariable, selected_subject, specify_loading),\n                error,\n                () => specify_loading(false)\n            ))\n    } else {\n        specify_loading(false)\n    }\n}\n\nconst next_day = (day_name, todayDate = '', status = 1) => {\n    let nextDay = null\n    switch (day_name) {\n        case 'Mo':\n            nextDay = 1\n            break\n        case 'Tu':\n            nextDay = 2\n            break\n        case 'We':\n            nextDay = 3\n            break\n        case 'Th':\n            nextDay = 4\n            break\n        case 'Fr':\n            nextDay = 5\n            break\n        case 'Sa':\n            nextDay = 6\n            break\n        case 'Su':\n            nextDay = 0\n            break\n    }\n    let current = todayDate ? moment(todayDate, 'DD.MM.YYYY') : moment()\n    let currentDay = current.day();\n    if (nextDay <= currentDay)\n        if (status)\n            nextDay += 7;\n        else\n            nextDay -= 7;\n    return current.day(nextDay).format('DD.MM.YYYY')\n}\n\nconst scheduling = (Time, obj, title, name, set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day) => {\n\n    let time = name\n\n    for (let index in obj) {\n        Time.push(\n            <td className={'td'}\n                key={`${index}${obj}`}\n                style={{background: obj[index].tutors[0] ? '#fff' : 'rgb(166 173 180)'}}\n            >\n                <List\n                    className={obj[index].tutors[0] ? '' : 'displayNone'}\n                    size={`small`}>\n                    {obj[index].tutors.map(tutor => {\n                        const {surname, name, midname, _id} = tutor\n\n                        let nextDay = next_day(index)\n\n                        return (\n                            <List.Item\n                                key={_id}\n                                onClick={() => {\n                                    set_chosen_teacher({tutor, time, index})\n                                    set_trial_lesson_day(nextDay)\n                                }}\n                                style={{\n                                    background: (chosen_teacher.tutor._id === _id && chosen_teacher.time === time && chosen_teacher.index === index) ? 'aquamarine' : '#fff'\n                                }}\n                            >\n                                <div className={'item-span'}/>\n                                {`${name[0]}.${midname[0]}.${surname}`}\n                            </List.Item>\n                        )\n                    })}\n                </List>\n            </td>\n        )\n    }\n    return (\n        <tr>\n            <td className={'time'}>{name}</td>\n            {Time}\n        </tr>\n    )\n}\n\nconst info_window = (selected_subject) => {\n    if (!selected_subject) {\n        Toast.fire({\n            icon: 'info',\n            title: 'Чтобы создать пробный урок, выберете дисциплину для изучения!',\n            text: '(Нажми, что бы скрыть уведомление)',\n            timer: null,\n            position: 'top'\n        });\n    } else {\n        Swalclose()\n    }\n}\n\nconst {Option} = Select\nconst funOptionSubjects = (subjects) => {\n    return subjects.map(subject => (\n        <Option key={subject} value={subject}>{subject}</Option>\n    ))\n}\n\nexport {\n    week_initial,\n    get_subject_teachers,\n    scheduling,\n    info_window,\n    mapStateToProps,\n    mapDispathToProps,\n    funOptionSubjects,\n    planning_week,\n    next_day\n}","import styled from \"@emotion/styled\";\n\nconst SelectionStudentsStyle = styled.div`\n  background: #fff;\n\n  .find-students-for-trial-lesson {\n    background: #fff;\n\n    .Button {\n      width: 100%;\n      color: #000;\n      text-transform: none;\n    }\n\n    .MuiListItem-root {\n      border-bottom: 1px solid #f0f0f0;\n    }\n  }\n\n  .list-students-for-trial-lesson {\n    margin-top: 16px;\n    background: #fff;\n    border-top: 1px solid rgb(82, 196, 26);\n\n    .item {\n      padding: 8px 16px;\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n\n      .delete {\n        width: 14px;\n      }\n\n      .title {\n        padding: 0 10px;\n        word-wrap: break-word;\n        width: 100%\n      }\n\n      & > div {\n        margin: auto 0;\n      }\n    }\n  }\n`\n\nexport {\n    SelectionStudentsStyle\n}","import {add_pupil_to_trial_lesson} from \"../../../../actions\";\n\nconst mapStateToProps = state => ({\n    students_for_trial_lesson: state.students_for_trial_lesson\n})\n\nconst mapDispatchToProps = {\n    add_pupil_to_trial_lesson\n}\n\nconst addPupil = (pupil, setValue = () => {\n}, pupils, add_pupil_to_trial_lesson) => {\n    let permitted = true\n    pupils.forEach(item => {\n        if (item.id === pupil.id) {\n            permitted = false\n        }\n    })\n    if (permitted) {\n        add_pupil_to_trial_lesson(pupil)\n        setValue()\n    }\n}\n\nexport {\n    addPupil,\n    mapStateToProps,\n    mapDispatchToProps\n}","import React, {useState} from \"react\";\nimport {Input, List} from \"antd\";\nimport {serverRequest} from \"../../../search/server-request\";\nimport {Button, ListItem, ListItemButton, ListItemText} from \"@mui/material\";\nimport {connect} from \"react-redux\";\nimport {addPupil, mapDispatchToProps, mapStateToProps} from \"./find-students-for-trial-lesson.logics\";\n\nconst FindStudentsForTrialLesson = ({students_for_trial_lesson, add_pupil_to_trial_lesson}) => {\n\n    const [allPupils, setAllPupils] = useState([])\n    const [value, setValue] = useState('')\n\n    return (\n        <div className={'find-students-for-trial-lesson'}>\n            <div>\n                <Input\n                    value={value}\n                    onChange={e => {\n                        if (e.target.value) {\n                            serverRequest(\n                                data => {\n                                    const pupils = data.map(item => {\n                                        const {_index, _source} = item\n                                        if (_index === 'pupils') {\n                                            return _source\n                                        }\n                                    })\n                                    setAllPupils(pupils.filter(item => item))\n                                },\n                                encodeURI(e.target.value)\n                            )\n                        }\n                        setValue(e.target.value)\n                    }}\n                    placeholder=\"Подбери учеников для урока\"\n                />\n            </div>\n            <List\n                size=\"large\"\n                bordered\n                dataSource={allPupils}\n                renderItem={pupil => {\n                    const {name, surname, midname, id} = pupil\n                    let textDecoration = ''\n                    students_for_trial_lesson.forEach(item => {\n                        if (item.id === id) {\n                            textDecoration = 'line-through'\n                        }\n                    })\n                    return (\n                        <ListItem\n                            key={id}\n                            disablePadding\n                        >\n                            <Button className={'Button'} disabled={!!textDecoration}>\n                                <ListItemButton onClick={() => {\n                                    addPupil(pupil, () => setValue(''), students_for_trial_lesson, add_pupil_to_trial_lesson)\n                                }} dense>\n                                    <ListItemText style={{textDecoration}} id={id}\n                                                  primary={[surname, name, midname].join(' ')}/>\n                                </ListItemButton>\n                            </Button>\n                        </ListItem>\n                    )\n                }}\n            />\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FindStudentsForTrialLesson)","import {delete_pupil_to_trial_lesson} from \"../../../../actions\";\n\nconst mapStateToProps = state => ({\n    students_for_trial_lesson: state.students_for_trial_lesson\n})\nconst mapDispathToProps = {\n    delete_pupil_to_trial_lesson\n}\n\nexport {\n    mapStateToProps,\n    mapDispathToProps\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {List} from \"antd\";\nimport {DeleteOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\";\nimport {mapDispathToProps, mapStateToProps} from \"./list-students-for-trial-lesson.logics\";\n\nconst ListStudentsForTrialLesson = ({students_for_trial_lesson, delete_pupil_to_trial_lesson}) => {\n    return (\n        <div className={'list-students-for-trial-lesson'}>\n            <List\n                size=\"large\"\n                bordered\n                dataSource={students_for_trial_lesson}\n                renderItem={item => {\n                    const {surname, name, midname, id} = item\n                    return (\n                        <List.Item\n                            style={{\n                                padding: 0\n                            }}\n                        >\n                            <div className={'item'}>\n                                <div className={'title'}>\n                                    <Link to={`/student/${id}`}>\n                                        {[surname, name, midname].join(' ')}\n                                    </Link>\n                                </div>\n                                <div className={'delete'}>\n                                    <DeleteOutlined\n                                        onClick={() => delete_pupil_to_trial_lesson(id)}\n                                        style={{color: 'red'}}\n                                    />\n                                </div>\n                            </div>\n                        </List.Item>\n                    )\n                }}\n            />\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(ListStudentsForTrialLesson)","import React from \"react\";\nimport {SelectionStudentsStyle} from \"./selection-students.style\";\nimport FindStudentsForTrialLesson from \"./find-students-for-trial-lesson/find-students-for-trial-lesson\";\nimport ListStudentsForTrialLesson from \"./list-students-for-trial-lesson/list-students-for-trial-lesson\";\n\nconst SelectionStudents = () => {\n    return (\n        <SelectionStudentsStyle>\n            <FindStudentsForTrialLesson/>\n            <ListStudentsForTrialLesson/>\n        </SelectionStudentsStyle>\n    )\n}\n\nexport default SelectionStudents","import React from \"react\";\nimport {Descriptions} from \"antd\";\nimport {connect} from \"react-redux\";\nimport moment from \"moment\";\nimport {DoubleLeftOutlined, DoubleRightOutlined} from '@ant-design/icons'\nimport {set_trial_lesson_day} from \"../../../actions\";\nimport {next_day} from '../create-trial-lesson/create-trial-lesson.logics'\n\nconst LeadTeacher = ({date, tutor, set_trial_lesson_day}) => {\n\n    const {surname, name, midname} = tutor.tutor\n\n    const setData = status => {\n        let day_name = (moment(date, 'DD.MM.YYYY').lang('en').format('dd'))\n        set_trial_lesson_day(next_day(day_name, date, status))\n    }\n\n    return (\n        <div className={'chosen_teacher'}>\n            <Descriptions\n                bordered\n                size={'small'}\n                column={1}\n            >\n                <Descriptions.Item label=\"Учитель\">\n                    {`${surname} ${name} ${midname}`}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Дата урока\" className={'date'}>\n                    {date ? (\n                        <>\n                            <DoubleLeftOutlined\n                                onClick={() => setData(0)}\n                            />\n                            {date ? moment(date, 'DD.MM.YYYY').format('DD - MMMM - YYYY') : ''}\n                            <DoubleRightOutlined\n                                onClick={() => setData(1)}\n                            />\n                        </>\n                    ) : ''}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Начало урока\">\n                    {`${tutor.time ? 'в' : ''} ${tutor.time}`}\n                </Descriptions.Item>\n            </Descriptions>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    date: state.trial_lesson_day,\n    tutor: state.chosen_teacher\n})\nconst mapDispatchToProps = {\n    set_trial_lesson_day\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeadTeacher)","import React, {useState} from \"react\";\nimport {Button} from \"antd\";\nimport {connect} from \"react-redux\";\nimport moment from 'moment'\nimport axios from \"axios\";\nimport Url from \"../../../url/url\";\nimport errorHandler from \"../../error-handler/error-handler\";\nimport {add_trial_lessons, clear_pupil_to_trial_lesson} from \"../../../actions\";\nimport {swallGood} from \"../../../alert/alert\";\n\nconst ButtonCreateTrialLesson = ({\n                                     pupils_id,\n                                     date,\n                                     tutor,\n                                     StartTime,\n                                     EndTime,\n                                     subject,\n                                     add_trial_lessons,\n                                     updateTeachers,\n                                     clear_pupil_to_trial_lesson\n                                 }) => {\n\n    const [loading, setLoading] = useState(false)\n\n    const CreateTrialLesson = () => {\n        if (date && tutor._id && pupils_id.length && subject) {\n            setLoading(true)\n\n            axios({\n                method: \"POST\",\n                url: `${Url}/CRM/Groups`,\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    Authorization: `Bearer ${localStorage.getItem(\"tokenID\")}`,\n                },\n                data: {\n                    group_name: `Пробный урок: ${subject}`,\n                    tutor: tutor._id,\n                    level: 1,\n                    places: pupils_id.length,\n                    pupils: pupils_id,\n                    trial: true,\n                    global_schedule: [{duration: [StartTime, EndTime], status: 2, date, paid: false}]\n                }\n            })\n                .then(res => {\n                    setLoading(false)\n                    add_trial_lessons(res.data)\n                    swallGood('Пробный урок успешно создан!')\n                    updateTeachers()\n                    clear_pupil_to_trial_lesson()\n                })\n                .catch(error => {\n                    errorHandler(CreateTrialLesson, error, () => {\n                        setLoading(false)\n                        clear_pupil_to_trial_lesson()\n                    })\n                })\n        }\n    }\n\n    return (\n        <Button\n            style={{\n                marginTop: '16px'\n            }}\n            type={'primary'}\n            loading={loading}\n            onClick={CreateTrialLesson}\n        >\n            Создать урок\n        </Button>\n    )\n}\n\nconst mapStateToProps = state => ({\n    tutor: state.chosen_teacher.tutor,\n    StartTime: state.chosen_teacher.time,\n    EndTime: `${moment(state.chosen_teacher.time, 'HH').add(1, 'h').format(\"HH\")}:00`,\n    date: state.trial_lesson_day,\n    pupils_id: state.students_for_trial_lesson.map(pupil => pupil.id),\n    subject: state.selected_subject\n})\nconst mapDispatchToProps = {\n    add_trial_lessons,\n    clear_pupil_to_trial_lesson\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonCreateTrialLesson)","import React, {useEffect} from \"react\";\nimport {Select, Skeleton} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {CreateTrialLessonStyle, Table} from \"./create-trial-lesson.style\";\nimport {\n    funOptionSubjects,\n    get_subject_teachers,\n    info_window,\n    mapDispathToProps,\n    mapStateToProps,\n    next_day,\n    planning_week,\n    scheduling\n} from \"./create-trial-lesson.logics\";\nimport SelectionStudents from \"../selection-students/selection-students\";\nimport {Swalclose} from \"../../../alert/alert\";\nimport LeadTeacher from \"../lead_teacher/lead_teacher\";\nimport ButtonCreateTrialLesson from \"../button_create_trial_lesson/button_create_trial_lesson\";\n\n\nconst CreateTrialLesson = (\n    {\n        subjects,\n        when_choosing_subject,\n        selected_subject,\n        specify_loading,\n        loading,\n        set_subject_teachers,\n        week,\n        set_local_week,\n        set_chosen_teacher,\n        chosen_teacher,\n        set_trial_lesson_day\n    }\n) => {\n\n    const {\n        hour8,\n        hour9,\n        hour10,\n        hour11,\n        hour12,\n        hour13,\n        hour14,\n        hour15,\n        hour16,\n        hour17,\n        hour18,\n        hour19,\n        hour20,\n        hour21\n    } = week\n\n    let Time8 = [],\n        Time9 = [],\n        Time10 = [],\n        Time11 = [],\n        Time12 = [],\n        Time13 = [],\n        Time14 = [],\n        Time15 = [],\n        Time16 = [],\n        Time17 = [],\n        Time18 = [],\n        Time19 = [],\n        Time20 = [],\n        Time21 = []\n\n    useEffect(() => {\n        info_window(selected_subject)\n\n        return function () {\n            Swalclose()\n        }\n\n    }, [selected_subject])\n\n\n    const settingsTable = (\n        <Table>\n            <tbody>\n            <tr className={'week'}>\n                <td className={'white'}/>\n                {['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'].map(day => <td key={day}>{day}</td>)}\n            </tr>\n            {scheduling(Time8, hour8, 'hour8', '08:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time9, hour9, 'hour9', '09:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time10, hour10, 'hour10', '10:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time11, hour11, 'hour11', '11:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time12, hour12, 'hour12', '12:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time13, hour13, 'hour13', '13:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time14, hour14, 'hour14', '14:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time15, hour15, 'hour15', '15:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time16, hour16, 'hour16', '16:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time17, hour17, 'hour17', '17:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time18, hour18, 'hour18', '18:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time19, hour19, 'hour19', '19:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time20, hour20, 'hour20', '20:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            {scheduling(Time21, hour21, 'hour21', '21:00', set_chosen_teacher, chosen_teacher, set_trial_lesson_day, next_day)}\n            </tbody>\n        </Table>\n    )\n    const skeleton = (\n        <>\n            <br/>\n            {[1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19].map(key => (\n                <Skeleton.Button\n                    style={{\n                        marginRight: '8px',\n                        marginBottom: '8px',\n                        width: '50px',\n                        height: '675px'\n                    }}\n                    key={key}\n                    active\n                />\n            ))}\n        </>\n    )\n\n    return (\n        <CreateTrialLessonStyle>\n            <Select\n                defaultValue={selected_subject}\n                placeholder=\"Что хочет изучить клиент?\"\n                allowClear\n                className={'select'}\n                onChange={value => {\n                    when_choosing_subject(value)\n                    get_subject_teachers(\n                        set_subject_teachers,\n                        value,\n                        specify_loading,\n                        week,\n                        (subject_teachers) => {\n                            planning_week(subject_teachers, set_local_week, specify_loading)\n                        }\n                    )\n                    set_chosen_teacher({tutor: {_id: '', surname: '', name: '', midname: ''}, time: '', index: ''})\n                    set_trial_lesson_day('')\n                }}\n            >\n                {funOptionSubjects(subjects)}\n            </Select>\n            <div className={`week-and-pupils ${selected_subject ? '' : 'none-table'}`}>\n                {loading ? skeleton : settingsTable}\n                <div className=\"selection-students\">\n                    <SelectionStudents/>\n                    <LeadTeacher/>\n                    <ButtonCreateTrialLesson updateTeachers={() => {\n                        get_subject_teachers(\n                            set_subject_teachers,\n                            selected_subject,\n                            specify_loading,\n                            week,\n                            (subject_teachers) => {\n                                planning_week(subject_teachers, set_local_week, specify_loading)\n                            }\n                        )\n                        set_chosen_teacher({tutor: {_id: '', surname: '', name: '', midname: ''}, time: '', index: ''})\n                        set_trial_lesson_day('')\n                    }}/>\n                </div>\n            </div>\n        </CreateTrialLessonStyle>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(CreateTrialLesson)","import React from \"react\";\nimport {TrialLessonsStyle} from \"./trial-lessons.style\";\nimport {Breadcrumb} from \"antd\";\nimport TrialLessonSchedule from \"./trial-lesson-schedule/trial-lesson-schedule\";\nimport CreateTrialLesson from \"./create-trial-lesson/create-trial-lesson\";\n\nconst TrialLessons = () => {\n\n    return (\n        <TrialLessonsStyle>\n            <Breadcrumb style={{margin: '0 0 16px 0'}}>\n                <Breadcrumb.Item>Главная</Breadcrumb.Item>\n                <Breadcrumb.Item>Пробные уроки</Breadcrumb.Item>\n            </Breadcrumb>\n            <CreateTrialLesson/>\n            <TrialLessonSchedule/>\n        </TrialLessonsStyle>\n    )\n}\n\nexport default TrialLessons\n","import React, {useEffect, useRef, useState} from 'react'\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom'\n\nimport {Layout, Menu} from 'antd'\nimport {\n    CarryOutOutlined,\n    DatabaseOutlined,\n    FunnelPlotOutlined,\n    LikeOutlined,\n    LogoutOutlined,\n    SearchOutlined,\n    TeamOutlined,\n    UploadOutlined,\n    UserOutlined,\n} from '@ant-design/icons'\n\nimport SearchAll from './../search/search.js'\n\nimport Student from './student/student.js'\nimport StudentPage from './student/pageStudent/pageStudent.js'\n\nimport Group from './group/group.js'\nimport GroupPage from './group/group-page/group-page.js'\n\nimport UploadPupils from './upload-pupils/upload-pupils'\n// Сводные таблицы\nimport Create_Columns_Rows_Groups from './#more-functions/сreate-columns-and-rows/сreate-columns-rows-groups.js'\nimport Create_Columns_Rows_Pupils from './#more-functions/сreate-columns-and-rows/сreate-columns-rows-pupils.js'\n\nimport styled from '@emotion/styled'\nimport {SuspenseComponent} from '../../hocs/SuspenseComponent'\nimport TrialLessons from '../trial-lessons/trial-lessons'\nimport {connect} from 'react-redux'\nimport {default_drop_down_menu_index} from '../../actions'\n\nconst SalesFunnel = React.lazy(() => import('./sales-funnel/sales-funnel'))\nconst SuspenseSalesFunnel = SuspenseComponent(\n    <div>Loading SalesFunnel...</div>,\n    SalesFunnel\n)\n\nconst TasksPage = React.lazy(() => import('./tasks-page/Tasks'))\nconst SuspenseTasksPage = SuspenseComponent(\n    <div>Loading TasksPage...</div>,\n    TasksPage\n)\n\nconst {Sider} = Layout\nconst {SubMenu} = Menu\n\nconst Box = styled.div({\n    overflow: 'auto',\n})\n\nconst HomePage = ({logOut, default_drop_down_menu_index}) => {\n    const [collapsed, setCollapsed] = useState(false)\n    const ref_window = useRef()\n\n    const onCollapse = (collapsed) => {\n        setCollapsed(collapsed)\n    }\n\n    useEffect(() => {\n        document.querySelector('.ant-layout-sider-trigger').style.width = collapsed\n            ? '80px'\n            : '257px'\n\n        ref_window.current.addEventListener(\n            'click',\n            (e) => {\n                // Hiding the dropdown menu for the schedule\n                if (\n                    e.target.classList[0] !== 'ant-dropdown-trigger' &&\n                    e.target.classList[0] !== 'ant-dropdown-trigger-span'\n                ) {\n                    default_drop_down_menu_index()\n                }\n            },\n            false\n        )\n    })\n\n    const Vag = styled.div({\n        '.ant-menu': {\n            height: '100vh',\n            position: 'relative',\n            width: collapsed ? '80px' : '257px',\n        },\n        '.vag123': {\n            position: 'absolute',\n            bottom: '48px',\n            width: collapsed ? '80px' : '',\n        },\n        '.site-layout': {\n            padding: '15px',\n        },\n        '& > section': {\n            '& > aside': {\n                position: 'fixed',\n                zIndex: 99,\n            },\n            '& > section': {\n                marginLeft: collapsed ? '80px' : '257px',\n            },\n        },\n    })\n\n    return (\n        <Router>\n            <Vag ref={ref_window}>\n                <Layout style={{minHeight: '100vh'}}>\n                    <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n                        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                            <Menu.Item key=\"Search\" icon={<SearchOutlined/>}>\n                                <SearchAll/>\n                            </Menu.Item>\n                            <Menu.Item\n                                key={'UploadOutlined'}\n                                icon={\n                                    <UploadOutlined\n                                        onClick={() =>\n                                            document.querySelector('.ButtonUpload').click()\n                                        }\n                                    />\n                                }\n                            >\n                                <UploadPupils/>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\" icon={<UserOutlined/>}>\n                                <Link to=\"/student\">Ученики</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"3\" icon={<TeamOutlined/>}>\n                                <Link to=\"/group\">Группы</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"4\" icon={<CarryOutOutlined/>}>\n                                <Link to=\"/tasks\">Задачи</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"5\" icon={<FunnelPlotOutlined/>}>\n                                <Link to=\"/sales-funnel\">Воронка продаж</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"trial-lessons\" icon={<LikeOutlined/>}>\n                                <Link to=\"/trial-lessons\">Пробные уроки</Link>\n                            </Menu.Item>\n                            <SubMenu\n                                key=\"sub1\"\n                                icon={<DatabaseOutlined/>}\n                                title=\"Сводные таблицы\"\n                            >\n                                <Menu.Item key=\"sub-student\">\n                                    <Link to=\"/table-pupils\">Ученики</Link>\n                                </Menu.Item>\n                                <Menu.Item key=\"sub-groups\">\n                                    <Link to=\"/table-groups\">Группы</Link>\n                                </Menu.Item>\n                            </SubMenu>\n                            <Menu.Item\n                                onClick={() => {\n                                    localStorage.removeItem('tokenID')\n                                    logOut()\n                                }}\n                                id=\"LogoutOut\"\n                                key={'Logout'}\n                                className=\"vag123\"\n                                icon={<LogoutOutlined/>}\n                            >\n                                <Link to=\"/\">Выход</Link>\n                            </Menu.Item>\n                        </Menu>\n                    </Sider>\n                    <Layout className=\"site-layout\">\n                        <Switch>\n                            <Route exact path=\"/student\" component={Student}/>\n                            <Route path={`/student/:id`} children={() => <StudentPage/>}/>\n\n                            <Route exact path=\"/group\" component={Group}/>\n                            <Route path={`/group/:id`} children={() => <GroupPage/>}/>\n                            <Route path={'/sales-funnel'} component={SuspenseSalesFunnel}/>\n                            <Route path=\"/tasks\" render={() => <SuspenseTasksPage/>}/>\n                            <Route path=\"/trial-lessons\" component={TrialLessons}/>\n                            {/*Сводные таблицы*/}\n                            <Route\n                                exact\n                                path=\"/table-groups\"\n                                component={() => <Create_Columns_Rows_Groups/>}\n                            />\n\n                            <Route\n                                exact\n                                path=\"/table-pupils\"\n                                component={() => (\n                                    <Box>\n                                        <Create_Columns_Rows_Pupils/>\n                                    </Box>\n                                )}\n                            />\n\n                            <Route path=\"/student/*\">\n                                <h2>Страница не найдена</h2>\n                            </Route>\n                        </Switch>\n                    </Layout>\n                </Layout>\n            </Vag>\n        </Router>\n    )\n}\nconst mapDispathToProps = {\n    default_drop_down_menu_index,\n}\n\nexport default connect(() => {\n}, mapDispathToProps)(HomePage)\n","import Url from './../../../../../../url/url.js'\nimport errorHandler from \"../../../../../error-handler/error-handler\";\n\nconst axios = require(\"axios\");\n\nconst writeComment = (pupil_id, value) => {\n    axios({\n        method: 'post',\n        url: `${Url}/CRM/Pupils/${pupil_id}/Notes`,\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        },\n        data: {\n            text: value\n        }\n    })\n        .catch((error) => {\n            errorHandler(writeComment, error)\n        });\n}\n\nexport default writeComment","import Url from './../../../../../../url/url.js'\nimport errorHandler from '../../../../../error-handler/error-handler.js'\n\nconst axios = require('axios'); // AJAX\n\nconst changeSchedule = (mass, pupil_id, id, getUser) => {\n    axios({\n        method: 'put',\n        url: `${Url}/CRM/Groups/${id}/Pupils/${pupil_id}/Schedule`,\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${localStorage.getItem('tokenID')}`\n        },\n        data: mass\n    })\n        .then((res) => {\n            getUser('Сохранение')\n        })\n        .catch((error) => {\n            errorHandler(changeSchedule, error)\n        });\n}\n\nexport default changeSchedule","import React, {useState} from 'react'\nimport writeComment from './write-сomment/write-comment.js'\nimport changeSchedule from './change-schedule/change-schedule.js'\n\nimport {Button, Input, Table, Tag} from 'antd'\n\nconst {Column, ColumnGroup} = Table\nconst {TextArea} = Input\n\nconst TablePupils = ({ID_Group, Group, getUser}) => {\n    const [GLOBAL_ARR_PUPILS, set_GLOBAL_ARR_DAY] = useState({})\n    const [GLOBAL_ROW_KEY, set_GLOBAL_ROW_KEY] = useState([])\n\n    let ARR_PUPILS = {...GLOBAL_ARR_PUPILS},\n        RowKeys = [...GLOBAL_ROW_KEY]\n\n    const onRowKeys = () => {\n        RowKeys = []\n\n        for (let key in ARR_PUPILS) {\n            if (ARR_PUPILS[key].arr[ID_Group].status == 2) {\n                RowKeys.push(key)\n            }\n        }\n    }\n\n    let Notes = {}\n\n    const onSeveChange = () => {\n        for (let key in ARR_PUPILS) {\n            changeSchedule(ARR_PUPILS[key].arr, key, Group._id, getUser)\n        }\n        for (let key in Notes) {\n            writeComment(key, Notes[key].text)\n        }\n    }\n\n    const data = Group.pupils.map((item, i) => {\n        let {_id, name, surname, midname} = item\n\n        ARR_PUPILS[_id] = {\n            arr: item.localSchedule ? item.localSchedule[Group._id] : [],\n            pupil_id: _id,\n        }\n        onRowKeys()\n\n        let start = ARR_PUPILS[_id].arr[ID_Group].start\n                ? ARR_PUPILS[_id].arr[ID_Group].start\n                : '',\n            finish = ARR_PUPILS[_id].arr[ID_Group].start\n                ? ARR_PUPILS[_id].arr[ID_Group].finish\n                : ''\n\n        const titleProgresStart = (key, text) => {\n            ARR_PUPILS[_id].arr[ID_Group][key] = text\n        }\n\n        const onChangeStatys = (arr) => {\n            if (ARR_PUPILS[_id]) {\n                ARR_PUPILS[_id].arr = arr\n            } else if (!ARR_PUPILS[_id]) {\n                ARR_PUPILS[_id] = {\n                    arr: arr,\n                    pupil_id: _id,\n                }\n            }\n        }\n\n        let changeDayPupil = (index = 3) => {\n            let arr = [...item.localSchedule[Group._id]]\n\n            if ((index == 2) & (arr[ID_Group].status == 3)) {\n                arr[ID_Group].status = index\n\n                onChangeStatys(arr)\n            } else if (index == 3) {\n                arr[ID_Group].status = index\n\n                onChangeStatys(arr)\n            } else if ((index != 3) & (index != 2)) {\n                arr[ID_Group].title = index\n\n                onChangeStatys(arr)\n            } else {\n                // swallError('Не возможно установить статус');\n            }\n        }\n\n        let titlePupil = ''\n        if (Group.pupils[i]) {\n            titlePupil = Group.pupils[i].localSchedule[Group._id][ID_Group].title\n        }\n\n        return {\n            key: _id,\n            name: `${surname} ${name} ${midname}`,\n            title: {\n                text: titlePupil,\n                action: changeDayPupil,\n                addNotes: (value) => {\n                    Notes[_id] = {\n                        text: value,\n                        id: _id,\n                    }\n                },\n            },\n            progres: {\n                start: start,\n                finish: finish,\n                action: titleProgresStart,\n            },\n        }\n    })\n\n    const rowSelection = {\n        selectedRowKeys: RowKeys,\n\n        onChange: () => {\n            set_GLOBAL_ARR_DAY(ARR_PUPILS)\n            set_GLOBAL_ROW_KEY(RowKeys)\n        },\n        onSelect: (e) => {\n            let i,\n                box = ARR_PUPILS[e.key].arr[ID_Group].status\n            if (box == 2) {\n                i = 3\n            } else {\n                i = 2\n            }\n\n            ARR_PUPILS[e.key].arr[ID_Group].status = i\n\n            onRowKeys()\n        },\n        onSelectAll: (e) => {\n            if (e) {\n                for (let key in ARR_PUPILS) {\n                    ARR_PUPILS[key].arr[ID_Group].status = 2\n                }\n            } else if (!e) {\n                for (let key in ARR_PUPILS) {\n                    ARR_PUPILS[key].arr[ID_Group].status = 3\n                }\n            }\n\n            onRowKeys()\n        },\n    }\n\n    return (\n        <>\n            <Table\n                pagination={false}\n                loading={false}\n                rowSelection={rowSelection}\n                scroll={{x: 0}}\n                dataSource={data}\n            >\n                <Column\n                    title=\"Ученик\"\n                    dataIndex=\"name\"\n                    key=\"name\"\n                    render={(name) => <Tag color=\"blue\">{name}</Tag>}\n                />\n                <ColumnGroup title=\"Прогресс\">\n                    <Column\n                        title=\"Коментарии\"\n                        dataIndex=\"title\"\n                        key=\"title\"\n                        render={(title) => (\n                            <TextArea\n                                defaultValue={title.text}\n                                placeholder=\"Коментарий ученику\"\n                                onBlur={(e) => {\n                                    title.action(e.target.value)\n                                    title.addNotes(e.target.value)\n                                }}\n                                autoSize={{minRows: 2, maxRows: 6}}\n                            />\n                        )}\n                    />\n                    <Column\n                        title=\"Начало\"\n                        dataIndex=\"progres\"\n                        key=\"progres\"\n                        render={(progres) => (\n                            <TextArea\n                                defaultValue={progres.start}\n                                placeholder=\"Старт...\"\n                                onBlur={(e) => {\n                                    progres.action('start', e.target.value)\n                                }}\n                                autoSize={{minRows: 2, maxRows: 6}}\n                            />\n                        )}\n                    />\n                    <Column\n                        title=\"Конец\"\n                        dataIndex=\"progres\"\n                        key=\"progres\"\n                        render={(progres) => (\n                            <TextArea\n                                defaultValue={progres.finish}\n                                placeholder=\"Финиш...\"\n                                onBlur={(e) => {\n                                    progres.action('finish', e.target.value)\n                                }}\n                                autoSize={{minRows: 2, maxRows: 6}}\n                            />\n                        )}\n                    />\n                </ColumnGroup>\n            </Table>\n            <div className=\"Button\">\n                <Button onClick={onSeveChange} type=\"primary\">\n                    Сохранить\n                </Button>\n            </div>\n        </>\n    )\n}\n\nexport default TablePupils\n","import React from 'react';\n\n// import {loading, Swalclose} from './../../../../alert/alert.js'\n// import Url from './../../../../url/url.js'\n// import localStorage_change from './../../../../#localStorage_change.js'\nimport TablePupils from './table-pupils/table-pupils.js'\n\nimport {Typography} from 'antd';\n\nimport styled from '@emotion/styled';\n\nconst LessonNowStyle = styled.div({\n    '.time': {\n        'h5, h6': {\n            margin: 0\n        }\n    },\n    '.TablePupils': {\n        marginTop: '15px',\n        '.ant-tag': {\n            fontSize: '13px'\n        },\n        td: {\n            padding: '16px 3px'\n        }\n    },\n    '.Button': {\n        marginTop: '15px',\n        display: 'flex',\n        justifyContent: 'flex-end'\n    }\n})\n\nconst {Text} = Typography;\n\nconst LessonNow = ({rowKey, setRowKey, GROUP, Group, getUser}) => {\n\n    let G = Group\n\n    if (GROUP.group.group_name) {\n        G = GROUP\n    }\n\n    return (\n        <LessonNowStyle className='LessonNow'>\n            <div className='row'>\n                <div className=\"col-md-8\">\n                    <h4><Text type=\"secondary\"> Урок сейчас: </Text> {G.group.group_name} </h4>\n                </div>\n                <div className={`col-md-3 time`}>\n                    <h6><Text type=\"secondary\">Начало</Text></h6>\n                    <h5><Text\n                        type=\"warning\">{G.group.global_schedule[G.indexD].date} в {G.group.global_schedule[0].duration[0]}</Text>\n                    </h5>\n                </div>\n            </div>\n            <div className=\"TablePupils\">\n                <TablePupils rowKey={rowKey} getUser={getUser} ID_Group={G.indexD} setRowKey={setRowKey}\n                             Group={G.group}/>\n            </div>\n        </LessonNowStyle>\n    )\n}\n\nexport default LessonNow","import React from 'react'\n\nimport {Table, Tag} from 'antd'\n\nconst {Column} = Table\n\nconst TableGroups = ({Groups, newGroup, setGROUP, GROUP}) => {\n    const data = Groups.map((item, i) => {\n        let {_id, group_name, global_schedule} = item.group,\n            color = 'cyan'\n\n        if (GROUP.group) {\n            if ((newGroup.group._id == _id) & !GROUP.group.group_name) {\n                color = 'volcano'\n            } else if (_id == GROUP.group._id) {\n                color = 'volcano'\n            }\n        }\n\n        return {\n            key: i,\n            groupName: {\n                group_name: group_name,\n                G: item,\n            },\n            date: {\n                date: `${global_schedule[`${item.indexD}`].date} в ${\n                    global_schedule[0].duration[0]\n                }`,\n                color: color,\n                G: item,\n            },\n        }\n    })\n\n    let pagination = {\n        pageSize: 15,\n    }\n\n    return (\n        <Table\n            pagination={pagination}\n            loading={false}\n            scroll={{x: 0}}\n            dataSource={data}\n        >\n            <Column\n                title=\"Время\"\n                dataIndex=\"date\"\n                key=\"date\"\n                render={(date) => (\n                    <Tag\n                        onClick={() => {\n                            setGROUP(date.G)\n                        }}\n                        style={{cursor: 'pointer'}}\n                        color={date.color}\n                    >\n                        {date.date}\n                    </Tag>\n                )}\n            />\n\n            <Column\n                title=\"Группа\"\n                dataIndex=\"groupName\"\n                key=\"groupName\"\n                render={(groupName) => (\n                    <Tag\n                        onClick={() => {\n                            setGROUP(groupName.G)\n                        }}\n                        style={{cursor: 'pointer'}}\n                        color=\"volcano\"\n                    >\n                        {groupName.group_name}\n                    </Tag>\n                )}\n            />\n        </Table>\n    )\n}\n\nTableGroups.defaultProps = {\n    Groups: [\n        {\n            group_name: '',\n            global_schedule: [{date: '', duration: ['', '']}],\n            pupils: [],\n        },\n    ],\n}\n\nexport default TableGroups\n","import React from 'react'\n\nimport TableGroups from './table-groups/table-groups.js'\n\nimport styled from '@emotion/styled'\n\nconst AllLesson = ({Groups, newGroup, setGROUP, GROUP}) => {\n    let gro = [...Groups]\n\n    const AllLesson = styled.div({\n        padding: '15px',\n        borderRadius: '2px',\n        backgroundColor: '#fff',\n    })\n\n    return (\n        <AllLesson className=\"AllLesson\">\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    <h5>Ближайшие уроки</h5>\n                </div>\n            </div>\n            <div className=\"TableGroups\">\n                <TableGroups\n                    Groups={gro}\n                    newGroup={newGroup}\n                    setGROUP={setGROUP}\n                    GROUP={GROUP}\n                />\n            </div>\n        </AllLesson>\n    )\n}\n\nexport default AllLesson\n","import React from 'react'\nimport {Breadcrumb, Layout} from 'antd'\n\nimport LessonNow from './lesson-now/lesson-now.js'\nimport AllLesson from './all-lesson/all-lesson.js'\n\nimport moment from 'moment'\n\nimport styled from '@emotion/styled'\n\nconst Today = ({rowKey, setRowKey, Groups, GROUP, setGROUP, getUser}) => {\n    let indexHours = {\n            timeN: '',\n            group: {\n                group_name: '',\n                global_schedule: [{date: '', duration: ['', '']}],\n                pupils: [],\n            },\n            indexD: 0,\n        },\n        groupsAll = [\n            {\n                timeN: '',\n                group: {\n                    group_name: '',\n                    global_schedule: [{date: '', duration: ['', '']}],\n                    pupils: [],\n                },\n                indexD: 0,\n            },\n        ]\n\n    Groups.forEach((item, i) => {\n        let dataLes_l = []\n        let indexD = 'f'\n\n        let GLOBAL_SCHEDULE_Local = item.global_schedule ? item.global_schedule : []\n\n        GLOBAL_SCHEDULE_Local.forEach((itemGL, i) => {\n            let time = moment(itemGL.date, 'DD.MM.YYYY').format('YYYY-MM-DD'),\n                time_day = moment().diff(time, 'day')\n\n            if (time_day <= 0) {\n                if (indexD == 'f') {\n                    indexD = i\n                }\n\n                dataLes_l.push(`${time} ${itemGL.duration[0]}`)\n            }\n        })\n\n        if (dataLes_l[0]) {\n            if (indexHours.timeN) {\n                let indexN = moment().diff(dataLes_l[0], 'hours'),\n                    posl = moment().diff(indexHours.timeN, 'hours')\n\n                if ((indexN > posl) & (indexN <= 0)) {\n                    indexHours = {\n                        timeN: dataLes_l[0],\n                        group: item,\n                        indexD: indexD,\n                    }\n                }\n            } else if (!indexHours.timeN) {\n                indexHours = {\n                    timeN: dataLes_l[0],\n                    group: item,\n                    indexD: indexD,\n                }\n            }\n\n            if (dataLes_l[0]) {\n                groupsAll.push({\n                    timeN: dataLes_l[0],\n                    group: item,\n                    indexD: indexD,\n                })\n            }\n        }\n    })\n\n    let groupCon = [\n        {\n            timeN: '',\n            group: {\n                group_name: '',\n                global_schedule: [{date: '', duration: ['', '']}],\n                pupils: [],\n            },\n            indexD: 0,\n        },\n    ]\n\n    let indexGroup = []\n    groupsAll.forEach((item) => {\n        indexGroup.push(moment().diff(item.timeN, 'minutes'))\n    })\n\n    indexGroup.sort((a, b) => b - a)\n\n    indexGroup.forEach((itemIN) => {\n        groupsAll.forEach((item2) => {\n            if (moment().diff(item2.timeN, 'minutes') == itemIN) {\n                let allowAdd = true\n                groupCon.forEach((group) => {\n                    if (group.group._id === item2.group._id) {\n                        allowAdd = false\n                    }\n                })\n                if (allowAdd) {\n                    groupCon.push(item2)\n                }\n            }\n        })\n    })\n\n    if (groupCon[1] != undefined) {\n        groupCon.splice(0, 1)\n    }\n\n    const Today = styled.div({\n        '.site-layout-background': {\n            '.allCol': {\n                padding: '0 7.5px',\n            },\n            '.LessonNow, .AllLesson': {\n                padding: '15px',\n                borderRadius: '2px',\n                backgroundColor: '#fff',\n            },\n        },\n    })\n\n    if (!GROUP) {\n        setGROUP(groupCon[0])\n    }\n\n    const {Content} = Layout\n    return (\n        <Today>\n            <Content style={{margin: '0 16px'}}>\n                <Breadcrumb style={{margin: '16px 0'}}>\n                    <Breadcrumb.Item>Главная</Breadcrumb.Item>\n                    <Breadcrumb.Item>Ближайшие уроки</Breadcrumb.Item>\n                </Breadcrumb>\n                <div\n                    className=\"row site-layout-background\"\n                    style={{padding: '7.5px', minHeight: 360}}\n                >\n                    <div className=\"allCol col-8\">\n                        <LessonNow\n                            rowKey={rowKey}\n                            getUser={getUser}\n                            setRowKey={setRowKey}\n                            GROUP={GROUP}\n                            Group={indexHours}\n                        />\n                    </div>\n                    <div className=\"allCol col-4\">\n                        <AllLesson\n                            Groups={groupCon}\n                            setGROUP={setGROUP}\n                            newGroup={indexHours}\n                            GROUP={GROUP}\n                        />\n                    </div>\n                </div>\n            </Content>\n        </Today>\n    )\n}\n\nexport default Today\n","import React from 'react'\nimport {Breadcrumb, Layout, Table, Tag} from 'antd'\n\nimport styled from '@emotion/styled'\n\nimport moment from 'moment'\n\nconst columns = [\n    {\n        title: '',\n        key: 'time',\n        dataIndex: 'time',\n        fixed: 'left',\n        width: 100,\n        render: (time) => <Tag color=\"cyan\">{time}</Tag>,\n    },\n    {title: 'Понедельник', dataIndex: '1', key: '1'},\n    {title: 'Вторник', dataIndex: '2', key: '2'},\n    {title: 'Среда', dataIndex: '3', key: '3'},\n    {title: 'Четверг', dataIndex: '4', key: '4'},\n    {title: 'Пятница', dataIndex: '5', key: '5'},\n    {title: 'Суббота', dataIndex: '6', key: '6'},\n    {title: 'Воскресенье', dataIndex: '0', key: '7'},\n]\n\nconst СalendarStyle = styled.div({\n    padding: '15px',\n    borderRadius: '2px',\n    backgroundColor: '#fff',\n})\nconst GroupsANDpupils = styled.div({\n    padding: '15px',\n    borderRadius: '2px',\n    backgroundColor: '#fff',\n    marginBottom: '15px',\n})\n\nconst {Content} = Layout\n\nconst Сalendar = ({Groups}) => {\n    const columns2 = Groups.map((item) => {\n        // let name = `${item._id}`\n        return {\n            title: () => (\n                <Tag key={item._id} color=\"magenta\">\n                    {item.group_name}\n                </Tag>\n            ),\n            key: item._id,\n            dataIndex: 'pupil',\n            fixed: 'top',\n            width: 100,\n            render: () => {\n                return (\n                    <>\n                        {item.pupils.map((itemf, i) => (\n                            <div key={`${item._id}${i}`}>\n                                <Tag style={{marginBottom: '5px'}} color=\"green\">\n                                    {itemf.surname} {itemf.name} {itemf.midname}\n                                </Tag>\n                            </div>\n                        ))}\n                    </>\n                )\n            },\n        }\n    })\n\n    const data2 = [\n        {\n            key: '777',\n            pupil: '',\n        },\n    ]\n\n    // ==================\n    const data = Groups.map((items) => {\n        let GLOBAL_SCHEDULE_Local = items.global_schedule\n            ? items.global_schedule\n            : []\n\n        if (GLOBAL_SCHEDULE_Local[0]) {\n            let wekDay = {}\n\n            items.global_schedule.forEach((day) => {\n                let wek_day = moment(day.date, 'DD.MM.YYYY').day()\n\n                wekDay[wek_day] = items.group_name\n            })\n\n            return {\n                key: items._id,\n                ...wekDay,\n                time: items.global_schedule[0].duration[0],\n            }\n        } else {\n            return {\n                key: items._id,\n                1: `Для группы: \"${items.group_name}\" не создано расписание.`,\n                time: '',\n            }\n        }\n    })\n\n    let finalDate = []\n\n    for (let inc = 0; inc <= 24; inc++) {\n        data.forEach((item) => {\n            let hh = moment(item.time, 'hh:mm').hours()\n            if (hh == inc) {\n                finalDate.push(item)\n            }\n        })\n    }\n\n    return (\n        <Content style={{margin: '0 16px'}}>\n            <Breadcrumb style={{margin: '16px 0'}}>\n                <Breadcrumb.Item>Главная</Breadcrumb.Item>\n                <Breadcrumb.Item>Расписание уроков</Breadcrumb.Item>\n            </Breadcrumb>\n            <GroupsANDpupils>\n                <div className=\"row site-layout-background\" style={{padding: '15px'}}>\n                    <h4>Группы</h4>\n                    <Table\n                        bordered\n                        columns={columns2}\n                        dataSource={data2}\n                        scroll={{x: 1000}}\n                    />\n                </div>\n            </GroupsANDpupils>\n            <СalendarStyle>\n                <div className=\"row site-layout-background\" style={{padding: '15px'}}>\n                    <h4>Расписание</h4>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={finalDate}\n                        scroll={{x: 1300}}\n                    />\n                </div>\n            </СalendarStyle>\n        </Content>\n    )\n}\n\nexport default Сalendar\n","import React from 'react';\nimport {Breadcrumb, Layout, Table} from 'antd';\nimport {Link} from \"react-router-dom\"\n\nimport ReturnAge from './../../home-page/return-age/returnAge.js'\n\nimport styled from '@emotion/styled';\n\nconst AllPupilsBox = styled.div({\n    padding: '15px',\n    borderRadius: '2px',\n    backgroundColor: '#fff'\n})\n\nconst AllPupils = ({AllPupils}) => {\n\n    const {Content} = Layout;\n    const {Column} = Table;\n\n    const data = []\n\n    AllPupils.forEach(item => {\n\n        let {surname, name, midname, dateOfBirth, gender, phone, discord, _id} = item\n\n        let i = true\n\n        data.forEach(item => {\n            if (item.key == _id) {\n                i = false\n            }\n        })\n\n        if (i) {\n            data.push({\n                key: _id,\n                surname: [surname, _id],\n                name: name,\n                midname: midname,\n                dateOfBirth: ReturnAge(dateOfBirth),\n                gender: gender,\n                phone: phone,\n                discord: discord\n            })\n        }\n    })\n\n    return (\n\n        <Content style={{margin: '0 16px'}}>\n            <Breadcrumb style={{margin: '16px 0'}}>\n                <Breadcrumb.Item>Главная</Breadcrumb.Item>\n                <Breadcrumb.Item>Таблица Учеников</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"site-layout-background\" style={{padding: '10px', minHeight: 360}}>\n                <AllPupilsBox>\n                    <Table dataSource={data}>\n                        <Column\n                            title=\"Фамилия\"\n                            dataIndex=\"surname\"\n                            key=\"surname\"\n                            render={(surname) => (\n                                <Link\n                                    className=\"link-info\"\n                                    to={`/student/${surname[1]}`}>\n                                    {surname[0]}\n                                </Link>\n                            )}/>\n                        <Column title=\"Имя\" dataIndex=\"name\" key=\"name\"/>\n                        <Column title=\"Отчество\" dataIndex=\"midname\" key=\"midname\"/>\n                        <Column title=\"Возраст\" dataIndex=\"dateOfBirth\" key=\"dateOfBirth\"/>\n                        <Column title=\"Пол\" dataIndex=\"gender\" key=\"gender\"/>\n                        <Column title=\"Номер телефона\" dataIndex=\"phone\" key=\"phone\"/>\n                        <Column title=\"Дискорд никнейм\" dataIndex=\"discord\" key=\"discord\"/>\n                    </Table>\n                </AllPupilsBox>\n            </div>\n        </Content>\n    )\n}\n\nexport default AllPupils","import React from 'react';\nimport {Breadcrumb, Layout, Table} from 'antd';\nimport {Link} from \"react-router-dom\"\n\nimport styled from '@emotion/styled';\n\nconst AllGroupsBox = styled.div({\n    padding: '15px',\n    borderRadius: '2px',\n    backgroundColor: '#fff'\n})\n\nconst AllGroups = ({AllGroups}) => {\n    const {Content} = Layout;\n    const {Column} = Table;\n\n    const data = AllGroups.map(item => {\n\n        let {group_name, level, places, pupils, _id, global_schedule} = item\n\n        let time = ''\n\n        if (global_schedule) {\n            if (global_schedule[0]) {\n                time = `с ${global_schedule[0].duration[0]} до ${global_schedule[0].duration[1]}`\n            }\n        }\n\n        return ({\n            key: _id,\n            group_name: [group_name, _id],\n            level: level,\n            places: places,\n            free_places: places - pupils.length,\n            time: time\n        })\n    })\n\n    return (\n\n        <Content style={{margin: '0 16px'}}>\n            <Breadcrumb style={{margin: '16px 0'}}>\n                <Breadcrumb.Item>Главная</Breadcrumb.Item>\n                <Breadcrumb.Item>Таблица Групп</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"site-layout-background\" style={{padding: '10px', minHeight: 360}}>\n                <AllGroupsBox>\n                    <Table dataSource={data}>\n                        <Column\n                            title=\"Имя Группы\"\n                            dataIndex=\"group_name\"\n                            key=\"group_name\"\n                            render={(group_name) => (\n                                <Link\n                                    className=\"link-info\"\n                                    to={`/group/${group_name[1]}`}>\n                                    {group_name[0]}\n                                </Link>\n                            )}/>\n                        <Column title=\"Уровень\" dataIndex=\"level\" key=\"level\"/>\n                        <Column title=\"Количество мест\" dataIndex=\"places\" key=\"places\"/>\n                        <Column title=\"Свободных мест\" dataIndex=\"free_places\" key=\"free_places\"/>\n                        <Column title=\"Время занятий\" dataIndex=\"time\" key=\"time\"/>\n                    </Table>\n                </AllGroupsBox>\n            </div>\n        </Content>\n    )\n}\n\nexport default AllGroups","import React from \"react\";\nimport {Breadcrumb} from \"antd\";\nimport TrialLessonSchedule from \"../trial-lesson-schedule/trial-lesson-schedule\";\nimport {TrialLessonsStyle} from \"../trial-lessons.style\";\n\nconst TrialLessonsTutor = () => {\n    return (\n        <TrialLessonsStyle>\n            <Breadcrumb style={{margin: '0 0 16px 0'}}>\n                <Breadcrumb.Item>Главная</Breadcrumb.Item>\n                <Breadcrumb.Item>Пробные уроки</Breadcrumb.Item>\n            </Breadcrumb>\n            <TrialLessonSchedule/>\n        </TrialLessonsStyle>\n    )\n}\n\nexport default TrialLessonsTutor","import React, {useEffect, useState} from 'react'\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom'\n\nimport {loading, Swalclose} from '../../alert/alert'\nimport Url from './../../url/url.js'\n\nimport Today from './today/today.js'\nimport Сalendar from './calendar/calendar.js'\nimport SearchAll from './../search/search.js'\nimport StudentPage from '../home-page/student/pageStudent/pageStudent.js'\nimport GroupPage from '../home-page/group/group-page/group-page.js'\n\nimport AllPupils from './all-pupils/all-pupils.js'\nimport AllGroups from './all-groups/all-groups.js'\n\nimport {Layout, Menu} from 'antd'\nimport {\n    CalendarOutlined,\n    ClockCircleOutlined,\n    LikeOutlined,\n    LogoutOutlined,\n    SearchOutlined,\n    TeamOutlined,\n    UserOutlined,\n} from '@ant-design/icons'\n\nimport styled from '@emotion/styled'\nimport errorHandler from '../error-handler/error-handler'\nimport TrialLessonsTutor from '../trial-lessons/trial-lessons-tutor/trial-lessons-tutor'\n\nconst axios = require('axios') // AJAX\nlet jwt = require('jsonwebtoken')\n\nconst {Sider} = Layout\n\nconst HomePageTutor = ({logOut}) => {\n    const [collapsed, setCollapsed] = useState(false)\n    const [rowKey, setRowKey] = useState([])\n    const [GROUP, setGROUP] = useState({\n        group: {\n            group_name: '',\n            global_schedule: [{date: '00', duration: ['', '']}],\n            pupils: [],\n            _id: '3443',\n        },\n        indexD: 0,\n    })\n    const [user, setUser] = useState({\n        groups: [],\n        login: '',\n        midname: '',\n        name: '',\n        role: '',\n        surname: '',\n        _id: '456456',\n    })\n    const [Groups, setGroups] = useState([])\n\n    let Pupils = []\n    Groups.forEach((item) => {\n        Pupils.push(...item.pupils)\n    })\n\n    const getGroups = (l_user) => {\n        let mass_id = l_user.groups.map((item) => item._id)\n\n        if (mass_id[0]) {\n            axios({\n                method: 'post',\n                url: `${Url}/CRM/Groups/getByIds`,\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n                },\n                data: {\n                    ids: mass_id,\n                },\n            })\n                .then((res) => {\n                    setGroups(res.data)\n                    Swalclose()\n                })\n                .catch((error) => {\n                    errorHandler(getGroups, error)\n                })\n        } else {\n            Swalclose()\n        }\n    }\n\n    const getUser = (title) => {\n        loading(title, '')\n\n        axios({\n            method: 'get',\n            url: `${Url}/CRM/Teachers/${\n                jwt.decode(localStorage.getItem('tokenID')).id\n            }`,\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n            },\n        })\n            .then((res) => {\n                let {data} = res\n                if (!data) {\n                    localStorage.removeItem('tokenID')\n                    window.location.replace('/')\n                }\n\n                setUser(data)\n                getGroups(data)\n            })\n            .catch((error) => {\n                errorHandler(getGroups, error)\n            })\n    }\n\n    useEffect(() => {\n        getUser('Получение данных...')\n    }, [])\n\n    useEffect(() => {\n        document.querySelector('.ant-layout-sider-trigger').style.width = collapsed\n            ? '80px'\n            : '250px'\n    })\n\n    const Vag = styled.div({\n        '.ant-menu': {\n            height: '100vh',\n            position: 'relative',\n            width: collapsed ? '80px' : '250px',\n        },\n        '.vag123': {\n            position: 'absolute',\n            bottom: '48px',\n            width: collapsed ? '80px' : '',\n        },\n        '.site-layout': {\n            padding: '15px',\n        },\n        '& > section': {\n            '& > aside': {\n                position: 'fixed',\n                zIndex: 99,\n            },\n            '& > section': {\n                marginLeft: collapsed ? '80px' : '250px',\n            },\n        },\n    })\n\n    return (\n        <Router>\n            <Vag>\n                <Layout style={{minHeight: '100vh'}}>\n                    <Sider\n                        collapsible\n                        collapsed={collapsed}\n                        onCollapse={() => setCollapsed(!collapsed)}\n                    >\n                        <div className=\"logo\"/>\n                        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                            <Menu.Item key=\"Search\" icon={<SearchOutlined/>}>\n                                <SearchAll\n                                    tutorid={`&tutorID=${\n                                        jwt.decode(localStorage.getItem('tokenID')).id\n                                    }`}\n                                />\n                            </Menu.Item>\n                            <Menu.Item key=\"1\" icon={<ClockCircleOutlined/>}>\n                                <Link to=\"/\">Сегодня</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\" icon={<CalendarOutlined/>}>\n                                <Link to=\"/calendar\">Расписание</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"3\" icon={<UserOutlined/>}>\n                                <Link to=\"/pupils\">Ученики</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"4\" icon={<TeamOutlined/>}>\n                                <Link to=\"/groups\">Группы</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"trial-lessons-tutor\" icon={<LikeOutlined/>}>\n                                <Link to=\"/trial-lessons-tutor\">Пробные уроки</Link>\n                            </Menu.Item>\n                            <Menu.Item\n                                onClick={() => {\n                                    localStorage.removeItem('tokenID')\n                                    logOut()\n                                }}\n                                key=\"Logout\"\n                                className=\"vag123\"\n                                icon={<LogoutOutlined/>}\n                            >\n                                <Link to=\"/\">Выход: {user.login}</Link>\n                            </Menu.Item>\n                        </Menu>\n                    </Sider>\n                    <Layout className=\"site-layout\">\n                        <div>\n                            <Switch>\n                                <Route exact path=\"/\">\n                                    <Today\n                                        rowKey={rowKey}\n                                        getUser={getUser}\n                                        setRowKey={setRowKey}\n                                        GROUP={GROUP}\n                                        setGROUP={setGROUP}\n                                        Groups={Groups}\n                                    />\n                                </Route>\n                                <Route exact path=\"/calendar\">\n                                    <Сalendar Groups={Groups}/>\n                                </Route>\n                                <Route exact path=\"/pupils\">\n                                    <AllPupils AllPupils={Pupils}/>\n                                </Route>\n                                <Route exact path=\"/groups\">\n                                    <AllGroups AllGroups={Groups}/>\n                                </Route>\n                                <Route\n                                    exact\n                                    path=\"/trial-lessons-tutor\"\n                                    component={TrialLessonsTutor}\n                                />\n\n                                <Route\n                                    exact\n                                    path={`/student/:id`}\n                                    children={() => <StudentPage/>}\n                                />\n                                <Route\n                                    exact\n                                    path={`/group/:id`}\n                                    children={() => <GroupPage/>}\n                                />\n                            </Switch>\n                        </div>\n                    </Layout>\n                </Layout>\n            </Vag>\n        </Router>\n    )\n}\n\nexport default HomePageTutor\n","import React, {useEffect, useState} from 'react'\n\nimport './App.css'\nimport FormlogIn from './form-log-In/form-log-in.js'\nimport HomePage from './home-page/home-page.js'\nimport Url from './../url/url.js'\nimport HomePageTutor from './home-page-tutor/home-page-tutor.js'\nimport errorHandler from '../components/error-handler/error-handler'\n\nconst App = () => {\n    const axios = require('axios') // AJAX\n\n    let jwt = require('jsonwebtoken')\n\n    const [User, setUser] = useState('')\n    let form = <FormlogIn setUser={setUser}/>\n    let page = localStorage.getItem('tokenID') ? (\n        <HomePage logOut={setUser}/>\n    ) : (\n        form\n    )\n    const token_verification = () => {\n        if (page !== form) {\n            axios({\n                method: 'get',\n                url: `${Url}/auth-check`,\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('tokenID')}`,\n                },\n            }).catch((error) => errorHandler(token_verification, error))\n        }\n    }\n    useEffect(token_verification, [])\n\n    if (localStorage.getItem('tokenID')) {\n        if (jwt.decode(localStorage.getItem('tokenID')).accountType === 'teacher') {\n            page = <HomePageTutor logOut={setUser}/>\n        }\n    }\n\n    return <>{page}</>\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from \"./store\";\nimport './index.css';\nimport App from './components/App.js';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'))","import styled from \"@emotion/styled\"\n\nexport const WrapperTasks = styled.div`\n  position: ${props => props.portable ? \"absolute\" : \"static\"};\n  transition: all .5s ease;\n  z-index: 10;\n  bottom: ${props => props.opened ? \"-15px\" : props.type === 2 ? \"-300px\" : \"-280px\"};\n  width: 100%;\n  border-radius: ${props => props.portable ? \"10px 10px 0 0\" : \"0\"};\n  background: ${props => props.portable ? \"#1890FF\" : \"white\"};\n  border: 1px solid ${props => props.portable ? \"#1890FF\" : \"white\"};\n  padding: 0 10px;\n  \n  > .buttonUp {\n    position: relative;\n    top: -13px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    > button {\n      display: flex;\n      align-items: center;\n      border-radius: 4px;\n      border: 1px solid #1890FF;\n      background: #1890FF;\n      color: white;\n      transition: all .2s ease;\n      width: min-content;\n      &:hover {\n        background: white;\n        color: #1890FF;\n      }\n      .anticon-double-left {\n        margin: 0 5px 0 2.5px;\n        transform: rotate(${props => props.opened ? -90 : 90}deg);\n      }\n    }\n  }\n`\n\nexport const CreateTask = styled.div`\n  display: flex;\n  overflow: hidden auto;\n  flex-direction: column;\n  font-family: Tahoma;\n  .ant-picker {\n    cursor: pointer;\n    background: transparent;\n    border: none;\n    .ant-picker-suffix {\n      color: ${props => props.portable ? \"white\" : \"rgba(0, 0, 0, 0.75)\"};\n    }\n  }\n  .data {\n      ${props => props.portable ? \"\" : `\n      font-weight: 500;\n      margin: 5px 0; \n      padding: 8px 10px;\n      background: #E8EDF7;\n      border-radius: 5px;\n    `}\n    padding: 5px 0;\n    border: none;\n    border-bottom: 1px solid ${props => props.portable ? \"rgba(255, 255, 255, 0.9)\" : \"transparent\"};\n  }\n  input, textarea {\n    width: 100%;\n    color: ${props => props.portable ? \"white\" : \"rgba(0, 0, 0, 0.75)\"};\n    background: transparent;\n    border: none;\n  }\n  input:focus, textarea:focus, .ant-picker:focus {\n      outline: none;\n  }\n  input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {\n    color: ${props => props.portable ? \"rgba(255, 255, 255, 0.7)\" : \"\"};\n  }\n  textarea {\n    resize: none;\n    width: 100%;\n  }\n  .type__select {\n    justify-content: space-between;\n    > select:first-of-type {\n      cursor: pointer;\n      width: 100%;\n      border: none;\n      color: ${props => props.portable ? \"white\" : \"rgba(0, 0, 0, 0.75)\"};\n      background: transparent;\n      > option {\n        color: black;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n  }\n`\nexport const TagBlock = styled.div`\n  display: flex;\n  align-items: center;\n  .ant-select-selection-overflow-item {\n    max-width: 100px;\n  }\n  > div {\n    flex: 0 0 100%;\n  }\n`\nexport const SelectResponsibleAndDateStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${props => props.portable ? \"white\" : \"rgba(0, 0, 0, 0.75)\"};\n  * {\n    margin: 0;\n  }\n  .background-gray {\n    background: ${props => props.portable ? \"transparent\" : \"#E8EDF7\"};\n  }\n  .ant-select-selection-search-input {\n    color: black;\n  }\n  > div {\n    border-radius: 5px;\n    margin: 0 0 5px 0;\n    flex: 0 0 calc(100% / 3.1);\n    max-width: calc(100% / 3.1);\n    > *:not(span) {\n      border: none;\n      border-radius: ${props => props.portable ? 0 : 5}px;\n      margin: 2.5px;\n      background: ${props => props.portable ? \"transparent\" : \"#E8EDF7\"};\n      border-bottom: 1px solid ${props => props.portable ? \"white\" : \"transparent\"};\n      width: 100%;\n      height: 30px;\n    }\n    > .ant-picker {\n      width: 100%;\n      border-bottom: 1px solid ${props => props.portable ? \"white\" : \"transparent\"};\n    }\n  }\n`\nexport const SubmitButton = styled.div`\n  > button {\n    border-radius: 4px;\n    color: ${props => props.portable ? \"#1890FF\" : \"white\"};\n    border: none;\n    padding: 2.5px 15px;\n    background: ${props => props.portable ? \"white\" : \"#1890FF\"};\n    margin: 10px 0 5px 0;\n    transition: all .2s ease;\n    ${props => props.portable ? \"\" : `\n      border-bottom: 3.5px solid #1D74FF;\n    `}\n    &:hover {\n      background: ${props => props.portable ? \"lightgray\" : \"#1083FF\"};\n    }\n    &:active {\n      background: ${props => props.portable ? \"lightgray\" : \"#1D74FF\"};\n    }\n  }\n`\nexport const OpacityParagraph = styled.p`\n  opacity: 0.8;\n  width: 95%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\nexport const OpacityContainer = styled.div`\n  display: flex;\n  opacity: 0.8;\n  width: 95%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\nexport const DeleteButton = styled.button`\n  border: none;\n  background: transparent;\n  position: absolute;\n  top: 0;\n  right: 0;\n  > span {\n    color: gray;\n    transition: all .2s ease;\n    &:hover {\n      color: lightgray;\n    }\n  }\n`\nexport const WrapperTaskComponent = styled.div`\n  padding: 0 45px 0 0;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  > div > p:first-of-type {\n    font-weight: bold;\n  }\n  > .done {\n    text-decoration: ${props => props.done ? \"line-through\" : \"none\"};\n  }\n  p {\n    margin: 0;\n  }\n`\nexport const CheckboxContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 5px;\n`\n"],"sourceRoot":""}